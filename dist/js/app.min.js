!(function (i) {
	var s = {};
	function n(t) {
		if (s[t]) return s[t].exports;
		var e = (s[t] = { i: t, l: !1, exports: {} });
		return i[t].call(e.exports, e, e.exports, n), (e.l = !0), e.exports;
	}
	(n.m = i),
		(n.c = s),
		(n.d = function (t, e, i) {
			n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i });
		}),
		(n.r = function (t) {
			"undefined" != typeof Symbol &&
				Symbol.toStringTag &&
				Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
				Object.defineProperty(t, "__esModule", { value: !0 });
		}),
		(n.t = function (e, t) {
			if ((1 & t && (e = n(e)), 8 & t)) return e;
			if (4 & t && "object" == typeof e && e && e.__esModule) return e;
			var i = Object.create(null);
			if (
				(n.r(i),
				Object.defineProperty(i, "default", { enumerable: !0, value: e }),
				2 & t && "string" != typeof e)
			)
				for (var s in e)
					n.d(
						i,
						s,
						function (t) {
							return e[t];
						}.bind(null, s)
					);
			return i;
		}),
		(n.n = function (t) {
			var e =
				t && t.__esModule
					? function () {
							return t.default;
					  }
					: function () {
							return t;
					  };
			return n.d(e, "a", e), e;
		}),
		(n.o = function (t, e) {
			return Object.prototype.hasOwnProperty.call(t, e);
		}),
		(n.p = ""),
		n((n.s = 2));
})([
	function (t, e, i) {
		window,
			(t.exports = (function (i) {
				var s = {};
				function n(t) {
					if (s[t]) return s[t].exports;
					var e = (s[t] = { i: t, l: !1, exports: {} });
					return i[t].call(e.exports, e, e.exports, n), (e.l = !0), e.exports;
				}
				return (
					(n.m = i),
					(n.c = s),
					(n.d = function (t, e, i) {
						n.o(t, e) ||
							Object.defineProperty(t, e, { enumerable: !0, get: i });
					}),
					(n.r = function (t) {
						"undefined" != typeof Symbol &&
							Symbol.toStringTag &&
							Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
							Object.defineProperty(t, "__esModule", { value: !0 });
					}),
					(n.t = function (e, t) {
						if ((1 & t && (e = n(e)), 8 & t)) return e;
						if (4 & t && "object" == typeof e && e && e.__esModule) return e;
						var i = Object.create(null);
						if (
							(n.r(i),
							Object.defineProperty(i, "default", { enumerable: !0, value: e }),
							2 & t && "string" != typeof e)
						)
							for (var s in e)
								n.d(
									i,
									s,
									function (t) {
										return e[t];
									}.bind(null, s)
								);
						return i;
					}),
					(n.n = function (t) {
						var e =
							t && t.__esModule
								? function () {
										return t.default;
								  }
								: function () {
										return t;
								  };
						return n.d(e, "a", e), e;
					}),
					(n.o = function (t, e) {
						return Object.prototype.hasOwnProperty.call(t, e);
					}),
					(n.p = ""),
					n((n.s = 0))
				);
			})([
				function (o, t, e) {
					"use strict";
					e.r(t);
					var b = [],
						y = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
						w = [
							"January",
							"February",
							"March",
							"April",
							"May",
							"June",
							"July",
							"August",
							"September",
							"October",
							"November",
							"December",
						],
						x = { t: "top", r: "right", b: "bottom", l: "left", c: "centered" };
					function C() {}
					var a = ["click", "focusin", "keydown", "input"];
					function s(e) {
						a.forEach(function (t) {
							e.addEventListener(t, e === document ? l : d);
						});
					}
					function S(i) {
						return Array.isArray(i)
							? i.map(S)
							: "[object Object]" === $(i)
							? Object.keys(i).reduce(function (t, e) {
									return (t[e] = S(i[e])), t;
							  }, {})
							: i;
					}
					function _(t, e) {
						var i,
							s = t.calendar.querySelector(".qs-overlay"),
							s = s && !s.classList.contains("qs-hidden");
						(e = e || new Date(t.currentYear, t.currentMonth)),
							(t.calendar.innerHTML = [
								((i = e),
								[
									'<div class="qs-controls' + (s ? " qs-blur" : "") + '">',
									'<div class="qs-arrow qs-left"></div>',
									'<div class="qs-month-year">',
									'<span class="qs-month">' +
										t.months[i.getMonth()] +
										"</span>",
									'<span class="qs-year">' + i.getFullYear() + "</span>",
									"</div>",
									'<div class="qs-arrow qs-right"></div>',
									"</div>",
								].join("")),
								(function (t, e, i) {
									var s = e.currentMonth,
										n = e.currentYear,
										o = e.dateSelected,
										a = e.maxDate,
										r = e.minDate,
										l = e.showAllDates,
										d = e.days,
										c = e.disabledDates,
										h = e.startDay,
										u = e.weekendIndices,
										m = e.events,
										g = e.getRange ? e.getRange() : {},
										p = +g.start,
										f = +g.end,
										g = D(new Date(t).setDate(1)),
										v = g.getDay() - h,
										t = v < 0 ? 7 : 0,
										y =
											(g.setMonth(g.getMonth() + 1), g.setDate(0), g.getDate()),
										b = [],
										w = t + 7 * (((v + y) / 7) | 0);
									w += (v + y) % 7 ? 7 : 0;
									for (var x = 1; x <= w; x++) {
										var C = (x - 1) % 7,
											S = d[C],
											_ = x - (0 <= v ? v : 7 + v),
											L = new Date(n, s, _),
											I = m[+L],
											E = _ < 1 || y < _,
											_ = E ? (_ < 1 ? -1 : 1) : 0,
											k = E && !l,
											T = k ? "" : L.getDate(),
											A = +L == +o,
											C = C === u[0] || C === u[1],
											M = p != f,
											S = "qs-square " + S;
										I && !k && (S += " qs-event"),
											E && (S += " qs-outside-current-month"),
											(!l && E) || (S += " qs-num"),
											A && (S += " qs-active"),
											(c[+L] ||
												e.disabler(L) ||
												(C && e.noWeekends) ||
												(r && +L < +r) ||
												(a && +a < +L)) &&
												!k &&
												(S += " qs-disabled"),
											+D(new Date()) == +L && (S += " qs-current"),
											+L == p && f && M && (S += " qs-range-start"),
											p < +L && +L < f && (S += " qs-range-middle"),
											+L == f && p && M && (S += " qs-range-end"),
											k && ((S += " qs-empty"), (T = "")),
											b.push(
												'<div class="' +
													S +
													'" data-direction="' +
													_ +
													'">' +
													T +
													"</div>"
											);
									}
									h = d
										.map(function (t) {
											return '<div class="qs-square qs-day">' + t + "</div>";
										})
										.concat(b);
									return (
										h.unshift(
											'<div class="qs-squares' + (i ? " qs-blur" : "") + '">'
										),
										h.push("</div>"),
										h.join("")
									);
								})(e, t, s),
								((i = t.overlayPlaceholder),
								(e = t.overlayButton),
								[
									'<div class="qs-overlay' + (s ? "" : " qs-hidden") + '">',
									"<div>",
									'<input class="qs-overlay-year" placeholder="' +
										i +
										'" inputmode="numeric" />',
									'<div class="qs-close">&#10005;</div>',
									"</div>",
									'<div class="qs-overlay-month-container">' +
										t.overlayMonths
											.map(function (t, e) {
												return (
													'<div class="qs-overlay-month" data-month-num="' +
													e +
													'">' +
													t +
													"</div>"
												);
											})
											.join("") +
										"</div>",
									'<div class="qs-submit qs-disabled">' + e + "</div>",
									"</div>",
								].join("")),
							].join("")),
							s &&
								window.requestAnimationFrame(function () {
									M(!0, t);
								});
					}
					function L(t, e, i) {
						var s = e.el,
							n = e.calendar.querySelector(".qs-active"),
							o = t.textContent,
							a = e.sibling;
						((s.disabled || s.readOnly) && e.respectDisabledReadOnly) ||
							((e.dateSelected = i
								? void 0
								: new Date(e.currentYear, e.currentMonth, o)),
							n && n.classList.remove("qs-active"),
							i || t.classList.add("qs-active"),
							I(s, e, i),
							i || T(e),
							a &&
								(r({ instance: e, deselect: i }),
								e.first &&
									!a.dateSelected &&
									((a.currentYear = e.currentYear),
									(a.currentMonth = e.currentMonth),
									(a.currentMonthName = e.currentMonthName)),
								_(e),
								_(a)),
							e.onSelect(e, i ? void 0 : new Date(e.dateSelected)));
					}
					function r(t) {
						var e = t.instance.first ? t.instance : t.instance.sibling,
							i = e.sibling;
						e === t.instance
							? t.deselect
								? ((e.minDate = e.originalMinDate),
								  (i.minDate = i.originalMinDate))
								: (i.minDate = e.dateSelected)
							: t.deselect
							? ((i.maxDate = i.originalMaxDate),
							  (e.maxDate = e.originalMaxDate))
							: (e.maxDate = i.dateSelected);
					}
					function I(t, e, i) {
						e.nonInput ||
							(i
								? (t.value = "")
								: e.formatter !== C
								? e.formatter(t, e.dateSelected, e)
								: (t.value = e.dateSelected.toDateString()));
					}
					function E(t, e, i, s) {
						i || s
							? (i && (e.currentYear = +i), s && (e.currentMonth = +s))
							: ((e.currentMonth += t.contains("qs-right") ? 1 : -1),
							  12 === e.currentMonth
									? ((e.currentMonth = 0), e.currentYear++)
									: -1 === e.currentMonth &&
									  ((e.currentMonth = 11), e.currentYear--)),
							(e.currentMonthName = e.months[e.currentMonth]),
							_(e),
							e.onMonthChange(e);
					}
					function n(t) {
						if (!t.noPosition) {
							var e = t.position.top,
								i = t.position.right;
							if (t.position.centered)
								return t.calendarContainer.classList.add("qs-centered");
							var s = t.positionedEl.getBoundingClientRect(),
								n = t.el.getBoundingClientRect(),
								o = t.calendarContainer.getBoundingClientRect(),
								e = n.top - s.top + (e ? -1 * o.height : n.height) + "px",
								s = n.left - s.left + (i ? n.width - o.width : 0) + "px";
							t.calendarContainer.style.setProperty("top", e),
								t.calendarContainer.style.setProperty("left", s);
						}
					}
					function k(t) {
						return "[object Date]" === $(t) && "Invalid Date" !== t.toString();
					}
					function D(t) {
						if (k(t) || ("number" == typeof t && !isNaN(t)))
							return (
								(t = new Date(+t)),
								new Date(t.getFullYear(), t.getMonth(), t.getDate())
							);
					}
					function T(t) {
						t.disabled ||
							t.calendarContainer.classList.contains("qs-hidden") ||
							t.alwaysShow ||
							("overlay" !== t.defaultView && M(!0, t),
							t.calendarContainer.classList.add("qs-hidden"),
							t.onHide(t));
					}
					function A(t) {
						t.disabled ||
							(t.calendarContainer.classList.remove("qs-hidden"),
							"overlay" === t.defaultView && M(!1, t),
							n(t),
							t.onShow(t));
					}
					function M(t, e) {
						var e = e.calendar,
							i = e.querySelector(".qs-overlay"),
							s = i.querySelector(".qs-overlay-year"),
							n = e.querySelector(".qs-controls"),
							e = e.querySelector(".qs-squares");
						t
							? (i.classList.add("qs-hidden"),
							  n.classList.remove("qs-blur"),
							  e.classList.remove("qs-blur"),
							  (s.value = ""))
							: (i.classList.remove("qs-hidden"),
							  n.classList.add("qs-blur"),
							  e.classList.add("qs-blur"),
							  s.focus());
					}
					function P(t, e, i, s) {
						var n = isNaN(+new Date().setFullYear(e.value || void 0)),
							o = n ? null : e.value;
						13 === t.which || 13 === t.keyCode || "click" === t.type
							? s
								? E(null, i, o, s)
								: n || e.classList.contains("qs-disabled") || E(null, i, o)
							: i.calendar.contains(e) &&
							  i.calendar
									.querySelector(".qs-submit")
									.classList[n ? "add" : "remove"]("qs-disabled");
					}
					function $(t) {
						return {}.toString.call(t);
					}
					function O(e) {
						b.forEach(function (t) {
							t !== e && T(t);
						});
					}
					function l(t) {
						if (!t.__qs_shadow_dom) {
							var e = t.which || t.keyCode,
								i = t.type,
								s = t.target,
								n = s.classList,
								o = b.filter(function (t) {
									return t.calendar.contains(s) || t.el === s;
								})[0],
								a = o && o.calendar.contains(s);
							if (!(o && o.isMobile && o.disableMobile))
								if ("click" === i) {
									if (!o) return b.forEach(T);
									if (!o.disabled) {
										var r = o.calendar,
											l = o.calendarContainer,
											d = o.disableYearOverlay,
											c = o.nonInput,
											h = r.querySelector(".qs-overlay-year"),
											u = !!r.querySelector(".qs-hidden"),
											r = r.querySelector(".qs-month-year").contains(s),
											m = s.dataset.monthNum;
										if (o.noPosition && !a)
											(l.classList.contains("qs-hidden") ? A : T)(o);
										else if (n.contains("qs-arrow")) E(n, o);
										else if (r || n.contains("qs-close")) d || M(!u, o);
										else if (m) P(t, h, o, m);
										else if (!n.contains("qs-disabled"))
											if (n.contains("qs-num")) {
												var g = s.textContent,
													l = +s.dataset.direction,
													r = new Date(o.currentYear, o.currentMonth + l, g);
												if (l) {
													(o.currentYear = r.getFullYear()),
														(o.currentMonth = r.getMonth()),
														(o.currentMonthName = w[o.currentMonth]),
														_(o);
													for (
														var p,
															f = o.calendar.querySelectorAll(
																'[data-direction="0"]'
															),
															v = 0;
														!p;

													) {
														var y = f[v];
														y.textContent === g && (p = y), v++;
													}
													s = p;
												}
												+r == +o.dateSelected
													? L(s, o, !0)
													: s.classList.contains("qs-disabled") || L(s, o);
											} else
												n.contains("qs-submit")
													? P(t, h, o)
													: c && s === o.el && (A(o), O(o));
									}
								} else
									"focusin" === i && o
										? (A(o), O(o))
										: "keydown" === i && 9 === e && o
										? T(o)
										: "keydown" === i && o && !o.disabled
										? ((d = !o.calendar
												.querySelector(".qs-overlay")
												.classList.contains("qs-hidden")),
										  13 === e && d && a
												? P(t, s, o)
												: 27 === e && d && a && M(!0, o))
										: "input" === i &&
										  o &&
										  o.calendar.contains(s) &&
										  ((u = o.calendar.querySelector(".qs-submit")),
										  (m = s.value
												.split("")
												.reduce(function (t, e) {
													return t || "0" !== e
														? t + (e.match(/[0-9]/) ? e : "")
														: "";
												}, "")
												.slice(0, 4)),
										  (s.value = m),
										  u.classList[4 === m.length ? "remove" : "add"](
												"qs-disabled"
										  ));
						}
					}
					function d(t) {
						l(t), (t.__qs_shadow_dom = !0);
					}
					function c(e, i) {
						a.forEach(function (t) {
							e.removeEventListener(t, i);
						});
					}
					function F() {
						A(this);
					}
					function z() {
						T(this);
					}
					function N(t, e) {
						var i = D(t),
							s = this.currentYear,
							n = this.currentMonth,
							o = this.sibling;
						if (null == t)
							return (
								(this.dateSelected = void 0),
								I(this.el, this, !0),
								o && (r({ instance: this, deselect: !0 }), _(o)),
								_(this),
								this
							);
						if (!k(t))
							throw new Error("`setDate` needs a JavaScript Date object.");
						if (this.disabledDates[+i] || i < this.minDate || i > this.maxDate)
							throw new Error("You can't manually set a date that's disabled.");
						(this.dateSelected = i),
							e &&
								((this.currentYear = i.getFullYear()),
								(this.currentMonth = i.getMonth()),
								(this.currentMonthName = this.months[i.getMonth()])),
							I(this.el, this),
							o && (r({ instance: this }), _(o));
						t = s === i.getFullYear() && n === i.getMonth();
						return t || e ? _(this, i) : t || _(this, new Date(s, n, 1)), this;
					}
					function q(t) {
						return i(this, t, !0);
					}
					function j(t) {
						return i(this, t);
					}
					function i(t, e, i) {
						var s = t.dateSelected,
							n = t.first,
							o = t.sibling,
							a = t.minDate,
							r = t.maxDate,
							l = D(e),
							d = i ? "Min" : "Max";
						function c() {
							return "original" + d + "Date";
						}
						function h() {
							return d.toLowerCase() + "Date";
						}
						function u() {
							return "set" + d;
						}
						function m() {
							throw new Error("Out-of-range date passed to " + u());
						}
						if (null == e)
							(t[c()] = void 0),
								o
									? ((o[c()] = void 0),
									  i
											? ((n && !s) || (!n && !o.dateSelected)) &&
											  ((t.minDate = void 0), (o.minDate = void 0))
											: ((n && !o.dateSelected) || (!n && !s)) &&
											  ((t.maxDate = void 0), (o.maxDate = void 0)))
									: (t[h()] = void 0);
						else {
							if (!k(e)) throw new Error("Invalid date passed to " + u());
							o
								? (((n && i && (s || r) < l) ||
										(n && !i && l < (o.dateSelected || a)) ||
										(!n && i && l > (o.dateSelected || r)) ||
										(!n && !i && l < (s || a))) &&
										m(),
								  (t[c()] = l),
								  (o[c()] = l),
								  ((i && ((n && !s) || (!n && !o.dateSelected))) ||
										(!i && ((n && !o.dateSelected) || (!n && !s)))) &&
										((t[h()] = l), (o[h()] = l)))
								: (((i && (s || r) < l) || (!i && l < (s || a))) && m(),
								  (t[h()] = l));
						}
						return o && _(o), _(t), t;
					}
					function R() {
						var t = this.first ? this : this.sibling,
							e = t.sibling;
						return { start: t.dateSelected, end: e.dateSelected };
					}
					function H() {
						var t,
							e = this.shadowDom,
							i = this.positionedEl,
							s = this.calendarContainer,
							n = this.sibling,
							o = this,
							s =
								(!this.inlinePosition ||
									b.some(function (t) {
										return t !== o && t.positionedEl === i;
									}) ||
									i.style.setProperty("position", null),
								s.remove(),
								(b = b.filter(function (t) {
									return t !== o;
								})),
								n && delete n.sibling,
								b.length || c(document, l),
								b.some(function (t) {
									return t.shadowDom === e;
								}));
						for (t in (e && !s && c(e, d), this)) delete this[t];
						b.length ||
							a.forEach(function (t) {
								document.removeEventListener(t, l);
							});
					}
					function B(t, e) {
						t = new Date(t);
						if (!k(t)) throw new Error("Invalid date passed to `navigate`");
						(this.currentYear = t.getFullYear()),
							(this.currentMonth = t.getMonth()),
							_(this),
							e && this.onMonthChange(this);
					}
					function V() {
						var t = !this.calendarContainer.classList.contains("qs-hidden"),
							e = !this.calendarContainer
								.querySelector(".qs-overlay")
								.classList.contains("qs-hidden");
						t && M(e, this);
					}
					t.default = function (t, e) {
						var i = (function (t, m) {
							var e,
								i,
								s = (function () {
									var n = S(
											m || {
												startDate: D(new Date()),
												position: "bl",
												defaultView: "calendar",
											}
										),
										e =
											(n.events &&
												(n.events = n.events.reduce(function (t, e) {
													if (k(e)) return (t[+D(e)] = !0), t;
													throw new Error(
														'"options.events" must only contain valid JavaScript Date objects.'
													);
												}, {})),
											[
												"startDate",
												"dateSelected",
												"minDate",
												"maxDate",
											].forEach(function (t) {
												var e = n[t];
												if (e && !k(e))
													throw new Error(
														'"options.' +
															t +
															'" needs to be a valid JavaScript Date object.'
													);
												n[t] = D(e);
											}),
											n.position),
										t = n.maxDate,
										i = n.minDate,
										s = n.dateSelected,
										o = n.overlayPlaceholder,
										a = n.overlayButton,
										r = n.startDay,
										l = n.id;
									if (
										((n.startDate = D(n.startDate || s || new Date())),
										(n.disabledDates = (n.disabledDates || []).reduce(function (
											t,
											e
										) {
											var i = +D(e);
											if (!k(e))
												throw new Error(
													'You supplied an invalid date to "options.disabledDates".'
												);
											if (i == +D(s))
												throw new Error(
													'"disabledDates" cannot contain the same date as "dateSelected".'
												);
											return (t[i] = 1), t;
										},
										{})),
										n.hasOwnProperty("id") && null == l)
									)
										throw new Error("`id` cannot be `null` or `undefined`");
									if (null != l) {
										var d = b.filter(function (t) {
											return t.id === l;
										});
										if (1 < d.length)
											throw new Error("Only two datepickers can share an id.");
										d.length
											? ((n.second = !0), (n.sibling = d[0]))
											: (n.first = !0);
									}
									var c,
										h,
										d = ["tr", "tl", "br", "bl", "c"].some(function (t) {
											return e === t;
										});
									if (e && !d)
										throw new Error(
											'"options.position" must be one of the following: tl, tr, bl, br, or c.'
										);
									function u(t) {
										throw new Error(
											'"dateSelected" in options is ' +
												(t ? "less" : "greater") +
												' than "' +
												(t || "max") +
												'Date".'
										);
									}
									if (
										((n.position =
											((c = (d = e || "bl")[0]),
											(d = d[1]),
											((h = {})[x[c]] = 1),
											d && (h[x[d]] = 1),
											h)),
										t < i)
									)
										throw new Error(
											'"maxDate" in options is less than "minDate".'
										);
									s && (s < i && u("min"), t < s && u()),
										[
											"onSelect",
											"onShow",
											"onHide",
											"onMonthChange",
											"formatter",
											"disabler",
										].forEach(function (t) {
											"function" != typeof n[t] && (n[t] = C);
										}),
										[
											"customDays",
											"customMonths",
											"customOverlayMonths",
										].forEach(function (t, e) {
											var i = n[t],
												s = e ? 12 : 7;
											if (i) {
												if (
													!Array.isArray(i) ||
													i.length !== s ||
													i.some(function (t) {
														return "string" != typeof t;
													})
												)
													throw new Error(
														'"' +
															t +
															'" must be an array with ' +
															s +
															" strings."
													);
												n[e ? (e < 2 ? "months" : "overlayMonths") : "days"] =
													i;
											}
										}),
										r && 0 < r && r < 7
											? ((h = (c = (n.customDays || y).slice()).splice(0, r)),
											  (n.customDays = c.concat(h)),
											  (n.startDay = +r),
											  (n.weekendIndices = [c.length - 1, c.length]))
											: ((n.startDay = 0), (n.weekendIndices = [6, 0])),
										"string" != typeof o && delete n.overlayPlaceholder,
										"string" != typeof a && delete n.overlayButton;
									i = n.defaultView;
									if (i && "calendar" !== i && "overlay" !== i)
										throw new Error(
											'options.defaultView must either be "calendar" or "overlay".'
										);
									return (n.defaultView = i || "calendar"), n;
								})(),
								n = t;
							if ("string" == typeof n)
								n =
									"#" === n[0]
										? document.getElementById(n.slice(1))
										: document.querySelector(n);
							else {
								if ("[object ShadowRoot]" === $(n))
									throw new Error(
										"Using a shadow DOM as your selector is not supported."
									);
								for (var o, a = n.parentNode; !o; ) {
									var r = $(a);
									"[object HTMLDocument]" === r
										? (o = !0)
										: "[object ShadowRoot]" === r
										? ((o = !0), (i = (e = a).host))
										: (a = a.parentNode);
								}
							}
							if (!n) throw new Error("No selector / element found.");
							if (
								b.some(function (t) {
									return t.el === n;
								})
							)
								throw new Error("A datepicker already exists on that element.");
							var l,
								d,
								t = n === document.body,
								c = e
									? n.parentElement || e
									: t
									? document.body
									: n.parentElement,
								h = e ? n.parentElement || i : c,
								u = document.createElement("div"),
								g = document.createElement("div"),
								p =
									((u.className = "qs-datepicker-container qs-hidden"),
									(g.className = "qs-datepicker"),
									{
										shadowDom: e,
										customElement: i,
										positionedEl: h,
										el: n,
										parent: c,
										nonInput: "INPUT" !== n.nodeName,
										noPosition: t,
										position: !t && s.position,
										startDate: s.startDate,
										dateSelected: s.dateSelected,
										disabledDates: s.disabledDates,
										minDate: s.minDate,
										maxDate: s.maxDate,
										noWeekends: !!s.noWeekends,
										weekendIndices: s.weekendIndices,
										calendarContainer: u,
										calendar: g,
										currentMonth: (s.startDate || s.dateSelected).getMonth(),
										currentMonthName: (s.months || w)[
											(s.startDate || s.dateSelected).getMonth()
										],
										currentYear: (s.startDate || s.dateSelected).getFullYear(),
										events: s.events || {},
										defaultView: s.defaultView,
										setDate: N,
										remove: H,
										setMin: q,
										setMax: j,
										show: F,
										hide: z,
										navigate: B,
										toggleOverlay: V,
										onSelect: s.onSelect,
										onShow: s.onShow,
										onHide: s.onHide,
										onMonthChange: s.onMonthChange,
										formatter: s.formatter,
										disabler: s.disabler,
										months: s.months || w,
										days: s.customDays || y,
										startDay: s.startDay,
										overlayMonths:
											s.overlayMonths ||
											(s.months || w).map(function (t) {
												return t.slice(0, 3);
											}),
										overlayPlaceholder: s.overlayPlaceholder || "4-digit year",
										overlayButton: s.overlayButton || "Submit",
										disableYearOverlay: !!s.disableYearOverlay,
										disableMobile: !!s.disableMobile,
										isMobile: "ontouchstart" in window,
										alwaysShow: !!s.alwaysShow,
										id: s.id,
										showAllDates: !!s.showAllDates,
										respectDisabledReadOnly: !!s.respectDisabledReadOnly,
										first: s.first,
										second: s.second,
									}),
								f =
									(s.sibling &&
										((l = s.sibling),
										(d = p),
										(f = l.minDate || d.minDate),
										(v = l.maxDate || d.maxDate),
										((d.sibling = l).sibling = d),
										(l.minDate = f),
										(l.maxDate = v),
										(d.minDate = f),
										(d.maxDate = v),
										(l.originalMinDate = f),
										(l.originalMaxDate = v),
										(d.originalMinDate = f),
										(d.originalMaxDate = v),
										(l.getRange = R),
										(d.getRange = R)),
									s.dateSelected && I(n, p),
									getComputedStyle(h).position),
								v =
									(t ||
										(f && "static" !== f) ||
										((p.inlinePosition = !0),
										h.style.setProperty("position", "relative")),
									b.filter(function (t) {
										return t.positionedEl === p.positionedEl;
									}));
							return (
								v.some(function (t) {
									return t.inlinePosition;
								}) &&
									((p.inlinePosition = !0),
									v.forEach(function (t) {
										t.inlinePosition = !0;
									})),
								u.appendChild(g),
								c.appendChild(u),
								p.alwaysShow && A(p),
								p
							);
						})(t, e);
						return (
							b.length || s(document),
							i.shadowDom &&
								!b.some(function (t) {
									return t.shadowDom === i.shadowDom;
								}) &&
								s(i.shadowDom),
							b.push(i),
							i.second &&
								((t = i.sibling),
								r({ instance: i, deselect: !i.dateSelected }),
								r({ instance: t, deselect: !t.dateSelected }),
								_(t)),
							_(i, i.startDate || i.dateSelected),
							i.alwaysShow && n(i),
							i
						);
					};
				},
			]).default);
	},
	function (t, e, i) {
		t.exports = i(6);
	},
	function (t, e, i) {
		i(15), (t.exports = i(14));
	},
	function (t, e) {
		!(function () {
			"use strict";
			var s, e, i, t, n, o, a, r, l, d, c, h, u, m, g, p, f, v, y, b;
			function w(t) {
				return t.shadowRoot || i.get(t);
			}
			function x(t) {
				return (
					"object" == typeof t && (u.isPrototypeOf(t) || r.isPrototypeOf(t))
				);
			}
			function C(t) {
				return "object" == typeof t && r.isPrototypeOf(t);
			}
			function S(t, e) {
				return c.get(t).get(e);
			}
			function _(t, e) {
				requestAnimationFrame(function () {
					(e.textContent = l.get(t).textContent),
						h.get(t).forEach(function (t) {
							return e.sheet[t.method].apply(e.sheet, t.args);
						});
				});
			}
			function L(t) {
				if (!l.has(t)) throw new TypeError("Illegal invocation");
			}
			function I() {
				var t = document.createElement("style");
				e.body.appendChild(t),
					l.set(this, t),
					d.set(this, []),
					c.set(this, new WeakMap()),
					h.set(this, []);
			}
			function E(t) {
				var e = g.get(t);
				return e || ((e = new D(t)), g.set(t, e)), e;
			}
			function k(t) {
				n(t.prototype, "adoptedStyleSheets", {
					configurable: !0,
					enumerable: !0,
					get: function () {
						return E(this).sheets;
					},
					set: function (t) {
						E(this).update(t);
					},
				});
			}
			function T(t, e) {
				for (
					var i,
						s = document.createNodeIterator(
							t,
							NodeFilter.SHOW_ELEMENT,
							function (t) {
								return w(t)
									? NodeFilter.FILTER_ACCEPT
									: NodeFilter.FILTER_REJECT;
							},
							null,
							!1
						);
					(i = s.nextNode());

				)
					e(w(i));
			}
			function A(t) {
				t = p.get(t);
				return t instanceof Document ? t.body : t;
			}
			function M(s) {
				var n = document.createDocumentFragment(),
					t = f.get(s),
					e = v.get(s),
					i = A(s);
				e.disconnect(),
					t.forEach(function (t) {
						var e, i;
						n.appendChild(
							S(t, s) ||
								((t = t),
								(e = s),
								(i = document.createElement("style")),
								c.get(t).set(e, i),
								d.get(t).push(e),
								i)
						);
					}),
					i.insertBefore(n, null),
					e.observe(i, m),
					t.forEach(function (t) {
						_(t, S(t, s));
					});
			}
			function D(t) {
				var i = this;
				(i.sheets = []),
					p.set(i, t),
					f.set(i, []),
					v.set(
						i,
						new MutationObserver(function (t, e) {
							document
								? t.forEach(function (t) {
										s ||
											o.call(t.addedNodes, function (t) {
												t instanceof Element &&
													T(t, function (t) {
														E(t).connect();
													});
											}),
											o.call(t.removedNodes, function (t) {
												var e;
												t instanceof Element &&
													((e = i),
													t instanceof HTMLStyleElement &&
														f.get(e).some(function (t) {
															return S(t, e);
														}) &&
														M(i),
													s ||
														T(t, function (t) {
															E(t).disconnect();
														}));
											});
								  })
								: e.disconnect();
						})
					);
			}
			"undefined" == typeof document ||
				"adoptedStyleSheets" in document ||
				((s = "ShadyCSS" in window && !ShadyCSS.nativeShadow),
				(e = document.implementation.createHTMLDocument("")),
				(i = new WeakMap()),
				(t = "object" == typeof DOMException ? Error : DOMException),
				(n = Object.defineProperty),
				(o = Array.prototype.forEach),
				(a = /@import.+?;?$/gm),
				((r = CSSStyleSheet.prototype).replace = function () {
					return Promise.reject(
						new t("Can't call replace on non-constructed CSSStyleSheets.")
					);
				}),
				(r.replaceSync = function () {
					throw new t(
						"Failed to execute 'replaceSync' on 'CSSStyleSheet': Can't call replaceSync on non-constructed CSSStyleSheets."
					);
				}),
				(l = new WeakMap()),
				(d = new WeakMap()),
				(c = new WeakMap()),
				(h = new WeakMap()),
				((u = I.prototype).replace = function (t) {
					try {
						return this.replaceSync(t), Promise.resolve(this);
					} catch (t) {
						return Promise.reject(t);
					}
				}),
				(u.replaceSync = function (t) {
					var e, i;
					L(this),
						"string" == typeof t &&
							((l.get((e = this)).textContent =
								((i = (t = t).replace(a, "")) !== t &&
									console.warn(
										"@import rules are not allowed here. See https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-588352418"
									),
								i.trim())),
							h.set(e, []),
							d.get(e).forEach(function (t) {
								t.isConnected() && _(e, S(e, t));
							}));
				}),
				n(u, "cssRules", {
					configurable: !0,
					enumerable: !0,
					get: function () {
						return L(this), l.get(this).sheet.cssRules;
					},
				}),
				n(u, "media", {
					configurable: !0,
					enumerable: !0,
					get: function () {
						return L(this), l.get(this).sheet.media;
					},
				}),
				["addRule", "deleteRule", "insertRule", "removeRule"].forEach(function (
					s
				) {
					u[s] = function () {
						var e = this,
							i = (L(e), arguments),
							t =
								(h.get(e).push({ method: s, args: i }),
								d.get(e).forEach(function (t) {
									t.isConnected() && (t = S(e, t).sheet)[s].apply(t, i);
								}),
								l.get(e).sheet);
						return t[s].apply(t, i);
					};
				}),
				n(I, Symbol.hasInstance, { configurable: !0, value: x }),
				(m = { childList: !0, subtree: !0 }),
				(g = new WeakMap()),
				(p = new WeakMap()),
				(f = new WeakMap()),
				(v = new WeakMap()),
				(D.prototype = {
					isConnected: function () {
						var t = p.get(this);
						return t instanceof Document
							? "loading" !== t.readyState
							: "isConnected" in (t = t.host)
							? t.isConnected
							: document.contains(t);
					},
					connect: function () {
						var t = A(this);
						v.get(this).observe(t, m),
							0 < f.get(this).length && M(this),
							T(t, function (t) {
								E(t).connect();
							});
					},
					disconnect: function () {
						v.get(this).disconnect();
					},
					update: function (t) {
						var s = this,
							e = p.get(s) === document ? "Document" : "ShadowRoot";
						if (!Array.isArray(t))
							throw new TypeError(
								"Failed to set the 'adoptedStyleSheets' property on " +
									e +
									": Iterator getter is not callable."
							);
						if (!t.every(x))
							throw new TypeError(
								"Failed to set the 'adoptedStyleSheets' property on " +
									e +
									": Failed to convert value to 'CSSStyleSheet'"
							);
						if (t.some(C))
							throw new TypeError(
								"Failed to set the 'adoptedStyleSheets' property on " +
									e +
									": Can't adopt non-constructed stylesheets"
							);
						s.sheets = t;
						var i,
							n,
							e = f.get(s),
							t = (i = t).filter(function (t, e) {
								return i.indexOf(t) === e;
							});
						(n = t),
							e
								.filter(function (t) {
									return -1 === n.indexOf(t);
								})
								.forEach(function (t) {
									var e, i;
									(e = S(t, s)).parentNode.removeChild(e),
										(e = t),
										(i = s),
										c.get(e).delete(i),
										d.set(
											e,
											d.get(e).filter(function (t) {
												return t !== i;
											})
										);
								}),
							f.set(s, t),
							s.isConnected() && 0 < t.length && M(s);
					},
				}),
				(window.CSSStyleSheet = I),
				k(Document),
				"ShadowRoot" in window &&
					(k(ShadowRoot),
					(b = Element.prototype),
					(y = b.attachShadow),
					(b.attachShadow = function (t) {
						var e = y.call(this, t);
						return "closed" === t.mode && i.set(this, e), e;
					})),
				(b = E(document)).isConnected()
					? b.connect()
					: document.addEventListener("DOMContentLoaded", b.connect.bind(b)));
		})();
	},
	function (t, e, i) {
		var s;
		(i = [i(5)]),
			void 0 !==
				(e =
					"function" ==
					typeof (s = function (u) {
						u.extend(u.fn, {
							validate: function (t) {
								if (!this.length) {
									if (t && t.debug && window.console)
										console.warn(
											"Nothing selected, can't validate, returning nothing."
										);
									return;
								}
								var s = u.data(this[0], "validator");
								if (s) return s;
								this.attr("novalidate", "novalidate");
								s = new u.validator(t, this[0]);
								u.data(this[0], "validator", s);
								if (s.settings.onsubmit) {
									this.on("click.validate", ":submit", function (t) {
										s.submitButton = t.currentTarget;
										if (u(this).hasClass("cancel")) s.cancelSubmit = true;
										if (u(this).attr("formnovalidate") !== undefined)
											s.cancelSubmit = true;
									});
									this.on("submit.validate", function (i) {
										if (s.settings.debug) i.preventDefault();
										function t() {
											var t, e;
											if (
												s.submitButton &&
												(s.settings.submitHandler || s.formSubmitted)
											)
												t = u("<input type='hidden'/>")
													.attr("name", s.submitButton.name)
													.val(u(s.submitButton).val())
													.appendTo(s.currentForm);
											if (s.settings.submitHandler && !s.settings.debug) {
												e = s.settings.submitHandler.call(s, s.currentForm, i);
												if (t) t.remove();
												if (e !== undefined) return e;
												return false;
											}
											return true;
										}
										if (s.cancelSubmit) {
											s.cancelSubmit = false;
											return t();
										}
										if (s.form()) {
											if (s.pendingRequest) {
												s.formSubmitted = true;
												return false;
											}
											return t();
										} else {
											s.focusInvalid();
											return false;
										}
									});
								}
								return s;
							},
							valid: function () {
								var t, e, i;
								if (u(this[0]).is("form")) t = this.validate().form();
								else {
									i = [];
									t = true;
									e = u(this[0].form).validate();
									this.each(function () {
										t = e.element(this) && t;
										if (!t) i = i.concat(e.errorList);
									});
									e.errorList = i;
								}
								return t;
							},
							rules: function (t, e) {
								var i = this[0],
									s =
										typeof this.attr("contenteditable") !== "undefined" &&
										this.attr("contenteditable") !== "false",
									n,
									o,
									a,
									r,
									l,
									d;
								if (i == null) return;
								if (!i.form && s) {
									i.form = this.closest("form")[0];
									i.name = this.attr("name");
								}
								if (i.form == null) return;
								if (t) {
									n = u.data(i.form, "validator").settings;
									o = n.rules;
									a = u.validator.staticRules(i);
									switch (t) {
										case "add":
											u.extend(a, u.validator.normalizeRule(e));
											delete a.messages;
											o[i.name] = a;
											if (e.messages)
												n.messages[i.name] = u.extend(
													n.messages[i.name],
													e.messages
												);
											break;
										case "remove":
											if (!e) {
												delete o[i.name];
												return a;
											}
											d = {};
											u.each(e.split(/\s/), function (t, e) {
												d[e] = a[e];
												delete a[e];
											});
											return d;
									}
								}
								r = u.validator.normalizeRules(
									u.extend(
										{},
										u.validator.classRules(i),
										u.validator.attributeRules(i),
										u.validator.dataRules(i),
										u.validator.staticRules(i)
									),
									i
								);
								if (r.required) {
									l = r.required;
									delete r.required;
									r = u.extend({ required: l }, r);
								}
								if (r.remote) {
									l = r.remote;
									delete r.remote;
									r = u.extend(r, { remote: l });
								}
								return r;
							},
						});
						var i = function (t) {
								return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
							},
							n =
								(u.extend(u.expr.pseudos || u.expr[":"], {
									blank: function (t) {
										return !i("" + u(t).val());
									},
									filled: function (t) {
										var e = u(t).val();
										return e !== null && !!i("" + e);
									},
									unchecked: function (t) {
										return !u(t).prop("checked");
									},
								}),
								(u.validator = function (t, e) {
									this.settings = u.extend(true, {}, u.validator.defaults, t);
									this.currentForm = e;
									this.init();
								}),
								(u.validator.format = function (i, t) {
									if (arguments.length === 1)
										return function () {
											var t = u.makeArray(arguments);
											t.unshift(i);
											return u.validator.format.apply(this, t);
										};
									if (t === undefined) return i;
									if (arguments.length > 2 && t.constructor !== Array)
										t = u.makeArray(arguments).slice(1);
									if (t.constructor !== Array) t = [t];
									u.each(t, function (t, e) {
										i = i.replace(
											new RegExp("\\{" + t + "\\}", "g"),
											function () {
												return e;
											}
										);
									});
									return i;
								}),
								u.extend(u.validator, {
									defaults: {
										messages: {},
										groups: {},
										rules: {},
										errorClass: "error",
										pendingClass: "pending",
										validClass: "valid",
										errorElement: "label",
										focusCleanup: false,
										focusInvalid: true,
										errorContainer: u([]),
										errorLabelContainer: u([]),
										onsubmit: true,
										ignore: ":hidden",
										ignoreTitle: false,
										onfocusin: function (t) {
											this.lastActive = t;
											if (this.settings.focusCleanup) {
												if (this.settings.unhighlight)
													this.settings.unhighlight.call(
														this,
														t,
														this.settings.errorClass,
														this.settings.validClass
													);
												this.hideThese(this.errorsFor(t));
											}
										},
										onfocusout: function (t) {
											if (
												!this.checkable(t) &&
												(t.name in this.submitted || !this.optional(t))
											)
												this.element(t);
										},
										onkeyup: function (t, e) {
											var i = [
												16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225,
											];
											if (
												(e.which === 9 && this.elementValue(t) === "") ||
												u.inArray(e.keyCode, i) !== -1
											)
												return;
											else if (
												t.name in this.submitted ||
												t.name in this.invalid
											)
												this.element(t);
										},
										onclick: function (t) {
											if (t.name in this.submitted) this.element(t);
											else if (t.parentNode.name in this.submitted)
												this.element(t.parentNode);
										},
										highlight: function (t, e, i) {
											if (t.type === "radio")
												this.findByName(t.name).addClass(e).removeClass(i);
											else u(t).addClass(e).removeClass(i);
										},
										unhighlight: function (t, e, i) {
											if (t.type === "radio")
												this.findByName(t.name).removeClass(e).addClass(i);
											else u(t).removeClass(e).addClass(i);
										},
									},
									setDefaults: function (t) {
										u.extend(u.validator.defaults, t);
									},
									messages: {
										required: "This field is required.",
										remote: "Please fix this field.",
										email: "Please enter a valid email address.",
										url: "Please enter a valid URL.",
										date: "Please enter a valid date.",
										dateISO: "Please enter a valid date (ISO).",
										number: "Please enter a valid number.",
										digits: "Please enter only digits.",
										equalTo: "Please enter the same value again.",
										maxlength: u.validator.format(
											"Please enter no more than {0} characters."
										),
										minlength: u.validator.format(
											"Please enter at least {0} characters."
										),
										rangelength: u.validator.format(
											"Please enter a value between {0} and {1} characters long."
										),
										range: u.validator.format(
											"Please enter a value between {0} and {1}."
										),
										max: u.validator.format(
											"Please enter a value less than or equal to {0}."
										),
										min: u.validator.format(
											"Please enter a value greater than or equal to {0}."
										),
										step: u.validator.format("Please enter a multiple of {0}."),
									},
									autoCreateRanges: false,
									prototype: {
										init: function () {
											this.labelContainer = u(
												this.settings.errorLabelContainer
											);
											this.errorContext =
												(this.labelContainer.length && this.labelContainer) ||
												u(this.currentForm);
											this.containers = u(this.settings.errorContainer).add(
												this.settings.errorLabelContainer
											);
											this.submitted = {};
											this.valueCache = {};
											this.pendingRequest = 0;
											this.pending = {};
											this.invalid = {};
											this.reset();
											var o = this.currentForm,
												s = (this.groups = {}),
												i;
											u.each(this.settings.groups, function (i, t) {
												if (typeof t === "string") t = t.split(/\s/);
												u.each(t, function (t, e) {
													s[e] = i;
												});
											});
											i = this.settings.rules;
											u.each(i, function (t, e) {
												i[t] = u.validator.normalizeRule(e);
											});
											function t(t) {
												var e =
													typeof u(this).attr("contenteditable") !==
														"undefined" &&
													u(this).attr("contenteditable") !== "false";
												if (!this.form && e) {
													this.form = u(this).closest("form")[0];
													this.name = u(this).attr("name");
												}
												if (o !== this.form) return;
												var i = u.data(this.form, "validator"),
													s = "on" + t.type.replace(/^validate/, ""),
													n = i.settings;
												if (n[s] && !u(this).is(n.ignore))
													n[s].call(i, this, t);
											}
											u(this.currentForm)
												.on(
													"focusin.validate focusout.validate keyup.validate",
													":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], " +
														"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], " +
														"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], " +
														"[type='radio'], [type='checkbox'], [contenteditable], [type='button']",
													t
												)
												.on(
													"click.validate",
													"select, option, [type='radio'], [type='checkbox']",
													t
												);
											if (this.settings.invalidHandler)
												u(this.currentForm).on(
													"invalid-form.validate",
													this.settings.invalidHandler
												);
										},
										form: function () {
											this.checkForm();
											u.extend(this.submitted, this.errorMap);
											this.invalid = u.extend({}, this.errorMap);
											if (!this.valid())
												u(this.currentForm).triggerHandler("invalid-form", [
													this,
												]);
											this.showErrors();
											return this.valid();
										},
										checkForm: function () {
											this.prepareForm();
											for (
												var t = 0, e = (this.currentElements = this.elements());
												e[t];
												t++
											)
												this.check(e[t]);
											return this.valid();
										},
										element: function (t) {
											var i = this.clean(t),
												s = this.validationTargetFor(i),
												n = this,
												o = true,
												e,
												a;
											if (s === undefined) delete this.invalid[i.name];
											else {
												this.prepareElement(s);
												this.currentElements = u(s);
												a = this.groups[s.name];
												if (a)
													u.each(this.groups, function (t, e) {
														if (e === a && t !== s.name) {
															i = n.validationTargetFor(
																n.clean(n.findByName(t))
															);
															if (i && i.name in n.invalid) {
																n.currentElements.push(i);
																o = n.check(i) && o;
															}
														}
													});
												e = this.check(s) !== false;
												o = o && e;
												if (e) this.invalid[s.name] = false;
												else this.invalid[s.name] = true;
												if (!this.numberOfInvalids())
													this.toHide = this.toHide.add(this.containers);
												this.showErrors();
												u(t).attr("aria-invalid", !e);
											}
											return o;
										},
										showErrors: function (e) {
											if (e) {
												var i = this;
												u.extend(this.errorMap, e);
												this.errorList = u.map(this.errorMap, function (t, e) {
													return { message: t, element: i.findByName(e)[0] };
												});
												this.successList = u.grep(
													this.successList,
													function (t) {
														return !(t.name in e);
													}
												);
											}
											if (this.settings.showErrors)
												this.settings.showErrors.call(
													this,
													this.errorMap,
													this.errorList
												);
											else this.defaultShowErrors();
										},
										resetForm: function () {
											if (u.fn.resetForm) u(this.currentForm).resetForm();
											this.invalid = {};
											this.submitted = {};
											this.prepareForm();
											this.hideErrors();
											var t = this.elements()
												.removeData("previousValue")
												.removeAttr("aria-invalid");
											this.resetElements(t);
										},
										resetElements: function (t) {
											var e;
											if (this.settings.unhighlight)
												for (e = 0; t[e]; e++) {
													this.settings.unhighlight.call(
														this,
														t[e],
														this.settings.errorClass,
														""
													);
													this.findByName(t[e].name).removeClass(
														this.settings.validClass
													);
												}
											else
												t.removeClass(this.settings.errorClass).removeClass(
													this.settings.validClass
												);
										},
										numberOfInvalids: function () {
											return this.objectLength(this.invalid);
										},
										objectLength: function (t) {
											var e = 0,
												i;
											for (i in t)
												if (
													t[i] !== undefined &&
													t[i] !== null &&
													t[i] !== false
												)
													e++;
											return e;
										},
										hideErrors: function () {
											this.hideThese(this.toHide);
										},
										hideThese: function (t) {
											t.not(this.containers).text("");
											this.addWrapper(t).hide();
										},
										valid: function () {
											return this.size() === 0;
										},
										size: function () {
											return this.errorList.length;
										},
										focusInvalid: function () {
											if (this.settings.focusInvalid)
												try {
													u(
														this.findLastActive() ||
															(this.errorList.length &&
																this.errorList[0].element) ||
															[]
													)
														.filter(":visible")
														.trigger("focus")
														.trigger("focusin");
												} catch (t) {}
										},
										findLastActive: function () {
											var e = this.lastActive;
											return (
												e &&
												u.grep(this.errorList, function (t) {
													return t.element.name === e.name;
												}).length === 1 &&
												e
											);
										},
										elements: function () {
											var i = this,
												s = {};
											return u(this.currentForm)
												.find("input, select, textarea, [contenteditable]")
												.not(":submit, :reset, :image, :disabled")
												.not(this.settings.ignore)
												.filter(function () {
													var t = this.name || u(this).attr("name");
													var e =
														typeof u(this).attr("contenteditable") !==
															"undefined" &&
														u(this).attr("contenteditable") !== "false";
													if (!t && i.settings.debug && window.console)
														console.error("%o has no name assigned", this);
													if (e) {
														this.form = u(this).closest("form")[0];
														this.name = t;
													}
													if (this.form !== i.currentForm) return false;
													if (t in s || !i.objectLength(u(this).rules()))
														return false;
													s[t] = true;
													return true;
												});
										},
										clean: function (t) {
											return u(t)[0];
										},
										errors: function () {
											var t = this.settings.errorClass.split(" ").join(".");
											return u(
												this.settings.errorElement + "." + t,
												this.errorContext
											);
										},
										resetInternals: function () {
											this.successList = [];
											this.errorList = [];
											this.errorMap = {};
											this.toShow = u([]);
											this.toHide = u([]);
										},
										reset: function () {
											this.resetInternals();
											this.currentElements = u([]);
										},
										prepareForm: function () {
											this.reset();
											this.toHide = this.errors().add(this.containers);
										},
										prepareElement: function (t) {
											this.reset();
											this.toHide = this.errorsFor(t);
										},
										elementValue: function (t) {
											var e = u(t),
												i = t.type,
												s =
													typeof e.attr("contenteditable") !== "undefined" &&
													e.attr("contenteditable") !== "false",
												n,
												o;
											if (i === "radio" || i === "checkbox")
												return this.findByName(t.name).filter(":checked").val();
											else if (
												i === "number" &&
												typeof t.validity !== "undefined"
											)
												return t.validity.badInput ? "NaN" : e.val();
											if (s) n = e.text();
											else n = e.val();
											if (i === "file") {
												if (n.substr(0, 12) === "C:\\fakepath\\")
													return n.substr(12);
												o = n.lastIndexOf("/");
												if (o >= 0) return n.substr(o + 1);
												o = n.lastIndexOf("\\");
												if (o >= 0) return n.substr(o + 1);
												return n;
											}
											if (typeof n === "string") return n.replace(/\r/g, "");
											return n;
										},
										check: function (e) {
											e = this.validationTargetFor(this.clean(e));
											var t = u(e).rules(),
												i = u.map(t, function (t, e) {
													return e;
												}).length,
												s = false,
												n = this.elementValue(e),
												o,
												a,
												r,
												l;
											if (typeof t.normalizer === "function") l = t.normalizer;
											else if (typeof this.settings.normalizer === "function")
												l = this.settings.normalizer;
											if (l) {
												n = l.call(e, n);
												delete t.normalizer;
											}
											for (a in t) {
												r = { method: a, parameters: t[a] };
												try {
													o = u.validator.methods[a].call(
														this,
														n,
														e,
														r.parameters
													);
													if (o === "dependency-mismatch" && i === 1) {
														s = true;
														continue;
													}
													s = false;
													if (o === "pending") {
														this.toHide = this.toHide.not(this.errorsFor(e));
														return;
													}
													if (!o) {
														this.formatAndAdd(e, r);
														return false;
													}
												} catch (t) {
													if (this.settings.debug && window.console)
														console.log(
															"Exception occurred when checking element " +
																e.id +
																", check the '" +
																r.method +
																"' method.",
															t
														);
													if (t instanceof TypeError)
														t.message +=
															".  Exception occurred when checking element " +
															e.id +
															", check the '" +
															r.method +
															"' method.";
													throw t;
												}
											}
											if (s) return;
											if (this.objectLength(t)) this.successList.push(e);
											return true;
										},
										customDataMessage: function (t, e) {
											return (
												u(t).data(
													"msg" +
														e.charAt(0).toUpperCase() +
														e.substring(1).toLowerCase()
												) || u(t).data("msg")
											);
										},
										customMessage: function (t, e) {
											var i = this.settings.messages[t];
											return i && (i.constructor === String ? i : i[e]);
										},
										findDefined: function () {
											for (var t = 0; t < arguments.length; t++)
												if (arguments[t] !== undefined) return arguments[t];
											return undefined;
										},
										defaultMessage: function (t, e) {
											if (typeof e === "string") e = { method: e };
											var i = this.findDefined(
													this.customMessage(t.name, e.method),
													this.customDataMessage(t, e.method),
													(!this.settings.ignoreTitle && t.title) || undefined,
													u.validator.messages[e.method],
													"<strong>Warning: No message defined for " +
														t.name +
														"</strong>"
												),
												s = /\$?\{(\d+)\}/g;
											if (typeof i === "function")
												i = i.call(this, e.parameters, t);
											else if (s.test(i))
												i = u.validator.format(
													i.replace(s, "{$1}"),
													e.parameters
												);
											return i;
										},
										formatAndAdd: function (t, e) {
											var i = this.defaultMessage(t, e);
											this.errorList.push({
												message: i,
												element: t,
												method: e.method,
											});
											this.errorMap[t.name] = i;
											this.submitted[t.name] = i;
										},
										addWrapper: function (t) {
											if (this.settings.wrapper)
												t = t.add(t.parent(this.settings.wrapper));
											return t;
										},
										defaultShowErrors: function () {
											var t, e, i;
											for (t = 0; this.errorList[t]; t++) {
												i = this.errorList[t];
												if (this.settings.highlight)
													this.settings.highlight.call(
														this,
														i.element,
														this.settings.errorClass,
														this.settings.validClass
													);
												this.showLabel(i.element, i.message);
											}
											if (this.errorList.length)
												this.toShow = this.toShow.add(this.containers);
											if (this.settings.success)
												for (t = 0; this.successList[t]; t++)
													this.showLabel(this.successList[t]);
											if (this.settings.unhighlight)
												for (t = 0, e = this.validElements(); e[t]; t++)
													this.settings.unhighlight.call(
														this,
														e[t],
														this.settings.errorClass,
														this.settings.validClass
													);
											this.toHide = this.toHide.not(this.toShow);
											this.hideErrors();
											this.addWrapper(this.toShow).show();
										},
										validElements: function () {
											return this.currentElements.not(this.invalidElements());
										},
										invalidElements: function () {
											return u(this.errorList).map(function () {
												return this.element;
											});
										},
										showLabel: function (t, e) {
											var i,
												s,
												n,
												o,
												a = this.errorsFor(t),
												r = this.idOrName(t),
												l = u(t).attr("aria-describedby");
											if (a.length) {
												a.removeClass(this.settings.validClass).addClass(
													this.settings.errorClass
												);
												a.html(e);
											} else {
												a = u("<" + this.settings.errorElement + ">")
													.attr("id", r + "-error")
													.addClass(this.settings.errorClass)
													.html(e || "");
												i = a;
												if (this.settings.wrapper)
													i = a
														.hide()
														.show()
														.wrap("<" + this.settings.wrapper + "/>")
														.parent();
												if (this.labelContainer.length)
													this.labelContainer.append(i);
												else if (this.settings.errorPlacement)
													this.settings.errorPlacement.call(this, i, u(t));
												else i.insertAfter(t);
												if (a.is("label")) a.attr("for", r);
												else if (
													a.parents(
														"label[for='" + this.escapeCssMeta(r) + "']"
													).length === 0
												) {
													n = a.attr("id");
													if (!l) l = n;
													else if (
														!l.match(
															new RegExp("\\b" + this.escapeCssMeta(n) + "\\b")
														)
													)
														l += " " + n;
													u(t).attr("aria-describedby", l);
													s = this.groups[t.name];
													if (s) {
														o = this;
														u.each(o.groups, function (t, e) {
															if (e === s)
																u(
																	"[name='" + o.escapeCssMeta(t) + "']",
																	o.currentForm
																).attr("aria-describedby", a.attr("id"));
														});
													}
												}
											}
											if (!e && this.settings.success) {
												a.text("");
												if (typeof this.settings.success === "string")
													a.addClass(this.settings.success);
												else this.settings.success(a, t);
											}
											this.toShow = this.toShow.add(a);
										},
										errorsFor: function (t) {
											var e = this.escapeCssMeta(this.idOrName(t)),
												i = u(t).attr("aria-describedby"),
												s = "label[for='" + e + "'], label[for='" + e + "'] *";
											if (i)
												s =
													s +
													", #" +
													this.escapeCssMeta(i).replace(/\s+/g, ", #");
											return this.errors().filter(s);
										},
										escapeCssMeta: function (t) {
											if (t === undefined) return "";
											return t.replace(
												/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g,
												"\\$1"
											);
										},
										idOrName: function (t) {
											return (
												this.groups[t.name] ||
												(this.checkable(t) ? t.name : t.id || t.name)
											);
										},
										validationTargetFor: function (t) {
											if (this.checkable(t)) t = this.findByName(t.name);
											return u(t).not(this.settings.ignore)[0];
										},
										checkable: function (t) {
											return /radio|checkbox/i.test(t.type);
										},
										findByName: function (t) {
											return u(this.currentForm).find(
												"[name='" + this.escapeCssMeta(t) + "']"
											);
										},
										getLength: function (t, e) {
											switch (e.nodeName.toLowerCase()) {
												case "select":
													return u("option:selected", e).length;
												case "input":
													if (this.checkable(e))
														return this.findByName(e.name).filter(":checked")
															.length;
											}
											return t.length;
										},
										depend: function (t, e) {
											return this.dependTypes[typeof t]
												? this.dependTypes[typeof t](t, e)
												: true;
										},
										dependTypes: {
											boolean: function (t) {
												return t;
											},
											string: function (t, e) {
												return !!u(t, e.form).length;
											},
											function: function (t, e) {
												return t(e);
											},
										},
										optional: function (t) {
											var e = this.elementValue(t);
											return (
												!u.validator.methods.required.call(this, e, t) &&
												"dependency-mismatch"
											);
										},
										startRequest: function (t) {
											if (!this.pending[t.name]) {
												this.pendingRequest++;
												u(t).addClass(this.settings.pendingClass);
												this.pending[t.name] = true;
											}
										},
										stopRequest: function (t, e) {
											this.pendingRequest--;
											if (this.pendingRequest < 0) this.pendingRequest = 0;
											delete this.pending[t.name];
											u(t).removeClass(this.settings.pendingClass);
											if (
												e &&
												this.pendingRequest === 0 &&
												this.formSubmitted &&
												this.form() &&
												this.pendingRequest === 0
											) {
												u(this.currentForm).submit();
												if (this.submitButton)
													u(
														"input:hidden[name='" +
															this.submitButton.name +
															"']",
														this.currentForm
													).remove();
												this.formSubmitted = false;
											} else if (
												!e &&
												this.pendingRequest === 0 &&
												this.formSubmitted
											) {
												u(this.currentForm).triggerHandler("invalid-form", [
													this,
												]);
												this.formSubmitted = false;
											}
										},
										previousValue: function (t, e) {
											e = (typeof e === "string" && e) || "remote";
											return (
												u.data(t, "previousValue") ||
												u.data(t, "previousValue", {
													old: null,
													valid: true,
													message: this.defaultMessage(t, { method: e }),
												})
											);
										},
										destroy: function () {
											this.resetForm();
											u(this.currentForm)
												.off(".validate")
												.removeData("validator")
												.find(".validate-equalTo-blur")
												.off(".validate-equalTo")
												.removeClass("validate-equalTo-blur")
												.find(".validate-lessThan-blur")
												.off(".validate-lessThan")
												.removeClass("validate-lessThan-blur")
												.find(".validate-lessThanEqual-blur")
												.off(".validate-lessThanEqual")
												.removeClass("validate-lessThanEqual-blur")
												.find(".validate-greaterThanEqual-blur")
												.off(".validate-greaterThanEqual")
												.removeClass("validate-greaterThanEqual-blur")
												.find(".validate-greaterThan-blur")
												.off(".validate-greaterThan")
												.removeClass("validate-greaterThan-blur");
										},
									},
									classRuleSettings: {
										required: { required: true },
										email: { email: true },
										url: { url: true },
										date: { date: true },
										dateISO: { dateISO: true },
										number: { number: true },
										digits: { digits: true },
										creditcard: { creditcard: true },
									},
									addClassRules: function (t, e) {
										if (t.constructor === String) this.classRuleSettings[t] = e;
										else u.extend(this.classRuleSettings, t);
									},
									classRules: function (t) {
										var e = {},
											i = u(t).attr("class");
										if (i)
											u.each(i.split(" "), function () {
												if (this in u.validator.classRuleSettings)
													u.extend(e, u.validator.classRuleSettings[this]);
											});
										return e;
									},
									normalizeAttributeRule: function (t, e, i, s) {
										if (
											/min|max|step/.test(i) &&
											(e === null || /number|range|text/.test(e))
										) {
											s = Number(s);
											if (isNaN(s)) s = undefined;
										}
										if (s || s === 0) t[i] = s;
										else if (e === i && e !== "range")
											t[e === "date" ? "dateISO" : i] = true;
									},
									attributeRules: function (t) {
										var e = {},
											i = u(t),
											s = t.getAttribute("type"),
											n,
											o;
										for (n in u.validator.methods) {
											if (n === "required") {
												o = t.getAttribute(n);
												if (o === "") o = true;
												o = !!o;
											} else o = i.attr(n);
											this.normalizeAttributeRule(e, s, n, o);
										}
										if (e.maxlength && /-1|2147483647|524288/.test(e.maxlength))
											delete e.maxlength;
										return e;
									},
									dataRules: function (t) {
										var e = {},
											i = u(t),
											s = t.getAttribute("type"),
											n,
											o;
										for (n in u.validator.methods) {
											o = i.data(
												"rule" +
													n.charAt(0).toUpperCase() +
													n.substring(1).toLowerCase()
											);
											if (o === "") o = true;
											this.normalizeAttributeRule(e, s, n, o);
										}
										return e;
									},
									staticRules: function (t) {
										var e = {},
											i = u.data(t.form, "validator");
										if (i.settings.rules)
											e =
												u.validator.normalizeRule(i.settings.rules[t.name]) ||
												{};
										return e;
									},
									normalizeRules: function (s, n) {
										u.each(s, function (t, e) {
											if (e === false) {
												delete s[t];
												return;
											}
											if (e.param || e.depends) {
												var i = true;
												switch (typeof e.depends) {
													case "string":
														i = !!u(e.depends, n.form).length;
														break;
													case "function":
														i = e.depends.call(n, n);
														break;
												}
												if (i) s[t] = e.param !== undefined ? e.param : true;
												else {
													u.data(n.form, "validator").resetElements(u(n));
													delete s[t];
												}
											}
										});
										u.each(s, function (t, e) {
											s[t] =
												typeof e === "function" && t !== "normalizer"
													? e(n)
													: e;
										});
										u.each(["minlength", "maxlength"], function () {
											if (s[this]) s[this] = Number(s[this]);
										});
										u.each(["rangelength", "range"], function () {
											var t;
											if (s[this])
												if (Array.isArray(s[this]))
													s[this] = [Number(s[this][0]), Number(s[this][1])];
												else if (typeof s[this] === "string") {
													t = s[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
													s[this] = [Number(t[0]), Number(t[1])];
												}
										});
										if (u.validator.autoCreateRanges) {
											if (s.min != null && s.max != null) {
												s.range = [s.min, s.max];
												delete s.min;
												delete s.max;
											}
											if (s.minlength != null && s.maxlength != null) {
												s.rangelength = [s.minlength, s.maxlength];
												delete s.minlength;
												delete s.maxlength;
											}
										}
										return s;
									},
									normalizeRule: function (t) {
										if (typeof t === "string") {
											var e = {};
											u.each(t.split(/\s/), function () {
												e[this] = true;
											});
											t = e;
										}
										return t;
									},
									addMethod: function (t, e, i) {
										u.validator.methods[t] = e;
										u.validator.messages[t] =
											i !== undefined ? i : u.validator.messages[t];
										if (e.length < 3)
											u.validator.addClassRules(
												t,
												u.validator.normalizeRule(t)
											);
									},
									methods: {
										required: function (t, e, i) {
											if (!this.depend(i, e)) return "dependency-mismatch";
											if (e.nodeName.toLowerCase() === "select") {
												var s = u(e).val();
												return s && s.length > 0;
											}
											if (this.checkable(e)) return this.getLength(t, e) > 0;
											return t !== undefined && t !== null && t.length > 0;
										},
										email: function (t, e) {
											return (
												this.optional(e) ||
												/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(
													t
												)
											);
										},
										url: function (t, e) {
											return (
												this.optional(e) ||
												/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(
													t
												)
											);
										},
										date: (function () {
											var i = false;
											return function (t, e) {
												if (!i) {
													i = true;
													if (this.settings.debug && window.console)
														console.warn(
															"The `date` method is deprecated and will be removed in version '2.0.0'.\n" +
																"Please don't use it, since it relies on the Date constructor, which\n" +
																"behaves very differently across browsers and locales. Use `dateISO`\n" +
																"instead or one of the locale specific methods in `localizations/`\n" +
																"and `additional-methods.js`."
														);
												}
												return (
													this.optional(e) ||
													!/Invalid|NaN/.test(new Date(t).toString())
												);
											};
										})(),
										dateISO: function (t, e) {
											return (
												this.optional(e) ||
												/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(
													t
												)
											);
										},
										number: function (t, e) {
											return (
												this.optional(e) ||
												/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)
											);
										},
										digits: function (t, e) {
											return this.optional(e) || /^\d+$/.test(t);
										},
										minlength: function (t, e, i) {
											var s = Array.isArray(t)
												? t.length
												: this.getLength(t, e);
											return this.optional(e) || s >= i;
										},
										maxlength: function (t, e, i) {
											var s = Array.isArray(t)
												? t.length
												: this.getLength(t, e);
											return this.optional(e) || s <= i;
										},
										rangelength: function (t, e, i) {
											var s = Array.isArray(t)
												? t.length
												: this.getLength(t, e);
											return this.optional(e) || (s >= i[0] && s <= i[1]);
										},
										min: function (t, e, i) {
											return this.optional(e) || t >= i;
										},
										max: function (t, e, i) {
											return this.optional(e) || t <= i;
										},
										range: function (t, e, i) {
											return this.optional(e) || (t >= i[0] && t <= i[1]);
										},
										step: function (t, e, i) {
											var s = u(e).attr("type"),
												n =
													"Step attribute on input type " +
													s +
													" is not supported.",
												o = ["text", "number", "range"],
												a = new RegExp("\\b" + s + "\\b"),
												r = s && !a.test(o.join()),
												l = function (t) {
													var e = ("" + t).match(/(?:\.(\d+))?$/);
													if (!e) return 0;
													return e[1] ? e[1].length : 0;
												},
												d = function (t) {
													return Math.round(t * Math.pow(10, h));
												},
												c = true,
												h;
											if (r) throw new Error(n);
											h = l(i);
											if (l(t) > h || d(t) % d(i) !== 0) c = false;
											return this.optional(e) || c;
										},
										equalTo: function (t, e, i) {
											var s = u(i);
											if (
												this.settings.onfocusout &&
												s.not(".validate-equalTo-blur").length
											)
												s.addClass("validate-equalTo-blur").on(
													"blur.validate-equalTo",
													function () {
														u(e).valid();
													}
												);
											return t === s.val();
										},
										remote: function (o, a, t, r) {
											if (this.optional(a)) return "dependency-mismatch";
											r = (typeof r === "string" && r) || "remote";
											var l = this.previousValue(a, r),
												d,
												e,
												i;
											if (!this.settings.messages[a.name])
												this.settings.messages[a.name] = {};
											l.originalMessage =
												l.originalMessage || this.settings.messages[a.name][r];
											this.settings.messages[a.name][r] = l.message;
											t = (typeof t === "string" && { url: t }) || t;
											i = u.param(u.extend({ data: o }, t.data));
											if (l.old === i) return l.valid;
											l.old = i;
											d = this;
											this.startRequest(a);
											e = {};
											e[a.name] = o;
											u.ajax(
												u.extend(
													true,
													{
														mode: "abort",
														port: "validate" + a.name,
														dataType: "json",
														data: e,
														context: d.currentForm,
														success: function (t) {
															var e = t === true || t === "true",
																i,
																s,
																n;
															d.settings.messages[a.name][r] =
																l.originalMessage;
															if (e) {
																n = d.formSubmitted;
																d.resetInternals();
																d.toHide = d.errorsFor(a);
																d.formSubmitted = n;
																d.successList.push(a);
																d.invalid[a.name] = false;
																d.showErrors();
															} else {
																i = {};
																s =
																	t ||
																	d.defaultMessage(a, {
																		method: r,
																		parameters: o,
																	});
																i[a.name] = l.message = s;
																d.invalid[a.name] = true;
																d.showErrors(i);
															}
															l.valid = e;
															d.stopRequest(a, e);
														},
													},
													t
												)
											);
											return "pending";
										},
									},
								}),
								{}),
							s;
						if (u.ajaxPrefilter)
							u.ajaxPrefilter(function (t, e, i) {
								var s = t.port;
								if (t.mode === "abort") {
									if (n[s]) n[s].abort();
									n[s] = i;
								}
							});
						else {
							s = u.ajax;
							u.ajax = function (t) {
								var e = ("mode" in t ? t : u.ajaxSettings).mode,
									i = ("port" in t ? t : u.ajaxSettings).port;
								if (e === "abort") {
									if (n[i]) n[i].abort();
									n[i] = s.apply(this, arguments);
									return n[i];
								}
								return s.apply(this, arguments);
							};
						}
						return u;
					})
						? s.apply(e, i)
						: s) && (t.exports = e);
	},
	function (t, e) {
		t.exports = jQuery;
	},
	function (t, e, i) {
		var s;
		(s = function (o) {
			"use strict";
			for (
				var a = [
						["Afghanistan (‫افغانستان‬‎)", "af", "93"],
						["Albania (Shqipëri)", "al", "355"],
						["Algeria (‫الجزائر‬‎)", "dz", "213"],
						["American Samoa", "as", "1", 5, ["684"]],
						["Andorra", "ad", "376"],
						["Angola", "ao", "244"],
						["Anguilla", "ai", "1", 6, ["264"]],
						["Antigua and Barbuda", "ag", "1", 7, ["268"]],
						["Argentina", "ar", "54"],
						["Armenia (Հայաստան)", "am", "374"],
						["Aruba", "aw", "297"],
						["Ascension Island", "ac", "247"],
						["Australia", "au", "61", 0],
						["Austria (Österreich)", "at", "43"],
						["Azerbaijan (Azərbaycan)", "az", "994"],
						["Bahamas", "bs", "1", 8, ["242"]],
						["Bahrain (‫البحرين‬‎)", "bh", "973"],
						["Bangladesh (বাংলাদেশ)", "bd", "880"],
						["Barbados", "bb", "1", 9, ["246"]],
						["Belarus (Беларусь)", "by", "375"],
						["Belgium (België)", "be", "32"],
						["Belize", "bz", "501"],
						["Benin (Bénin)", "bj", "229"],
						["Bermuda", "bm", "1", 10, ["441"]],
						["Bhutan (འབྲུག)", "bt", "975"],
						["Bolivia", "bo", "591"],
						["Bosnia and Herzegovina (Босна и Херцеговина)", "ba", "387"],
						["Botswana", "bw", "267"],
						["Brazil (Brasil)", "br", "55"],
						["British Indian Ocean Territory", "io", "246"],
						["British Virgin Islands", "vg", "1", 11, ["284"]],
						["Brunei", "bn", "673"],
						["Bulgaria (България)", "bg", "359"],
						["Burkina Faso", "bf", "226"],
						["Burundi (Uburundi)", "bi", "257"],
						["Cambodia (កម្ពុជា)", "kh", "855"],
						["Cameroon (Cameroun)", "cm", "237"],
						[
							"Canada",
							"ca",
							"1",
							1,
							[
								"204",
								"226",
								"236",
								"249",
								"250",
								"289",
								"306",
								"343",
								"365",
								"387",
								"403",
								"416",
								"418",
								"431",
								"437",
								"438",
								"450",
								"506",
								"514",
								"519",
								"548",
								"579",
								"581",
								"587",
								"604",
								"613",
								"639",
								"647",
								"672",
								"705",
								"709",
								"742",
								"778",
								"780",
								"782",
								"807",
								"819",
								"825",
								"867",
								"873",
								"902",
								"905",
							],
						],
						["Cape Verde (Kabu Verdi)", "cv", "238"],
						["Caribbean Netherlands", "bq", "599", 1, ["3", "4", "7"]],
						["Cayman Islands", "ky", "1", 12, ["345"]],
						[
							"Central African Republic (République centrafricaine)",
							"cf",
							"236",
						],
						["Chad (Tchad)", "td", "235"],
						["Chile", "cl", "56"],
						["China (中国)", "cn", "86"],
						["Christmas Island", "cx", "61", 2, ["89164"]],
						["Cocos (Keeling) Islands", "cc", "61", 1, ["89162"]],
						["Colombia", "co", "57"],
						["Comoros (‫جزر القمر‬‎)", "km", "269"],
						["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"],
						["Congo (Republic) (Congo-Brazzaville)", "cg", "242"],
						["Cook Islands", "ck", "682"],
						["Costa Rica", "cr", "506"],
						["Côte d’Ivoire", "ci", "225"],
						["Croatia (Hrvatska)", "hr", "385"],
						["Cuba", "cu", "53"],
						["Curaçao", "cw", "599", 0],
						["Cyprus (Κύπρος)", "cy", "357"],
						["Czech Republic (Česká republika)", "cz", "420"],
						["Denmark (Danmark)", "dk", "45"],
						["Djibouti", "dj", "253"],
						["Dominica", "dm", "1", 13, ["767"]],
						[
							"Dominican Republic (República Dominicana)",
							"do",
							"1",
							2,
							["809", "829", "849"],
						],
						["Ecuador", "ec", "593"],
						["Egypt (‫مصر‬‎)", "eg", "20"],
						["El Salvador", "sv", "503"],
						["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"],
						["Eritrea", "er", "291"],
						["Estonia (Eesti)", "ee", "372"],
						["Eswatini", "sz", "268"],
						["Ethiopia", "et", "251"],
						["Falkland Islands (Islas Malvinas)", "fk", "500"],
						["Faroe Islands (Føroyar)", "fo", "298"],
						["Fiji", "fj", "679"],
						["Finland (Suomi)", "fi", "358", 0],
						["France", "fr", "33"],
						["French Guiana (Guyane française)", "gf", "594"],
						["French Polynesia (Polynésie française)", "pf", "689"],
						["Gabon", "ga", "241"],
						["Gambia", "gm", "220"],
						["Georgia (საქართველო)", "ge", "995"],
						["Germany (Deutschland)", "de", "49"],
						["Ghana (Gaana)", "gh", "233"],
						["Gibraltar", "gi", "350"],
						["Greece (Ελλάδα)", "gr", "30"],
						["Greenland (Kalaallit Nunaat)", "gl", "299"],
						["Grenada", "gd", "1", 14, ["473"]],
						["Guadeloupe", "gp", "590", 0],
						["Guam", "gu", "1", 15, ["671"]],
						["Guatemala", "gt", "502"],
						["Guernsey", "gg", "44", 1, ["1481", "7781", "7839", "7911"]],
						["Guinea (Guinée)", "gn", "224"],
						["Guinea-Bissau (Guiné Bissau)", "gw", "245"],
						["Guyana", "gy", "592"],
						["Haiti", "ht", "509"],
						["Honduras", "hn", "504"],
						["Hong Kong (香港)", "hk", "852"],
						["Hungary (Magyarország)", "hu", "36"],
						["Iceland (Ísland)", "is", "354"],
						["India (भारत)", "in", "91"],
						["Indonesia", "id", "62"],
						["Iran (‫ایران‬‎)", "ir", "98"],
						["Iraq (‫العراق‬‎)", "iq", "964"],
						["Ireland", "ie", "353"],
						[
							"Isle of Man",
							"im",
							"44",
							2,
							["1624", "74576", "7524", "7924", "7624"],
						],
						["Israel (‫ישראל‬‎)", "il", "972"],
						["Italy (Italia)", "it", "39", 0],
						["Jamaica", "jm", "1", 4, ["876", "658"]],
						["Japan (日本)", "jp", "81"],
						[
							"Jersey",
							"je",
							"44",
							3,
							["1534", "7509", "7700", "7797", "7829", "7937"],
						],
						["Jordan (‫الأردن‬‎)", "jo", "962"],
						["Kazakhstan (Казахстан)", "kz", "7", 1, ["33", "7"]],
						["Kenya", "ke", "254"],
						["Kiribati", "ki", "686"],
						["Kosovo", "xk", "383"],
						["Kuwait (‫الكويت‬‎)", "kw", "965"],
						["Kyrgyzstan (Кыргызстан)", "kg", "996"],
						["Laos (ລາວ)", "la", "856"],
						["Latvia (Latvija)", "lv", "371"],
						["Lebanon (‫لبنان‬‎)", "lb", "961"],
						["Lesotho", "ls", "266"],
						["Liberia", "lr", "231"],
						["Libya (‫ليبيا‬‎)", "ly", "218"],
						["Liechtenstein", "li", "423"],
						["Lithuania (Lietuva)", "lt", "370"],
						["Luxembourg", "lu", "352"],
						["Macau (澳門)", "mo", "853"],
						["North Macedonia (Македонија)", "mk", "389"],
						["Madagascar (Madagasikara)", "mg", "261"],
						["Malawi", "mw", "265"],
						["Malaysia", "my", "60"],
						["Maldives", "mv", "960"],
						["Mali", "ml", "223"],
						["Malta", "mt", "356"],
						["Marshall Islands", "mh", "692"],
						["Martinique", "mq", "596"],
						["Mauritania (‫موريتانيا‬‎)", "mr", "222"],
						["Mauritius (Moris)", "mu", "230"],
						["Mayotte", "yt", "262", 1, ["269", "639"]],
						["Mexico (México)", "mx", "52"],
						["Micronesia", "fm", "691"],
						["Moldova (Republica Moldova)", "md", "373"],
						["Monaco", "mc", "377"],
						["Mongolia (Монгол)", "mn", "976"],
						["Montenegro (Crna Gora)", "me", "382"],
						["Montserrat", "ms", "1", 16, ["664"]],
						["Morocco (‫المغرب‬‎)", "ma", "212", 0],
						["Mozambique (Moçambique)", "mz", "258"],
						["Myanmar (Burma) (မြန်မာ)", "mm", "95"],
						["Namibia (Namibië)", "na", "264"],
						["Nauru", "nr", "674"],
						["Nepal (नेपाल)", "np", "977"],
						["Netherlands (Nederland)", "nl", "31"],
						["New Caledonia (Nouvelle-Calédonie)", "nc", "687"],
						["New Zealand", "nz", "64"],
						["Nicaragua", "ni", "505"],
						["Niger (Nijar)", "ne", "227"],
						["Nigeria", "ng", "234"],
						["Niue", "nu", "683"],
						["Norfolk Island", "nf", "672"],
						["North Korea (조선 민주주의 인민 공화국)", "kp", "850"],
						["Northern Mariana Islands", "mp", "1", 17, ["670"]],
						["Norway (Norge)", "no", "47", 0],
						["Oman (‫عُمان‬‎)", "om", "968"],
						["Pakistan (‫پاکستان‬‎)", "pk", "92"],
						["Palau", "pw", "680"],
						["Palestine (‫فلسطين‬‎)", "ps", "970"],
						["Panama (Panamá)", "pa", "507"],
						["Papua New Guinea", "pg", "675"],
						["Paraguay", "py", "595"],
						["Peru (Perú)", "pe", "51"],
						["Philippines", "ph", "63"],
						["Poland (Polska)", "pl", "48"],
						["Portugal", "pt", "351"],
						["Puerto Rico", "pr", "1", 3, ["787", "939"]],
						["Qatar (‫قطر‬‎)", "qa", "974"],
						["Réunion (La Réunion)", "re", "262", 0],
						["Romania (România)", "ro", "40"],
						["Russia (Россия)", "ru", "7", 0],
						["Rwanda", "rw", "250"],
						["Saint Barthélemy", "bl", "590", 1],
						["Saint Helena", "sh", "290"],
						["Saint Kitts and Nevis", "kn", "1", 18, ["869"]],
						["Saint Lucia", "lc", "1", 19, ["758"]],
						["Saint Martin (Saint-Martin (partie française))", "mf", "590", 2],
						[
							"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)",
							"pm",
							"508",
						],
						["Saint Vincent and the Grenadines", "vc", "1", 20, ["784"]],
						["Samoa", "ws", "685"],
						["San Marino", "sm", "378"],
						["São Tomé and Príncipe (São Tomé e Príncipe)", "st", "239"],
						["Saudi Arabia (‫المملكة العربية السعودية‬‎)", "sa", "966"],
						["Senegal (Sénégal)", "sn", "221"],
						["Serbia (Србија)", "rs", "381"],
						["Seychelles", "sc", "248"],
						["Sierra Leone", "sl", "232"],
						["Singapore", "sg", "65"],
						["Sint Maarten", "sx", "1", 21, ["721"]],
						["Slovakia (Slovensko)", "sk", "421"],
						["Slovenia (Slovenija)", "si", "386"],
						["Solomon Islands", "sb", "677"],
						["Somalia (Soomaaliya)", "so", "252"],
						["South Africa", "za", "27"],
						["South Korea (대한민국)", "kr", "82"],
						["South Sudan (‫جنوب السودان‬‎)", "ss", "211"],
						["Spain (España)", "es", "34"],
						["Sri Lanka (ශ්‍රී ලංකාව)", "lk", "94"],
						["Sudan (‫السودان‬‎)", "sd", "249"],
						["Suriname", "sr", "597"],
						["Svalbard and Jan Mayen", "sj", "47", 1, ["79"]],
						["Sweden (Sverige)", "se", "46"],
						["Switzerland (Schweiz)", "ch", "41"],
						["Syria (‫سوريا‬‎)", "sy", "963"],
						["Taiwan (台灣)", "tw", "886"],
						["Tajikistan", "tj", "992"],
						["Tanzania", "tz", "255"],
						["Thailand (ไทย)", "th", "66"],
						["Timor-Leste", "tl", "670"],
						["Togo", "tg", "228"],
						["Tokelau", "tk", "690"],
						["Tonga", "to", "676"],
						["Trinidad and Tobago", "tt", "1", 22, ["868"]],
						["Tunisia (‫تونس‬‎)", "tn", "216"],
						["Turkey (Türkiye)", "tr", "90"],
						["Turkmenistan", "tm", "993"],
						["Turks and Caicos Islands", "tc", "1", 23, ["649"]],
						["Tuvalu", "tv", "688"],
						["U.S. Virgin Islands", "vi", "1", 24, ["340"]],
						["Uganda", "ug", "256"],
						["Ukraine (Україна)", "ua", "380"],
						["United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", "ae", "971"],
						["United Kingdom", "gb", "44", 0],
						["United States", "us", "1", 0],
						["Uruguay", "uy", "598"],
						["Uzbekistan (Oʻzbekiston)", "uz", "998"],
						["Vanuatu", "vu", "678"],
						["Vatican City (Città del Vaticano)", "va", "39", 1, ["06698"]],
						["Venezuela", "ve", "58"],
						["Vietnam (Việt Nam)", "vn", "84"],
						["Wallis and Futuna (Wallis-et-Futuna)", "wf", "681"],
						[
							"Western Sahara (‫الصحراء الغربية‬‎)",
							"eh",
							"212",
							1,
							["5288", "5289"],
						],
						["Yemen (‫اليمن‬‎)", "ye", "967"],
						["Zambia", "zm", "260"],
						["Zimbabwe", "zw", "263"],
						["Åland Islands", "ax", "358", 1, ["18"]],
					],
					t = 0;
				t < a.length;
				t++
			) {
				var e = a[t];
				a[t] = {
					name: e[0],
					iso2: e[1],
					dialCode: e[2],
					priority: e[3] || 0,
					areaCodes: e[4] || null,
				};
			}
			function s(t, e) {
				for (var i = 0; i < e.length; i++) {
					var s = e[i];
					(s.enumerable = s.enumerable || !1),
						(s.configurable = !0),
						"value" in s && (s.writable = !0),
						Object.defineProperty(t, s.key, s);
				}
			}
			function r(t, e) {
				for (var i = Object.keys(t), s = 0; s < i.length; s++) e(i[s], t[i[s]]);
			}
			function l(e) {
				r(window.intlTelInputGlobals.instances, function (t) {
					window.intlTelInputGlobals.instances[t][e]();
				});
			}
			function n(t, e, i) {
				var s = document.createElement("script");
				(s.onload = function () {
					l("handleUtils"), e && e();
				}),
					(s.onerror = function () {
						l("rejectUtilsScriptPromise"), i && i();
					}),
					(s.className = "iti-load-utils"),
					(s.async = !0),
					(s.src = t),
					document.body.appendChild(s);
			}
			var i = {
					getInstance: function (t) {
						t = t.getAttribute("data-intl-tel-input-id");
						return window.intlTelInputGlobals.instances[t];
					},
					instances: {},
					documentReady: function () {
						return "complete" === document.readyState;
					},
				},
				d = ("object" == typeof window && (window.intlTelInputGlobals = i), 0),
				c = {
					allowDropdown: !0,
					autoHideDialCode: !0,
					autoPlaceholder: "polite",
					customContainer: "",
					customPlaceholder: null,
					dropdownContainer: null,
					excludeCountries: [],
					formatOnDisplay: !0,
					geoIpLookup: null,
					hiddenInput: "",
					initialCountry: "",
					localizedCountries: null,
					nationalMode: !0,
					onlyCountries: [],
					placeholderNumberType: "MOBILE",
					preferredCountries: ["us", "gb"],
					separateDialCode: !1,
					utilsScript: "",
				},
				h = [
					"800",
					"822",
					"833",
					"844",
					"855",
					"866",
					"877",
					"880",
					"881",
					"882",
					"883",
					"884",
					"885",
					"886",
					"887",
					"888",
					"889",
				],
				u = (function () {
					function n(t, e) {
						var i = this;
						if (!(this instanceof n))
							throw new TypeError("Cannot call a class as a function");
						(this.id = d++),
							(this.telInput = t),
							(this.activeItem = null),
							(this.highlightedItem = null);
						var s = e || {};
						(this.options = {}),
							r(c, function (t, e) {
								i.options[t] = s.hasOwnProperty(t) ? s[t] : e;
							}),
							(this.hadInitialPlaceholder = Boolean(
								t.getAttribute("placeholder")
							));
					}
					var t, e, i;
					return (
						(t = n),
						(e = [
							{
								key: "_init",
								value: function () {
									var t,
										e,
										i = this;
									this.options.nationalMode &&
										(this.options.autoHideDialCode = !1),
										this.options.separateDialCode &&
											(this.options.autoHideDialCode =
												this.options.nationalMode =
													!1),
										(this.isMobile =
											/Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
												navigator.userAgent
											)),
										this.isMobile &&
											(document.body.classList.add("iti-mobile"),
											this.options.dropdownContainer ||
												(this.options.dropdownContainer = document.body)),
										"undefined" != typeof Promise
											? ((t = new Promise(function (t, e) {
													(i.resolveAutoCountryPromise = t),
														(i.rejectAutoCountryPromise = e);
											  })),
											  (e = new Promise(function (t, e) {
													(i.resolveUtilsScriptPromise = t),
														(i.rejectUtilsScriptPromise = e);
											  })),
											  (this.promise = Promise.all([t, e])))
											: ((this.resolveAutoCountryPromise =
													this.rejectAutoCountryPromise =
														function () {}),
											  (this.resolveUtilsScriptPromise =
													this.rejectUtilsScriptPromise =
														function () {})),
										(this.selectedCountryData = {}),
										this._processCountryData(),
										this._generateMarkup(),
										this._setInitialState(),
										this._initListeners(),
										this._initRequests();
								},
							},
							{
								key: "_processCountryData",
								value: function () {
									this._processAllCountries(),
										this._processCountryCodes(),
										this._processPreferredCountries(),
										this.options.localizedCountries &&
											this._translateCountriesByLocale(),
										(this.options.onlyCountries.length ||
											this.options.localizedCountries) &&
											this.countries.sort(this._countryNameSort);
								},
							},
							{
								key: "_addCountryCode",
								value: function (t, e, i) {
									e.length > this.countryCodeMaxLen &&
										(this.countryCodeMaxLen = e.length),
										this.countryCodes.hasOwnProperty(e) ||
											(this.countryCodes[e] = []);
									for (var s = 0; s < this.countryCodes[e].length; s++)
										if (this.countryCodes[e][s] === t) return;
									i = i !== o ? i : this.countryCodes[e].length;
									this.countryCodes[e][i] = t;
								},
							},
							{
								key: "_processAllCountries",
								value: function () {
									var e, i;
									this.options.onlyCountries.length
										? ((e = this.options.onlyCountries.map(function (t) {
												return t.toLowerCase();
										  })),
										  (this.countries = a.filter(function (t) {
												return -1 < e.indexOf(t.iso2);
										  })))
										: this.options.excludeCountries.length
										? ((i = this.options.excludeCountries.map(function (t) {
												return t.toLowerCase();
										  })),
										  (this.countries = a.filter(function (t) {
												return -1 === i.indexOf(t.iso2);
										  })))
										: (this.countries = a);
								},
							},
							{
								key: "_translateCountriesByLocale",
								value: function () {
									for (var t = 0; t < this.countries.length; t++) {
										var e = this.countries[t].iso2.toLowerCase();
										this.options.localizedCountries.hasOwnProperty(e) &&
											(this.countries[t].name =
												this.options.localizedCountries[e]);
									}
								},
							},
							{
								key: "_countryNameSort",
								value: function (t, e) {
									return t.name.localeCompare(e.name);
								},
							},
							{
								key: "_processCountryCodes",
								value: function () {
									(this.countryCodeMaxLen = 0),
										(this.dialCodes = {}),
										(this.countryCodes = {});
									for (var t = 0; t < this.countries.length; t++) {
										var e = this.countries[t];
										this.dialCodes[e.dialCode] ||
											(this.dialCodes[e.dialCode] = !0),
											this._addCountryCode(e.iso2, e.dialCode, e.priority);
									}
									for (var i = 0; i < this.countries.length; i++) {
										var s = this.countries[i];
										if (s.areaCodes)
											for (
												var n = this.countryCodes[s.dialCode][0], o = 0;
												o < s.areaCodes.length;
												o++
											) {
												for (var a = s.areaCodes[o], r = 1; r < a.length; r++) {
													var l = s.dialCode + a.substr(0, r);
													this._addCountryCode(n, l),
														this._addCountryCode(s.iso2, l);
												}
												this._addCountryCode(s.iso2, s.dialCode + a);
											}
									}
								},
							},
							{
								key: "_processPreferredCountries",
								value: function () {
									this.preferredCountries = [];
									for (
										var t = 0;
										t < this.options.preferredCountries.length;
										t++
									) {
										var e = this.options.preferredCountries[t].toLowerCase(),
											e = this._getCountryData(e, !1, !0);
										e && this.preferredCountries.push(e);
									}
								},
							},
							{
								key: "_createEl",
								value: function (t, e, i) {
									var s = document.createElement(t);
									return (
										e &&
											r(e, function (t, e) {
												s.setAttribute(t, e);
											}),
										i && i.appendChild(s),
										s
									);
								},
							},
							{
								key: "_generateMarkup",
								value: function () {
									this.telInput.hasAttribute("autocomplete") ||
										(this.telInput.form &&
											this.telInput.form.hasAttribute("autocomplete")) ||
										this.telInput.setAttribute("autocomplete", "off");
									var t,
										e,
										i,
										s = "iti",
										s =
											(this.options.allowDropdown &&
												(s += " iti--allow-dropdown"),
											this.options.separateDialCode &&
												(s += " iti--separate-dial-code"),
											this.options.customContainer &&
												(s = s + " " + this.options.customContainer),
											this._createEl("div", { class: s }));
									this.telInput.parentNode.insertBefore(s, this.telInput),
										(this.flagsContainer = this._createEl(
											"div",
											{ class: "iti__flag-container" },
											s
										)),
										s.appendChild(this.telInput),
										(this.selectedFlag = this._createEl(
											"div",
											{
												class: "iti__selected-flag",
												role: "combobox",
												"aria-controls": "iti-".concat(
													this.id,
													"__country-listbox"
												),
												"aria-owns": "iti-".concat(
													this.id,
													"__country-listbox"
												),
												"aria-expanded": "false",
											},
											this.flagsContainer
										)),
										(this.selectedFlagInner = this._createEl(
											"div",
											{ class: "iti__flag" },
											this.selectedFlag
										)),
										this.options.separateDialCode &&
											(this.selectedDialCode = this._createEl(
												"div",
												{ class: "iti__selected-dial-code" },
												this.selectedFlag
											)),
										this.options.allowDropdown &&
											(this.selectedFlag.setAttribute("tabindex", "0"),
											(this.dropdownArrow = this._createEl(
												"div",
												{ class: "iti__arrow" },
												this.selectedFlag
											)),
											(this.countryList = this._createEl("ul", {
												class: "iti__country-list iti__hide",
												id: "iti-".concat(this.id, "__country-listbox"),
												role: "listbox",
												"aria-label": "List of countries",
											})),
											this.preferredCountries.length &&
												(this._appendListItems(
													this.preferredCountries,
													"iti__preferred",
													!0
												),
												this._createEl(
													"li",
													{
														class: "iti__divider",
														role: "separator",
														"aria-disabled": "true",
													},
													this.countryList
												)),
											this._appendListItems(this.countries, "iti__standard"),
											this.options.dropdownContainer
												? ((this.dropdown = this._createEl("div", {
														class: "iti iti--container",
												  })),
												  this.dropdown.appendChild(this.countryList))
												: this.flagsContainer.appendChild(this.countryList)),
										this.options.hiddenInput &&
											((t = this.options.hiddenInput),
											(e = this.telInput.getAttribute("name")) &&
												-1 !== (i = e.lastIndexOf("[")) &&
												(t = "".concat(e.substr(0, i), "[").concat(t, "]")),
											(this.hiddenInput = this._createEl("input", {
												type: "hidden",
												name: t,
											})),
											s.appendChild(this.hiddenInput));
								},
							},
							{
								key: "_appendListItems",
								value: function (t, e, i) {
									for (var s = "", n = 0; n < t.length; n++)
										var o = t[n],
											a = i ? "-preferred" : "",
											s =
												(s =
													(s =
														(s += "<li class='iti__country "
															.concat(e, "' tabIndex='-1' id='iti-")
															.concat(this.id, "__item-")
															.concat(o.iso2)
															.concat(a, "' role='option' data-dial-code='")
															.concat(o.dialCode, "' data-country-code='")
															.concat(o.iso2, "' aria-selected='false'>")) +
														"<div class='iti__flag-box'><div class='iti__flag iti__".concat(
															o.iso2,
															"'></div></div>"
														)) +
													"<span class='iti__country-name'>".concat(
														o.name,
														"</span>"
													)) +
												"<span class='iti__dial-code'>+".concat(
													o.dialCode,
													"</span>"
												) +
												"</li>";
									this.countryList.insertAdjacentHTML("beforeend", s);
								},
							},
							{
								key: "_setInitialState",
								value: function () {
									var t = this.telInput.getAttribute("value"),
										e = this.telInput.value,
										t =
											t && "+" === t.charAt(0) && (!e || "+" !== e.charAt(0))
												? t
												: e,
										e = this._getDialCode(t),
										i = this._isRegionlessNanp(t),
										s = this.options,
										n = s.initialCountry,
										o = s.nationalMode,
										a = s.autoHideDialCode,
										s = s.separateDialCode;
									e && !i
										? this._updateFlagFromNumber(t)
										: "auto" !== n &&
										  (n
												? this._setFlag(n.toLowerCase())
												: e && i
												? this._setFlag("us")
												: ((this.defaultCountry = (
														this.preferredCountries.length
															? this.preferredCountries
															: this.countries
												  )[0].iso2),
												  t || this._setFlag(this.defaultCountry)),
										  t ||
												o ||
												a ||
												s ||
												(this.telInput.value = "+".concat(
													this.selectedCountryData.dialCode
												))),
										t && this._updateValFromNumber(t);
								},
							},
							{
								key: "_initListeners",
								value: function () {
									this._initKeyListeners(),
										this.options.autoHideDialCode && this._initBlurListeners(),
										this.options.allowDropdown && this._initDropdownListeners(),
										this.hiddenInput && this._initHiddenInputListener();
								},
							},
							{
								key: "_initHiddenInputListener",
								value: function () {
									var t = this;
									(this._handleHiddenInputSubmit = function () {
										t.hiddenInput.value = t.getNumber();
									}),
										this.telInput.form &&
											this.telInput.form.addEventListener(
												"submit",
												this._handleHiddenInputSubmit
											);
								},
							},
							{
								key: "_getClosestLabel",
								value: function () {
									for (var t = this.telInput; t && "LABEL" !== t.tagName; )
										t = t.parentNode;
									return t;
								},
							},
							{
								key: "_initDropdownListeners",
								value: function () {
									var e = this,
										t =
											((this._handleLabelClick = function (t) {
												e.countryList.classList.contains("iti__hide")
													? e.telInput.focus()
													: t.preventDefault();
											}),
											this._getClosestLabel());
									t && t.addEventListener("click", this._handleLabelClick),
										(this._handleClickSelectedFlag = function () {
											!e.countryList.classList.contains("iti__hide") ||
												e.telInput.disabled ||
												e.telInput.readOnly ||
												e._showDropdown();
										}),
										this.selectedFlag.addEventListener(
											"click",
											this._handleClickSelectedFlag
										),
										(this._handleFlagsContainerKeydown = function (t) {
											e.countryList.classList.contains("iti__hide") &&
												-1 !==
													[
														"ArrowUp",
														"Up",
														"ArrowDown",
														"Down",
														" ",
														"Enter",
													].indexOf(t.key) &&
												(t.preventDefault(),
												t.stopPropagation(),
												e._showDropdown()),
												"Tab" === t.key && e._closeDropdown();
										}),
										this.flagsContainer.addEventListener(
											"keydown",
											this._handleFlagsContainerKeydown
										);
								},
							},
							{
								key: "_initRequests",
								value: function () {
									var t = this;
									this.options.utilsScript && !window.intlTelInputUtils
										? window.intlTelInputGlobals.documentReady()
											? window.intlTelInputGlobals.loadUtils(
													this.options.utilsScript
											  )
											: window.addEventListener("load", function () {
													window.intlTelInputGlobals.loadUtils(
														t.options.utilsScript
													);
											  })
										: this.resolveUtilsScriptPromise(),
										"auto" === this.options.initialCountry
											? this._loadAutoCountry()
											: this.resolveAutoCountryPromise();
								},
							},
							{
								key: "_loadAutoCountry",
								value: function () {
									window.intlTelInputGlobals.autoCountry
										? this.handleAutoCountry()
										: window.intlTelInputGlobals.startedLoadingAutoCountry ||
										  ((window.intlTelInputGlobals.startedLoadingAutoCountry =
												!0),
										  "function" == typeof this.options.geoIpLookup &&
												this.options.geoIpLookup(
													function (t) {
														(window.intlTelInputGlobals.autoCountry =
															t.toLowerCase()),
															setTimeout(function () {
																return l("handleAutoCountry");
															});
													},
													function () {
														return l("rejectAutoCountryPromise");
													}
												));
								},
							},
							{
								key: "_initKeyListeners",
								value: function () {
									var t = this;
									(this._handleKeyupEvent = function () {
										t._updateFlagFromNumber(t.telInput.value) &&
											t._triggerCountryChange();
									}),
										this.telInput.addEventListener(
											"keyup",
											this._handleKeyupEvent
										),
										(this._handleClipboardEvent = function () {
											setTimeout(t._handleKeyupEvent);
										}),
										this.telInput.addEventListener(
											"cut",
											this._handleClipboardEvent
										),
										this.telInput.addEventListener(
											"paste",
											this._handleClipboardEvent
										);
								},
							},
							{
								key: "_cap",
								value: function (t) {
									var e = this.telInput.getAttribute("maxlength");
									return e && t.length > e ? t.substr(0, e) : t;
								},
							},
							{
								key: "_initBlurListeners",
								value: function () {
									var t = this;
									(this._handleSubmitOrBlurEvent = function () {
										t._removeEmptyDialCode();
									}),
										this.telInput.form &&
											this.telInput.form.addEventListener(
												"submit",
												this._handleSubmitOrBlurEvent
											),
										this.telInput.addEventListener(
											"blur",
											this._handleSubmitOrBlurEvent
										);
								},
							},
							{
								key: "_removeEmptyDialCode",
								value: function () {
									var t;
									"+" !== this.telInput.value.charAt(0) ||
										((t = this._getNumeric(this.telInput.value)) &&
											this.selectedCountryData.dialCode !== t) ||
										(this.telInput.value = "");
								},
							},
							{
								key: "_getNumeric",
								value: function (t) {
									return t.replace(/\D/g, "");
								},
							},
							{
								key: "_trigger",
								value: function (t) {
									var e = document.createEvent("Event");
									e.initEvent(t, !0, !0), this.telInput.dispatchEvent(e);
								},
							},
							{
								key: "_showDropdown",
								value: function () {
									this.countryList.classList.remove("iti__hide"),
										this.selectedFlag.setAttribute("aria-expanded", "true"),
										this._setDropdownPosition(),
										this.activeItem &&
											(this._highlightListItem(this.activeItem, !1),
											this._scrollTo(this.activeItem, !0)),
										this._bindDropdownListeners(),
										this.dropdownArrow.classList.add("iti__arrow--up"),
										this._trigger("open:countrydropdown");
								},
							},
							{
								key: "_toggleClass",
								value: function (t, e, i) {
									i && !t.classList.contains(e)
										? t.classList.add(e)
										: !i && t.classList.contains(e) && t.classList.remove(e);
								},
							},
							{
								key: "_setDropdownPosition",
								value: function () {
									var t,
										e,
										i,
										s,
										n,
										o = this;
									this.options.dropdownContainer &&
										this.options.dropdownContainer.appendChild(this.dropdown),
										this.isMobile ||
											((t = this.telInput.getBoundingClientRect()),
											(s =
												window.pageYOffset ||
												document.documentElement.scrollTop),
											(e = t.top + s),
											(n = this.countryList.offsetHeight),
											(i =
												e + this.telInput.offsetHeight + n <
												s + window.innerHeight),
											(s = s < e - n),
											this._toggleClass(
												this.countryList,
												"iti__country-list--dropup",
												!i && s
											),
											this.options.dropdownContainer &&
												((n = !i && s ? 0 : this.telInput.offsetHeight),
												(this.dropdown.style.top = "".concat(e + n, "px")),
												(this.dropdown.style.left = "".concat(
													t.left + document.body.scrollLeft,
													"px"
												)),
												(this._handleWindowScroll = function () {
													return o._closeDropdown();
												}),
												window.addEventListener(
													"scroll",
													this._handleWindowScroll
												)));
								},
							},
							{
								key: "_getClosestListItem",
								value: function (t) {
									for (
										var e = t;
										e &&
										e !== this.countryList &&
										!e.classList.contains("iti__country");

									)
										e = e.parentNode;
									return e === this.countryList ? null : e;
								},
							},
							{
								key: "_bindDropdownListeners",
								value: function () {
									var e = this,
										t =
											((this._handleMouseoverCountryList = function (t) {
												t = e._getClosestListItem(t.target);
												t && e._highlightListItem(t, !1);
											}),
											this.countryList.addEventListener(
												"mouseover",
												this._handleMouseoverCountryList
											),
											(this._handleClickCountryList = function (t) {
												t = e._getClosestListItem(t.target);
												t && e._selectListItem(t);
											}),
											this.countryList.addEventListener(
												"click",
												this._handleClickCountryList
											),
											!0),
										i =
											((this._handleClickOffToClose = function () {
												t || e._closeDropdown(), (t = !1);
											}),
											document.documentElement.addEventListener(
												"click",
												this._handleClickOffToClose
											),
											""),
										s = null;
									(this._handleKeydownOnDropdown = function (t) {
										t.preventDefault(),
											"ArrowUp" === t.key ||
											"Up" === t.key ||
											"ArrowDown" === t.key ||
											"Down" === t.key
												? e._handleUpDownKey(t.key)
												: "Enter" === t.key
												? e._handleEnterKey()
												: "Escape" === t.key
												? e._closeDropdown()
												: /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(t.key) &&
												  (s && clearTimeout(s),
												  (i += t.key.toLowerCase()),
												  e._searchForCountry(i),
												  (s = setTimeout(function () {
														i = "";
												  }, 1e3)));
									}),
										document.addEventListener(
											"keydown",
											this._handleKeydownOnDropdown
										);
								},
							},
							{
								key: "_handleUpDownKey",
								value: function (t) {
									var e =
										"ArrowUp" === t || "Up" === t
											? this.highlightedItem.previousElementSibling
											: this.highlightedItem.nextElementSibling;
									e &&
										(e.classList.contains("iti__divider") &&
											(e =
												"ArrowUp" === t || "Up" === t
													? e.previousElementSibling
													: e.nextElementSibling),
										this._highlightListItem(e, !0));
								},
							},
							{
								key: "_handleEnterKey",
								value: function () {
									this.highlightedItem &&
										this._selectListItem(this.highlightedItem);
								},
							},
							{
								key: "_searchForCountry",
								value: function (t) {
									for (var e = 0; e < this.countries.length; e++)
										if (this._startsWith(this.countries[e].name, t)) {
											var i = this.countryList.querySelector(
												"#iti-"
													.concat(this.id, "__item-")
													.concat(this.countries[e].iso2)
											);
											this._highlightListItem(i, !1), this._scrollTo(i, !0);
											break;
										}
								},
							},
							{
								key: "_startsWith",
								value: function (t, e) {
									return t.substr(0, e.length).toLowerCase() === e;
								},
							},
							{
								key: "_updateValFromNumber",
								value: function (t) {
									var e, i, s;
									this.options.formatOnDisplay &&
										window.intlTelInputUtils &&
										this.selectedCountryData &&
										((e =
											!this.options.separateDialCode &&
											(this.options.nationalMode || "+" !== t.charAt(0))),
										(i = (s = intlTelInputUtils.numberFormat).NATIONAL),
										(s = s.INTERNATIONAL),
										(t = intlTelInputUtils.formatNumber(
											t,
											this.selectedCountryData.iso2,
											e ? i : s
										))),
										(t = this._beforeSetNumber(t)),
										(this.telInput.value = t);
								},
							},
							{
								key: "_updateFlagFromNumber",
								value: function (t) {
									var e = this.selectedCountryData.dialCode,
										i =
											(t &&
												this.options.nationalMode &&
												"1" === e &&
												"+" !== t.charAt(0) &&
												("1" !== t.charAt(0) && (t = "1".concat(t)),
												(t = "+".concat(t))),
											this.options.separateDialCode &&
												e &&
												"+" !== t.charAt(0) &&
												(t = "+".concat(e).concat(t)),
											this._getDialCode(t, !0)),
										s = this._getNumeric(t),
										n = null;
									if (i) {
										var o = this.countryCodes[this._getNumeric(i)],
											i =
												-1 !== o.indexOf(this.selectedCountryData.iso2) &&
												s.length <= i.length - 1;
										if (!("1" === e && this._isRegionlessNanp(s)) && !i)
											for (var a = 0; a < o.length; a++)
												if (o[a]) {
													n = o[a];
													break;
												}
									} else
										"+" === t.charAt(0) && s.length
											? (n = "")
											: (t && "+" !== t) || (n = this.defaultCountry);
									return null !== n && this._setFlag(n);
								},
							},
							{
								key: "_isRegionlessNanp",
								value: function (t) {
									var t = this._getNumeric(t);
									return (
										"1" === t.charAt(0) &&
										((t = t.substr(1, 3)), -1 !== h.indexOf(t))
									);
								},
							},
							{
								key: "_highlightListItem",
								value: function (t, e) {
									var i = this.highlightedItem;
									i && i.classList.remove("iti__highlight"),
										(this.highlightedItem = t),
										this.highlightedItem.classList.add("iti__highlight"),
										e && this.highlightedItem.focus();
								},
							},
							{
								key: "_getCountryData",
								value: function (t, e, i) {
									for (var s = e ? a : this.countries, n = 0; n < s.length; n++)
										if (s[n].iso2 === t) return s[n];
									if (i) return null;
									throw new Error("No country data for '".concat(t, "'"));
								},
							},
							{
								key: "_setFlag",
								value: function (t) {
									var e = this.selectedCountryData.iso2
											? this.selectedCountryData
											: {},
										i =
											((this.selectedCountryData = t
												? this._getCountryData(t, !1, !1)
												: {}),
											this.selectedCountryData.iso2 &&
												(this.defaultCountry = this.selectedCountryData.iso2),
											this.selectedFlagInner.setAttribute(
												"class",
												"iti__flag iti__".concat(t)
											),
											t
												? ""
														.concat(this.selectedCountryData.name, ": +")
														.concat(this.selectedCountryData.dialCode)
												: "Unknown");
									return (
										this.selectedFlag.setAttribute("title", i),
										this.options.separateDialCode &&
											((i = this.selectedCountryData.dialCode
												? "+".concat(this.selectedCountryData.dialCode)
												: ""),
											(this.selectedDialCode.innerHTML = i),
											(i =
												this.selectedFlag.offsetWidth ||
												this._getHiddenSelectedFlagWidth()),
											(this.telInput.style.paddingLeft = "".concat(
												i + 6,
												"px"
											))),
										this._updatePlaceholder(),
										this.options.allowDropdown &&
											((i = this.activeItem) &&
												(i.classList.remove("iti__active"),
												i.setAttribute("aria-selected", "false")),
											t &&
												((i =
													this.countryList.querySelector(
														"#iti-"
															.concat(this.id, "__item-")
															.concat(t, "-preferred")
													) ||
													this.countryList.querySelector(
														"#iti-".concat(this.id, "__item-").concat(t)
													)).setAttribute("aria-selected", "true"),
												i.classList.add("iti__active"),
												(this.activeItem = i),
												this.selectedFlag.setAttribute(
													"aria-activedescendant",
													i.getAttribute("id")
												))),
										e.iso2 !== t
									);
								},
							},
							{
								key: "_getHiddenSelectedFlagWidth",
								value: function () {
									var t = this.telInput.parentNode.cloneNode(),
										e =
											((t.style.visibility = "hidden"),
											document.body.appendChild(t),
											this.flagsContainer.cloneNode()),
										i = (t.appendChild(e), this.selectedFlag.cloneNode(!0)),
										e = (e.appendChild(i), i.offsetWidth);
									return t.parentNode.removeChild(t), e;
								},
							},
							{
								key: "_updatePlaceholder",
								value: function () {
									var t =
										"aggressive" === this.options.autoPlaceholder ||
										(!this.hadInitialPlaceholder &&
											"polite" === this.options.autoPlaceholder);
									window.intlTelInputUtils &&
										t &&
										((t =
											intlTelInputUtils.numberType[
												this.options.placeholderNumberType
											]),
										(t = this.selectedCountryData.iso2
											? intlTelInputUtils.getExampleNumber(
													this.selectedCountryData.iso2,
													this.options.nationalMode,
													t
											  )
											: ""),
										(t = this._beforeSetNumber(t)),
										"function" == typeof this.options.customPlaceholder &&
											(t = this.options.customPlaceholder(
												t,
												this.selectedCountryData
											)),
										this.telInput.setAttribute("placeholder", t));
								},
							},
							{
								key: "_selectListItem",
								value: function (t) {
									var e = this._setFlag(t.getAttribute("data-country-code")),
										t =
											(this._closeDropdown(),
											this._updateDialCode(
												t.getAttribute("data-dial-code"),
												!0
											),
											this.telInput.focus(),
											this.telInput.value.length);
									this.telInput.setSelectionRange(t, t),
										e && this._triggerCountryChange();
								},
							},
							{
								key: "_closeDropdown",
								value: function () {
									this.countryList.classList.add("iti__hide"),
										this.selectedFlag.setAttribute("aria-expanded", "false"),
										this.dropdownArrow.classList.remove("iti__arrow--up"),
										document.removeEventListener(
											"keydown",
											this._handleKeydownOnDropdown
										),
										document.documentElement.removeEventListener(
											"click",
											this._handleClickOffToClose
										),
										this.countryList.removeEventListener(
											"mouseover",
											this._handleMouseoverCountryList
										),
										this.countryList.removeEventListener(
											"click",
											this._handleClickCountryList
										),
										this.options.dropdownContainer &&
											(this.isMobile ||
												window.removeEventListener(
													"scroll",
													this._handleWindowScroll
												),
											this.dropdown.parentNode &&
												this.dropdown.parentNode.removeChild(this.dropdown)),
										this._trigger("close:countrydropdown");
								},
							},
							{
								key: "_scrollTo",
								value: function (t, e) {
									var i = this.countryList,
										s =
											window.pageYOffset || document.documentElement.scrollTop,
										n = i.offsetHeight,
										o = i.getBoundingClientRect().top + s,
										a = o + n,
										r = t.offsetHeight,
										t = t.getBoundingClientRect().top + s,
										s = t + r,
										l = t - o + i.scrollTop,
										d = n / 2 - r / 2;
									t < o
										? (e && (l -= d), (i.scrollTop = l))
										: a < s && (e && (l += d), (i.scrollTop = l - (n - r)));
								},
							},
							{
								key: "_updateDialCode",
								value: function (t, e) {
									var i = this.telInput.value,
										t = "+".concat(t);
									if ("+" === i.charAt(0))
										var s = this._getDialCode(i),
											s = s ? i.replace(s, t) : t;
									else {
										if (
											this.options.nationalMode ||
											this.options.separateDialCode
										)
											return;
										if (i) s = t + i;
										else {
											if (!e && this.options.autoHideDialCode) return;
											s = t;
										}
									}
									this.telInput.value = s;
								},
							},
							{
								key: "_getDialCode",
								value: function (t, e) {
									var i = "";
									if ("+" === t.charAt(0))
										for (var s = "", n = 0; n < t.length; n++) {
											var o = t.charAt(n);
											if (!isNaN(parseInt(o, 10))) {
												if (((s += o), e))
													this.countryCodes[s] && (i = t.substr(0, n + 1));
												else if (this.dialCodes[s]) {
													i = t.substr(0, n + 1);
													break;
												}
												if (s.length === this.countryCodeMaxLen) break;
											}
										}
									return i;
								},
							},
							{
								key: "_getFullNumber",
								value: function () {
									var t = this.telInput.value.trim(),
										e = this.selectedCountryData.dialCode,
										i = this._getNumeric(t),
										i =
											this.options.separateDialCode &&
											"+" !== t.charAt(0) &&
											e &&
											i
												? "+".concat(e)
												: "";
									return i + t;
								},
							},
							{
								key: "_beforeSetNumber",
								value: function (t) {
									var e;
									return (
										this.options.separateDialCode &&
											this._getDialCode(t) &&
											((e =
												" " ===
													t[
														(e = "+".concat(this.selectedCountryData.dialCode))
															.length
													] || "-" === t[e.length]
													? e.length + 1
													: e.length),
											(t = t.substr(e))),
										this._cap(t)
									);
								},
							},
							{
								key: "_triggerCountryChange",
								value: function () {
									this._trigger("countrychange");
								},
							},
							{
								key: "handleAutoCountry",
								value: function () {
									"auto" === this.options.initialCountry &&
										((this.defaultCountry =
											window.intlTelInputGlobals.autoCountry),
										this.telInput.value || this.setCountry(this.defaultCountry),
										this.resolveAutoCountryPromise());
								},
							},
							{
								key: "handleUtils",
								value: function () {
									window.intlTelInputUtils &&
										(this.telInput.value &&
											this._updateValFromNumber(this.telInput.value),
										this._updatePlaceholder()),
										this.resolveUtilsScriptPromise();
								},
							},
							{
								key: "destroy",
								value: function () {
									var t = this.telInput.form,
										e =
											(this.options.allowDropdown &&
												(this._closeDropdown(),
												this.selectedFlag.removeEventListener(
													"click",
													this._handleClickSelectedFlag
												),
												this.flagsContainer.removeEventListener(
													"keydown",
													this._handleFlagsContainerKeydown
												),
												(e = this._getClosestLabel()) &&
													e.removeEventListener(
														"click",
														this._handleLabelClick
													)),
											this.hiddenInput &&
												t &&
												t.removeEventListener(
													"submit",
													this._handleHiddenInputSubmit
												),
											this.options.autoHideDialCode &&
												(t &&
													t.removeEventListener(
														"submit",
														this._handleSubmitOrBlurEvent
													),
												this.telInput.removeEventListener(
													"blur",
													this._handleSubmitOrBlurEvent
												)),
											this.telInput.removeEventListener(
												"keyup",
												this._handleKeyupEvent
											),
											this.telInput.removeEventListener(
												"cut",
												this._handleClipboardEvent
											),
											this.telInput.removeEventListener(
												"paste",
												this._handleClipboardEvent
											),
											this.telInput.removeAttribute("data-intl-tel-input-id"),
											this.telInput.parentNode);
									e.parentNode.insertBefore(this.telInput, e),
										e.parentNode.removeChild(e),
										delete window.intlTelInputGlobals.instances[this.id];
								},
							},
							{
								key: "getExtension",
								value: function () {
									return window.intlTelInputUtils
										? intlTelInputUtils.getExtension(
												this._getFullNumber(),
												this.selectedCountryData.iso2
										  )
										: "";
								},
							},
							{
								key: "getNumber",
								value: function (t) {
									var e;
									return window.intlTelInputUtils
										? ((e = this.selectedCountryData.iso2),
										  intlTelInputUtils.formatNumber(
												this._getFullNumber(),
												e,
												t
										  ))
										: "";
								},
							},
							{
								key: "getNumberType",
								value: function () {
									return window.intlTelInputUtils
										? intlTelInputUtils.getNumberType(
												this._getFullNumber(),
												this.selectedCountryData.iso2
										  )
										: -99;
								},
							},
							{
								key: "getSelectedCountryData",
								value: function () {
									return this.selectedCountryData;
								},
							},
							{
								key: "getValidationError",
								value: function () {
									var t;
									return window.intlTelInputUtils
										? ((t = this.selectedCountryData.iso2),
										  intlTelInputUtils.getValidationError(
												this._getFullNumber(),
												t
										  ))
										: -99;
								},
							},
							{
								key: "isValidNumber",
								value: function () {
									var t = this._getFullNumber().trim(),
										e = this.options.nationalMode
											? this.selectedCountryData.iso2
											: "";
									return window.intlTelInputUtils
										? intlTelInputUtils.isValidNumber(t, e)
										: null;
								},
							},
							{
								key: "setCountry",
								value: function (t) {
									t = t.toLowerCase();
									this.selectedFlagInner.classList.contains(
										"iti__".concat(t)
									) ||
										(this._setFlag(t),
										this._updateDialCode(this.selectedCountryData.dialCode, !1),
										this._triggerCountryChange());
								},
							},
							{
								key: "setNumber",
								value: function (t) {
									var e = this._updateFlagFromNumber(t);
									this._updateValFromNumber(t),
										e && this._triggerCountryChange();
								},
							},
							{
								key: "setPlaceholderNumberType",
								value: function (t) {
									(this.options.placeholderNumberType = t),
										this._updatePlaceholder();
								},
							},
						]) && s(t.prototype, e),
						i && s(t, i),
						n
					);
				})();
			return (
				(i.getCountryData = function () {
					return a;
				}),
				(i.loadUtils = function (i) {
					if (
						!window.intlTelInputUtils &&
						!window.intlTelInputGlobals.startedLoadingUtilsScript
					) {
						if (
							((window.intlTelInputGlobals.startedLoadingUtilsScript = !0),
							"undefined" != typeof Promise)
						)
							return new Promise(function (t, e) {
								return n(i, t, e);
							});
						n(i);
					}
					return null;
				}),
				(i.defaults = c),
				(i.version = "17.0.18"),
				function (t, e) {
					e = new u(t, e);
					return (
						e._init(),
						t.setAttribute("data-intl-tel-input-id", e.id),
						(window.intlTelInputGlobals.instances[e.id] = e)
					);
				}
			);
		}),
			t.exports ? (t.exports = s()) : (window.intlTelInput = s());
	},
	function (t, e) {
		const n = window.jQuery;
		n("body").on("click", "li.wc_payment_method", function () {
			n(this).addClass("is-active"),
				n("li.wc_payment_method").not(n(this)).removeClass("is-active");
		});
		let i = n("form.woocommerce-checkout");
		i.length &&
			i.submit(function (t) {
				return t.preventDefault(), !1;
			});
		const s = n(".l-checkout__total .product-tip");
		if (s.length) {
			const a = n("body"),
				r = parseInt(
					n(
						".l-checkout__total-body .woocommerce-Price-amount.amount bdi"
					).text()
				),
				l = parseInt(
					n(
						".l-checkout__total-bottom .woocommerce-Price-amount.amount bdi"
					).text()
				),
				d = parseInt(
					n(".l-checkout__total-body .product-quantity")
						.text()
						.replace(/^\D+/g, "")
				),
				c = s.find(".product-total input"),
				h = n(".l-checkout__total-bottom .woocommerce-Price-currencySymbol"),
				u =
					(localStorage.getItem("tip") &&
						(c.val(localStorage.getItem("tip")), o()),
					a.on(
						"click",
						".l-checkout__total .product-tip .tip-add",
						function () {
							const t = n(this).parents(".product-tip");
							n(this).removeClass("show"),
								t.find(".tip-finish").addClass("show"),
								(c[0].readOnly = !1),
								c.focus();
						}
					),
					a.on(
						"click",
						".l-checkout__total .product-tip .tip-finish",
						function () {
							const t = n(this).parents(".product-tip"),
								e = c,
								i = t.find(".tip-error");
							1 <= e.val()
								? (n(this).removeClass("show"),
								  t.find(".tip-add").addClass("show"),
								  (e[0].readOnly = !0),
								  e.addClass("edited"),
								  i.removeClass("show"),
								  o())
								: i.addClass("show");
						}
					),
					n("#tip-form"));
			if (u.length) {
				const m = u.find("label"),
					g = u.find(".u-btn");
				m.length &&
					m.on("click", function () {
						var t = n(this).attr("for"),
							t = u.find("#" + t).val();
						g.val(Math.floor((l * t) / 100));
					}),
					u.on("submit", (t) => {
						t.preventDefault(),
							1 <= g.val() &&
								(c.val(g.val()),
								g.closest("#add-tip").find(".c-modal__close").trigger("click"),
								o());
					});
			}
			function o() {
				const t = n(".l-checkout__total-bottom").find(
					".woocommerce-Price-amount.amount bdi"
				);
				var e = r * d + parseInt(c.val());
				let i = n("#coupon");
				var s = i.attr("data-coupon-amount");
				s
					? e < s
						? (i.find(".magic-discount").text(e + " ₪"), t.text(0))
						: (i.find(".magic-discount").text(s + " ₪"), t.text(e - s))
					: t.text(e),
					t.append(h),
					localStorage.setItem("tip", c.val());
			}
		}
		themeVars.isProduct && localStorage.removeItem("tip");
	},
	function (t, e) {
		const s = window.jQuery;
		if (
			(window.addEventListener("DOMContentLoaded", () => {
				const t = document.querySelector(".checkout.woocommerce-checkout");
				t &&
					t.addEventListener("submit", (t) => {
						localStorage.setItem(
							"billingName",
							t.target.querySelector("#sender-name").value
						);
					});
			}),
			s("body").hasClass("page-template-template-thank-you"))
		) {
			const c = new Proxy(new URLSearchParams(window.location.search), {
				get: (t, e) => t.get(e),
			});
			var n = localStorage.getItem("localState");
			const h = JSON.parse(n);
			if (c.order_id && h) {
				let t = h.forms.form4["sender-name"];
				n = h.forms.form4["sender-phone"];
				let e = h.forms.form4.receivers;
				var o = { ...h.forms.form3, ...h.forms.form4 },
					a = h.productType;
				let i;
				if (
					("For Me" === h.type ? ((i = ""), (t = "")) : (i = h.template),
					"For One Receiver" === h.type && (t = h.forms.form3["receiver-name"]),
					"For Several Receivers" === h.type)
				)
					for (let t = 0; t < e.length; t++) {
						var r = e[t].id,
							l = h.forms.form3.receivers;
						l && (e[t].name = l[r]["receiver-name"]);
					}
				if ("now" != h.time_send) {
					const u = new Date(h.time_send);
					u.setMinutes(u.getTimezoneOffset()),
						(h.time_send =
							u.getMonth() +
							1 +
							"/" +
							u.getDate() +
							"/" +
							u.getFullYear() +
							" " +
							u.getHours() +
							":00");
				}
				s.ajax({
					type: "POST",
					url: themeVars.ajaxUrl,
					cache: !1,
					crossDomain: !0,
					data: {
						action: "ajax_order",
						orderId: c.order_id,
						template: s.trim(i),
						receivers: e,
						type_send: h.type,
						sender_name: t,
						sender_phone: n,
						steps_fields: o,
						magic_gift: a,
						lang: h.lang,
						amount: h.price,
						time_send: h.time_send,
						billing_name: localStorage.getItem("billingName"),
					},
					beforeSend: function () {
						localStorage.removeItem("localState"),
							localStorage.removeItem("billingName");
					},
					success: d,
					error: (t) => console.log(t),
				});
			} else d();
			function d() {
				var t = window.location.search;
				const e = new URLSearchParams(t);
				t = {
					action: "thank_you_content",
					order_id: c.order_id,
					orderKey: e.get("key"),
				};
				s.ajax({
					url: themeVars.ajaxUrl,
					data: t,
					type: "POST",
					success: (t) => {
						s(".thank_you_cards_box").html(t);
					},
				});
			}
		}
	},
	function (t, e) {
		const i = window.jQuery;
		i("#projects-gift").on("click", function () {}),
			i(".special-gift__wrapper").on("click", function () {
				let t = i(this).find(".btn");
				var e;
				t.length && ((e = t.attr("href")), (window.location.href = e));
			});
	},
	function (t, e) {
		const i = window.jQuery;
		let s = i(".wpml-ls-statics-shortcode_actions");
		s.length && s.find("ul").attr("aria-label", "change language"),
			(window.getCookie = function (t) {
				t = document.cookie.match(
					new RegExp(
						"(?:^|; )" +
							t.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") +
							"=([^;]*)"
					)
				);
				return t ? decodeURIComponent(t[1]) : void 0;
			});
	},
	function (t, e) {
		window.jQuery;
		jQuery(document).ready(function (t) {
			const e = document.querySelector(".steps-list");
			if (e) {
				const s = t("body");
				s.on(
					"click",
					".choosing-step-form .next-step, .project-popup__btn-wrap .btn-step, .customize-step-form #form-step3-submit, #form-step4 #form-step4-submit",
					i
				),
					s.on("click", ".rush-btn", i);
			}
			function i() {
				e.scrollIntoView({ behavior: "smooth" });
			}
		});
	},
	function (t, e) {
		const n = window.jQuery;
		n(".js-check-giftcard").submit((t) => {
			t.preventDefault();
			const i = n("#projects-gift");
			let s = n(".js-check-giftcard input").val();
			t = { action: "check_giftcard", giftcard_id: s };
			n.ajax({
				type: "post",
				url: themeVars.ajaxUrl,
				data: t,
				success: function (t) {
					let e = t;
					0 != (e = "0" !== t && t ? e : 0)
						? (n(".js-check-giftcard .u-btn").hide(),
						  n(".js-check-giftcard-answer").show(),
						  n(".c-price > span.amount").html(e),
						  n(".js-check-giftcard-answer--error").hide(),
						  0 == e
								? i.hide()
								: ((t = i.attr("href")),
								  i.attr("href", t + "?gift=" + s),
								  i.show()))
						: n(".js-check-giftcard-answer--error").show();
				},
			});
		}),
			n(".js-check-giftcard-cancel-code").on("click", function (t) {
				t.preventDefault();
				const e = n("#projects-gift"),
					i = e.attr("href");
				e.attr("href", i.split("?")[0]),
					n(".js-check-giftcard .u-btn").show(),
					n(".js-check-giftcard-answer").hide();
			});
	},
	function (t, e) {
		const n = document.querySelector(".c-row-switcher");
		if (null !== n) {
			let s = "";
			n.addEventListener("click", function (t) {
				const e = t.target.closest(".c-row-switcher__item");
				if (e) {
					[...n.children].forEach((t) => t.classList.remove("is-active")),
						e.classList.add("is-active"),
						(s = e.classList.contains("js-column-switcher")
							? "is-full-width"
							: "");
					const i = document.querySelectorAll(".home-gifts .gifts__item");
					i.forEach((t) => {
						"is-full-width" === s
							? t.classList.add("is-full-width")
							: t.classList.remove("is-full-width");
					});
				}
			});
		}
	},
	function (t, e, i) {},
	function (F, t, e) {
		"use strict";
		e.r(t);
		const i = window.jQuery;
		var z = class {
			constructor(t = null) {
				(this.togglers = t
					? t.find(".function-toggle")
					: i(".function-toggle")),
					this.togglers.length && this.togglers.on("click", this.toggleElement);
			}
			toggleElement(t) {
				t.preventDefault();
				const e = i(i(this).data("target"));
				t = i(this).data("scrollStop");
				e.length &&
					(e.hasClass("showed")
						? (t && i("body").css("overflow", ""),
						  i(this).removeClass("active"),
						  e.removeClass(["show", "showed"]))
						: (t && i("body").css("overflow", "hidden"),
						  i(this).addClass("active"),
						  e.addClass("show"),
						  setTimeout(() => {
								e.addClass("showed");
						  }, 300)));
			}
		};
		const r = window.jQuery;
		var N = class {
			constructor(t = null) {
				(this.tabsContainers = t
					? t.find(".function-tab")
					: r(".function-tab")),
					this.tabsContainers.length &&
						this.tabsContainers.each(this.tabCreator);
			}
			tabCreator() {
				const t = r(this),
					s = t.children(),
					n = r(t.data("target")).children(),
					o = t.data("activeClass") ? t.data("activeClass") : "active",
					a = t.data("showClass") ? t.data("showClass") : "show";
				s.length &&
					n.length &&
					(s.first().addClass(o),
					n.filter("[data-id=" + s.first().data("id") + "]").addClass(a),
					s.on("click", function (t) {
						t.preventDefault();
						const e = r(this),
							i = n.filter("[data-id=" + e.data("id") + "]");
						i.length &&
							(s.removeClass(o),
							n.removeClass(a),
							e.addClass(o),
							i.addClass(a));
					}));
			}
		};
		const s = window.jQuery;
		var q = class {
				constructor(t = 0) {
					let e = this;
					s('form[name="product-search"]').on("submit", function (t) {
						t.preventDefault(), e.search(t.target);
					}),
						e.expandKeywords(),
						e.searchByKeywords();
				}
				searchByKeywords() {
					s(".filter-bar__list a").on("click", function (t) {
						s(".partners__gifts").addClass("loading"),
							t.preventDefault(),
							s(this).toggleClass("selected"),
							s(this).attr("aria-current")
								? s(this).removeAttr("aria-current")
								: s(this).attr("aria-current", !0),
							s(this).parent().toggleClass("chose"),
							s(".search-bar input").val("");
						t = s(this).closest(".search-bar form").data("lang");
						let e = [];
						s(".filter-bar__list a.selected").each(function () {
							e.push(s(this).data("term-id"));
						}),
							s
								.post(
									"/wp-json/smile/v1/gifts",
									{
										terms: e,
										auth: themeVars.logIn,
										user_id: themeVars.userID,
										current_lang: t,
									},
									function (t) {
										s(".partners__gifts .gifts").html(t);
									}
								)
								.always(function () {
									s(".partners__gifts").removeClass("loading");
								})
								.fail(function (t) {
									s(".partners__gifts .gifts").html(
										`<div class="not-found"><span>${t.responseJSON}</span></div>`
									);
								});
					});
				}
				expandKeywords() {
					s(".filter-bar__icon").on("click", function (t) {
						t.preventDefault(), s(".filter-bar__list").toggleClass("expanded");
					});
				}
				search(t) {
					var e = s(".input_search").val(),
						i =
							(s(t).find("button").prop("disabled", !0),
							s(".partners__gifts").addClass("loading"),
							s(".filter-bar__list a").removeClass("selected"),
							s(".filter-bar__list li").removeClass("chose"),
							s(".search-bar > form").data("lang"));
					0 < e.length
						? s
								.get(
									"/wp-json/smile/v1/gift/search=" + e,
									{
										auth: themeVars.logIn,
										user_id: themeVars.userID,
										current_lang: i,
									},
									function (t) {
										s(".partners__gifts .gifts").html(t);
									}
								)
								.always(function () {
									s(t).find("button").prop("disabled", !1),
										s(".partners__gifts").removeClass("loading");
								})
								.fail(function (t) {
									s(".partners__gifts .gifts").html(
										`<div class="not-found"><div class="container"><p>${t.responseJSON}</p></div></div>`
									);
								})
						: s
								.get("/wp-json/smile/v1/gifts/", function (t) {
									s(".partners__gifts .gifts").html(t);
								})
								.always(function () {
									s(t).find("button").prop("disabled", !1),
										s(".partners__gifts").removeClass("loading");
								});
				}
			},
			n = function () {
				return (n =
					Object.assign ||
					function (t) {
						for (var e, i = 1, s = arguments.length; i < s; i++)
							for (var n in (e = arguments[i]))
								Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
						return t;
					}).apply(this, arguments);
			};
		/*!
		 * lightgallery | 2.4.0 | January 29th 2022
		 * http://www.lightgalleryjs.com/
		 * Copyright (c) 2020 Sachin Neravath;
		 * @license GPLv3
		 */
		/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var j =
				"lgAfterAppendSlide",
			R = "lgInit",
			H = "lgHasVideo",
			B = "lgContainerResize",
			V = "lgUpdateSlides",
			U = "lgAfterAppendSubHtml",
			G = "lgBeforeOpen",
			W = "lgAfterOpen",
			Y = "lgSlideItemLoad",
			X = "lgBeforeSlide",
			Z = "lgAfterSlide",
			l = "lgPosterClick",
			K = "lgDragStart",
			J = "lgDragMove",
			Q = "lgDragEnd",
			tt = "lgBeforeNextSlide",
			et = "lgBeforePrevSlide",
			it = "lgBeforeClose",
			st = "lgAfterClose",
			nt = {
				mode: "lg-slide",
				easing: "ease",
				speed: 400,
				licenseKey: "0000-0000-000-0000",
				height: "100%",
				width: "100%",
				addClass: "",
				startClass: "lg-start-zoom",
				backdropDuration: 300,
				container: "",
				startAnimationDuration: 400,
				zoomFromOrigin: !0,
				hideBarsDelay: 0,
				showBarsAfter: 1e4,
				slideDelay: 0,
				supportLegacyBrowser: !0,
				allowMediaOverlap: !1,
				videoMaxSize: "1280-720",
				loadYouTubePoster: !0,
				defaultCaptionHeight: 0,
				ariaLabelledby: "",
				ariaDescribedby: "",
				closable: !0,
				swipeToClose: !0,
				closeOnTap: !0,
				showCloseIcon: !0,
				showMaximizeIcon: !1,
				loop: !0,
				escKey: !0,
				keyPress: !0,
				controls: !0,
				slideEndAnimation: !0,
				hideControlOnEnd: !1,
				mousewheel: !1,
				getCaptionFromTitleOrAlt: !0,
				appendSubHtmlTo: ".lg-sub-html",
				subHtmlSelectorRelative: !1,
				preload: 2,
				numberOfSlideItemsInDom: 10,
				selector: "",
				selectWithin: "",
				nextHtml: "",
				prevHtml: "",
				index: 0,
				iframeWidth: "100%",
				iframeHeight: "100%",
				iframeMaxWidth: "100%",
				iframeMaxHeight: "100%",
				download: !0,
				counter: !0,
				appendCounterTo: ".lg-toolbar",
				swipeThreshold: 50,
				enableSwipe: !0,
				enableDrag: !0,
				dynamic: !1,
				dynamicEl: [],
				extraProps: [],
				exThumbImage: "",
				isMobile: void 0,
				mobileSettings: { controls: !1, showCloseIcon: !1, download: !1 },
				plugins: [],
				strings: {
					closeGallery: "Close gallery",
					toggleMaximize: "Toggle maximize",
					previousSlide: "Previous slide",
					nextSlide: "Next slide",
					download: "Download",
					playVideo: "Play video",
				},
			};
		function ot() {
			"function" != typeof window.CustomEvent &&
				(window.CustomEvent = function (t, e) {
					e = e || { bubbles: !1, cancelable: !1, detail: null };
					var i = document.createEvent("CustomEvent");
					return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i;
				}),
				Element.prototype.matches ||
					(Element.prototype.matches =
						Element.prototype.msMatchesSelector ||
						Element.prototype.webkitMatchesSelector);
		}
		(o.generateUUID = function () {
			return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
				/[xy]/g,
				function (t) {
					var e = (16 * Math.random()) | 0;
					return ("x" == t ? e : (3 & e) | 8).toString(16);
				}
			);
		}),
			(o.prototype._getSelector = function (t, e) {
				return (
					void 0 === e && (e = document),
					"string" != typeof t
						? t
						: ((e = e || document),
						  "#" === t.substring(0, 1)
								? e.querySelector(t)
								: e.querySelectorAll(t))
				);
			}),
			(o.prototype._each = function (t) {
				return (
					this.selector &&
						(void 0 !== this.selector.length
							? [].forEach.call(this.selector, t)
							: t(this.selector, 0)),
					this
				);
			}),
			(o.prototype._setCssVendorPrefix = function (t, e, i) {
				e = e.replace(/-([a-z])/gi, function (t, e) {
					return e.toUpperCase();
				});
				-1 !== this.cssVenderPrefixes.indexOf(e)
					? ((t.style[e.charAt(0).toLowerCase() + e.slice(1)] = i),
					  (t.style["webkit" + e] = i),
					  (t.style["moz" + e] = i),
					  (t.style["ms" + e] = i),
					  (t.style["o" + e] = i))
					: (t.style[e] = i);
			}),
			(o.prototype._getFirstEl = function () {
				return this.selector && void 0 !== this.selector.length
					? this.selector[0]
					: this.selector;
			}),
			(o.prototype.isEventMatched = function (t, e) {
				var i = e.split(".");
				return t
					.split(".")
					.filter(function (t) {
						return t;
					})
					.every(function (t) {
						return -1 !== i.indexOf(t);
					});
			}),
			(o.prototype.attr = function (e, i) {
				return void 0 === i
					? this.firstElement
						? this.firstElement.getAttribute(e)
						: ""
					: (this._each(function (t) {
							t.setAttribute(e, i);
					  }),
					  this);
			}),
			(o.prototype.find = function (t) {
				return w(this._getSelector(t, this.selector));
			}),
			(o.prototype.first = function () {
				return this.selector && void 0 !== this.selector.length
					? w(this.selector[0])
					: w(this.selector);
			}),
			(o.prototype.eq = function (t) {
				return w(this.selector[t]);
			}),
			(o.prototype.parent = function () {
				return w(this.selector.parentElement);
			}),
			(o.prototype.get = function () {
				return this._getFirstEl();
			}),
			(o.prototype.removeAttr = function (t) {
				var i = t.split(" ");
				return (
					this._each(function (e) {
						i.forEach(function (t) {
							return e.removeAttribute(t);
						});
					}),
					this
				);
			}),
			(o.prototype.wrap = function (t) {
				if (!this.firstElement) return this;
				var e = document.createElement("div");
				return (
					(e.className = t),
					this.firstElement.parentNode.insertBefore(e, this.firstElement),
					this.firstElement.parentNode.removeChild(this.firstElement),
					e.appendChild(this.firstElement),
					this
				);
			}),
			(o.prototype.addClass = function (t) {
				return (
					void 0 === t && (t = ""),
					this._each(function (e) {
						t.split(" ").forEach(function (t) {
							t && e.classList.add(t);
						});
					}),
					this
				);
			}),
			(o.prototype.removeClass = function (t) {
				return (
					this._each(function (e) {
						t.split(" ").forEach(function (t) {
							t && e.classList.remove(t);
						});
					}),
					this
				);
			}),
			(o.prototype.hasClass = function (t) {
				return !!this.firstElement && this.firstElement.classList.contains(t);
			}),
			(o.prototype.hasAttribute = function (t) {
				return !!this.firstElement && this.firstElement.hasAttribute(t);
			}),
			(o.prototype.toggleClass = function (t) {
				return (
					this.firstElement &&
						(this.hasClass(t) ? this.removeClass(t) : this.addClass(t)),
					this
				);
			}),
			(o.prototype.css = function (e, i) {
				var s = this;
				return (
					this._each(function (t) {
						s._setCssVendorPrefix(t, e, i);
					}),
					this
				);
			}),
			(o.prototype.on = function (t, e) {
				var i = this;
				return (
					this.selector &&
						t.split(" ").forEach(function (t) {
							Array.isArray(o.eventListeners[t]) || (o.eventListeners[t] = []),
								o.eventListeners[t].push(e),
								i.selector.addEventListener(t.split(".")[0], e);
						}),
					this
				);
			}),
			(o.prototype.once = function (t, e) {
				var i = this;
				return (
					this.on(t, function () {
						i.off(t), e(t);
					}),
					this
				);
			}),
			(o.prototype.off = function (t) {
				var i = this;
				return (
					this.selector &&
						Object.keys(o.eventListeners).forEach(function (e) {
							i.isEventMatched(t, e) &&
								(o.eventListeners[e].forEach(function (t) {
									i.selector.removeEventListener(e.split(".")[0], t);
								}),
								(o.eventListeners[e] = []));
						}),
					this
				);
			}),
			(o.prototype.trigger = function (t, e) {
				if (!this.firstElement) return this;
				t = new CustomEvent(t.split(".")[0], { detail: e || null });
				return this.firstElement.dispatchEvent(t), this;
			}),
			(o.prototype.load = function (t) {
				var e = this;
				return (
					fetch(t)
						.then(function (t) {
							return t.text();
						})
						.then(function (t) {
							e.selector.innerHTML = t;
						}),
					this
				);
			}),
			(o.prototype.html = function (e) {
				return void 0 === e
					? this.firstElement
						? this.firstElement.innerHTML
						: ""
					: (this._each(function (t) {
							t.innerHTML = e;
					  }),
					  this);
			}),
			(o.prototype.append = function (e) {
				return (
					this._each(function (t) {
						"string" == typeof e
							? t.insertAdjacentHTML("beforeend", e)
							: t.appendChild(e);
					}),
					this
				);
			}),
			(o.prototype.prepend = function (e) {
				return (
					this._each(function (t) {
						t.insertAdjacentHTML("afterbegin", e);
					}),
					this
				);
			}),
			(o.prototype.remove = function () {
				return (
					this._each(function (t) {
						t.parentNode.removeChild(t);
					}),
					this
				);
			}),
			(o.prototype.empty = function () {
				return (
					this._each(function (t) {
						t.innerHTML = "";
					}),
					this
				);
			}),
			(o.prototype.scrollTop = function (t) {
				return void 0 !== t
					? ((document.body.scrollTop = t),
					  (document.documentElement.scrollTop = t),
					  this)
					: window.pageYOffset ||
							document.documentElement.scrollTop ||
							document.body.scrollTop ||
							0;
			}),
			(o.prototype.scrollLeft = function (t) {
				return void 0 !== t
					? ((document.body.scrollLeft = t),
					  (document.documentElement.scrollLeft = t),
					  this)
					: window.pageXOffset ||
							document.documentElement.scrollLeft ||
							document.body.scrollLeft ||
							0;
			}),
			(o.prototype.offset = function () {
				if (!this.firstElement) return { left: 0, top: 0 };
				var t = this.firstElement.getBoundingClientRect(),
					e = w("body").style().marginLeft;
				return {
					left: t.left - parseFloat(e) + this.scrollLeft(),
					top: t.top + this.scrollTop(),
				};
			}),
			(o.prototype.style = function () {
				return this.firstElement
					? this.firstElement.currentStyle ||
							window.getComputedStyle(this.firstElement)
					: {};
			}),
			(o.prototype.width = function () {
				var t = this.style();
				return (
					this.firstElement.clientWidth -
					parseFloat(t.paddingLeft) -
					parseFloat(t.paddingRight)
				);
			}),
			(o.prototype.height = function () {
				var t = this.style();
				return (
					this.firstElement.clientHeight -
					parseFloat(t.paddingTop) -
					parseFloat(t.paddingBottom)
				);
			}),
			(o.eventListeners = {});
		var at = o;
		function o(t) {
			return (
				(this.cssVenderPrefixes = [
					"TransitionDuration",
					"TransitionTimingFunction",
					"Transform",
					"Transition",
				]),
				(this.selector = this._getSelector(t)),
				(this.firstElement = this._getFirstEl()),
				this
			);
		}
		function w(t) {
			return ot(), new at(t);
		}
		var rt = [
			"src",
			"sources",
			"subHtml",
			"subHtmlUrl",
			"html",
			"video",
			"poster",
			"slideName",
			"responsive",
			"srcset",
			"sizes",
			"iframe",
			"downloadUrl",
			"download",
			"width",
			"facebookShareUrl",
			"tweetText",
			"iframeTitle",
			"twitterShareUrl",
			"pinterestShareUrl",
			"pinterestText",
			"fbHtml",
			"disqusIdentifier",
			"disqusUrl",
		];
		var x = function (t, e, i, s) {
				void 0 === i && (i = 0);
				var n = w(t).attr("data-lg-size") || s;
				if (n) {
					var o = n.split(",");
					if (o[1])
						for (var a = window.innerWidth, r = 0; r < o.length; r++) {
							var l = o[r];
							if (a < parseInt(l.split("-")[2], 10)) {
								n = l;
								break;
							}
							r === o.length - 1 && (n = l);
						}
					var t = n.split("-"),
						s = parseInt(t[0], 10),
						t = parseInt(t[1], 10),
						d = e.width(),
						e = e.height() - i,
						i = Math.min(d, s),
						d = Math.min(e, t),
						e = Math.min(i / s, d / t);
					return { width: s * e, height: t * e };
				}
			},
			lt = function (t, e, i, s, n) {
				if (n) {
					var o,
						a,
						r,
						l,
						t = w(t).find("img").first();
					if (t.get())
						return (
							(r = (l = e.get().getBoundingClientRect()).width),
							(e = e.height() - (i + s)),
							(s = t.width()),
							(o = t.height()),
							(a = t.style()),
							(r =
								(r - s) / 2 -
								t.offset().left +
								(parseFloat(a.paddingLeft) || 0) +
								(parseFloat(a.borderLeft) || 0) +
								w(window).scrollLeft() +
								l.left),
							(l =
								(e - o) / 2 -
								t.offset().top +
								(parseFloat(a.paddingTop) || 0) +
								(parseFloat(a.borderTop) || 0) +
								w(window).scrollTop() +
								i),
							"translate3d(" +
								(r *= -1) +
								"px, " +
								(l *= -1) +
								"px, 0) scale3d(" +
								s / n.width +
								", " +
								o / n.height +
								", 1)"
						);
				}
			},
			dt = function (t, e, i, s, n, o) {
				return (
					'<div class="lg-video-cont lg-has-iframe" style="width:' +
					t +
					"; max-width:" +
					i +
					"; height: " +
					e +
					"; max-height:" +
					s +
					'">\n                    <iframe class="lg-object" frameborder="0" ' +
					(o ? 'title="' + o + '"' : "") +
					' src="' +
					n +
					'"  allowfullscreen="true"></iframe>\n                </div>'
				);
			},
			ct = function (t, e, i, s, n, o) {
				(i =
					"<img " +
					i +
					" " +
					(s ? 'srcset="' + s + '"' : "") +
					"  " +
					(n ? 'sizes="' + n + '"' : "") +
					' class="lg-object lg-image" data-index="' +
					t +
					'" src="' +
					e +
					'" />'),
					(s = "");
				return (
					(s = o
						? ("string" == typeof o ? JSON.parse(o) : o).map(function (e) {
								var i = "";
								return (
									Object.keys(e).forEach(function (t) {
										i += " " + t + '="' + e[t] + '"';
									}),
									"<source " + i + "></source>"
								);
						  })
						: s) + i
				);
			},
			ht = function (t) {
				for (var e = [], i = [], s = "", n = 0; n < t.length; n++) {
					var o = t[n].split(" ");
					"" === o[0] && o.splice(0, 1), i.push(o[0]), e.push(o[1]);
				}
				for (var a = window.innerWidth, r = 0; r < e.length; r++)
					if (parseInt(e[r], 10) > a) {
						s = i[r];
						break;
					}
				return s;
			},
			ut = function (t) {
				return !!t && !!t.complete && 0 !== t.naturalWidth;
			},
			mt = function (t, e, i, s, n) {
				return (
					'<div class="lg-video-cont ' +
					(n && n.youtube
						? "lg-has-youtube"
						: n && n.vimeo
						? "lg-has-vimeo"
						: "lg-has-html5") +
					'" style="' +
					i +
					'">\n                <div class="lg-video-play-button">\n                <svg\n                    viewBox="0 0 20 20"\n                    preserveAspectRatio="xMidYMid"\n                    focusable="false"\n                    aria-labelledby="' +
					s +
					'"\n                    role="img"\n                    class="lg-video-play-icon"\n                >\n                    <title>' +
					s +
					'</title>\n                    <polygon class="lg-video-play-icon-inner" points="1,0 20,10 1,20"></polygon>\n                </svg>\n                <svg class="lg-video-play-icon-bg" viewBox="0 0 50 50" focusable="false">\n                    <circle cx="50%" cy="50%" r="20"></circle></svg>\n                <svg class="lg-video-play-icon-circle" viewBox="0 0 50 50" focusable="false">\n                    <circle cx="50%" cy="50%" r="20"></circle>\n                </svg>\n            </div>\n            ' +
					(e || "") +
					'\n            <img class="lg-object lg-video-poster" src="' +
					t +
					'" />\n        </div>'
				);
			},
			gt = function (t, e, d, c) {
				var h = [],
					u = (function () {
						for (var t = 0, e = 0, i = arguments.length; e < i; e++)
							t += arguments[e].length;
						for (var s = Array(t), n = 0, e = 0; e < i; e++)
							for (var o = arguments[e], a = 0, r = o.length; a < r; a++, n++)
								s[n] = o[a];
						return s;
					})(rt, e);
				return (
					[].forEach.call(t, function (t) {
						for (var e = {}, i = 0; i < t.attributes.length; i++) {
							var s,
								n,
								o = t.attributes[i];
							o.specified &&
								((s =
									"href" === (s = o.name)
										? "src"
										: (s =
												(s = s.replace("data-", "")).charAt(0).toLowerCase() +
												s.slice(1)).replace(/-([a-z])/g, function (t) {
												return t[1].toUpperCase();
										  })),
								(n = ""),
								(n = -1 < u.indexOf(s) ? s : n) && (e[n] = o.value));
						}
						var a = w(t),
							r = a.find("img").first().attr("alt"),
							l = a.attr("title"),
							a = c ? a.attr(c) : a.find("img").first().attr("src");
						(e.thumb = a),
							d && !e.subHtml && (e.subHtml = l || r || ""),
							(e.alt = r || l || ""),
							h.push(e);
					}),
					h
				);
			},
			pt = function () {
				return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
			},
			ft = function (t, e, i) {
				if (!t)
					return e
						? { html5: !0 }
						: void console.error(
								"lightGallery :- data-src is not provided on slide item " +
									(i + 1) +
									". Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/"
						  );
				(e = t.match(
					/\/\/(?:www\.)?youtu(?:\.be|be\.com|be-nocookie\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)([\&|?][\S]*)*/i
				)),
					(i = t.match(
						/\/\/(?:www\.)?(?:player\.)?vimeo.com\/(?:video\/)?([0-9a-z\-_]+)(.*)?/i
					)),
					(t = t.match(
						/https?:\/\/(.+)?(wistia\.com|wi\.st)\/(medias|embed)\/([0-9a-z\-_]+)(.*)/
					));
				return e
					? { youtube: e }
					: i
					? { vimeo: i }
					: t
					? { wistia: t }
					: void 0;
			},
			vt = 0,
			yt =
				((a.prototype.generateSettings = function (t) {
					(this.settings = n(n({}, nt), t)),
						(this.settings.isMobile &&
						"function" == typeof this.settings.isMobile
							? this.settings.isMobile()
							: pt()) &&
							((t = n(
								n({}, this.settings.mobileSettings),
								this.settings.mobileSettings
							)),
							(this.settings = n(n({}, this.settings), t)));
				}),
				(a.prototype.normalizeSettings = function () {
					this.settings.slideEndAnimation &&
						(this.settings.hideControlOnEnd = !1),
						this.settings.closable || (this.settings.swipeToClose = !1),
						(this.zoomFromOrigin = this.settings.zoomFromOrigin),
						this.settings.dynamic && (this.zoomFromOrigin = !1),
						this.settings.container ||
							(this.settings.container = document.body),
						(this.settings.preload = Math.min(
							this.settings.preload,
							this.galleryItems.length
						));
				}),
				(a.prototype.init = function () {
					var t = this;
					this.addSlideVideoInfo(this.galleryItems),
						this.buildStructure(),
						this.LGel.trigger(R, { instance: this }),
						this.settings.keyPress && this.keyPress(),
						setTimeout(function () {
							t.enableDrag(), t.enableSwipe(), t.triggerPosterClick();
						}, 50),
						this.arrow(),
						this.settings.mousewheel && this.mousewheel(),
						this.settings.dynamic || this.openGalleryOnItemClick();
				}),
				(a.prototype.openGalleryOnItemClick = function () {
					for (var n = this, o = this, t = 0; t < this.items.length; t++)
						!(function (e) {
							var i = o.items[e],
								t = w(i),
								s = at.generateUUID();
							t.attr("data-lg-id", s).on(
								"click.lgcustom-item-" + s,
								function (t) {
									t.preventDefault();
									t = n.settings.index || e;
									n.openGallery(t, i);
								}
							);
						})(t);
				}),
				(a.prototype.buildModules = function () {
					var e = this;
					this.settings.plugins.forEach(function (t) {
						e.plugins.push(new t(e, w));
					});
				}),
				(a.prototype.validateLicense = function () {
					this.settings.licenseKey
						? "0000-0000-000-0000" === this.settings.licenseKey &&
						  console.warn(
								"lightGallery: " +
									this.settings.licenseKey +
									" license key is not valid for production use"
						  )
						: console.error("Please provide a valid license key");
				}),
				(a.prototype.getSlideItem = function (t) {
					return w(this.getSlideItemId(t));
				}),
				(a.prototype.getSlideItemId = function (t) {
					return "#lg-item-" + this.lgId + "-" + t;
				}),
				(a.prototype.getIdName = function (t) {
					return t + "-" + this.lgId;
				}),
				(a.prototype.getElementById = function (t) {
					return w("#" + this.getIdName(t));
				}),
				(a.prototype.manageSingleSlideClassName = function () {
					this.galleryItems.length < 2
						? this.outer.addClass("lg-single-item")
						: this.outer.removeClass("lg-single-item");
				}),
				(a.prototype.buildStructure = function () {
					var t,
						e,
						i,
						s,
						n,
						o,
						a,
						r,
						l = this;
					(this.$container && this.$container.get()) ||
						((e = t = ""),
						this.settings.controls &&
							(t =
								'<button type="button" id="' +
								this.getIdName("lg-prev") +
								'" aria-label="' +
								this.settings.strings.previousSlide +
								'" class="lg-prev lg-icon"> ' +
								this.settings.prevHtml +
								' </button>\n                <button type="button" id="' +
								this.getIdName("lg-next") +
								'" aria-label="' +
								this.settings.strings.nextSlide +
								'" class="lg-next lg-icon"> ' +
								this.settings.nextHtml +
								" </button>"),
						".lg-item" !== this.settings.appendSubHtmlTo &&
							(e =
								'<div class="lg-sub-html" role="status" aria-live="polite"></div>'),
						(i = ""),
						this.settings.allowMediaOverlap && (i += "lg-media-overlap "),
						(r = this.settings.ariaLabelledby
							? 'aria-labelledby="' + this.settings.ariaLabelledby + '"'
							: ""),
						(s = this.settings.ariaDescribedby
							? 'aria-describedby="' + this.settings.ariaDescribedby + '"'
							: ""),
						(a =
							"lg-container " +
							this.settings.addClass +
							" " +
							(document.body !== this.settings.container ? "lg-inline" : "")),
						(n =
							this.settings.closable && this.settings.showCloseIcon
								? '<button type="button" aria-label="' +
								  this.settings.strings.closeGallery +
								  '" id="' +
								  this.getIdName("lg-close") +
								  '" class="lg-close lg-icon"></button>'
								: ""),
						(o = this.settings.showMaximizeIcon
							? '<button type="button" aria-label="' +
							  this.settings.strings.toggleMaximize +
							  '" id="' +
							  this.getIdName("lg-maximize") +
							  '" class="lg-maximize lg-icon"></button>'
							: ""),
						(a =
							'\n        <div class="' +
							a +
							'" id="' +
							this.getIdName("lg-container") +
							'" tabindex="-1" aria-modal="true" ' +
							r +
							" " +
							s +
							' role="dialog"\n        >\n            <div id="' +
							this.getIdName("lg-backdrop") +
							'" class="lg-backdrop"></div>\n\n            <div id="' +
							this.getIdName("lg-outer") +
							'" class="lg-outer lg-use-css3 lg-css3 lg-hide-items ' +
							i +
							' ">\n\n              <div id="' +
							this.getIdName("lg-content") +
							'" class="lg-content">\n                <div id="' +
							this.getIdName("lg-inner") +
							'" class="lg-inner">\n                </div>\n                ' +
							t +
							'\n              </div>\n                <div id="' +
							this.getIdName("lg-toolbar") +
							'" class="lg-toolbar lg-group">\n                    ' +
							o +
							"\n                    " +
							n +
							"\n                    </div>\n                    " +
							(".lg-outer" === this.settings.appendSubHtmlTo ? e : "") +
							'\n                <div id="' +
							this.getIdName("lg-components") +
							'" class="lg-components">\n                    ' +
							(".lg-sub-html" === this.settings.appendSubHtmlTo ? e : "") +
							"\n                </div>\n            </div>\n        </div>\n        "),
						w(this.settings.container).append(a),
						document.body !== this.settings.container &&
							w(this.settings.container).css("position", "relative"),
						(this.outer = this.getElementById("lg-outer")),
						(this.$lgComponents = this.getElementById("lg-components")),
						(this.$backdrop = this.getElementById("lg-backdrop")),
						(this.$container = this.getElementById("lg-container")),
						(this.$inner = this.getElementById("lg-inner")),
						(this.$content = this.getElementById("lg-content")),
						(this.$toolbar = this.getElementById("lg-toolbar")),
						this.$backdrop.css(
							"transition-duration",
							this.settings.backdropDuration + "ms"
						),
						(r = this.settings.mode + " "),
						this.manageSingleSlideClassName(),
						this.settings.enableDrag && (r += "lg-grab "),
						this.outer.addClass(r),
						this.$inner.css("transition-timing-function", this.settings.easing),
						this.$inner.css("transition-duration", this.settings.speed + "ms"),
						this.settings.download &&
							this.$toolbar.append(
								'<a id="' +
									this.getIdName("lg-download") +
									'" target="_blank" rel="noopener" aria-label="' +
									this.settings.strings.download +
									'" download class="lg-download lg-icon"></a>'
							),
						this.counter(),
						w(window).on(
							"resize.lg.global" +
								this.lgId +
								" orientationchange.lg.global" +
								this.lgId,
							function () {
								l.refreshOnResize();
							}
						),
						this.hideBars(),
						this.manageCloseGallery(),
						this.toggleMaximize(),
						this.initModules());
				}),
				(a.prototype.refreshOnResize = function () {
					var t, e, i;
					this.lgOpened &&
						((t = this.galleryItems[this.index].__slideVideoInfo),
						(this.mediaContainerPosition = this.getMediaContainerPosition()),
						(i = (e = this.mediaContainerPosition).top),
						(e = e.bottom),
						(this.currentImageSize = x(
							this.items[this.index],
							this.outer,
							i + e,
							t && this.settings.videoMaxSize
						)),
						t && this.resizeVideoSlide(this.index, this.currentImageSize),
						this.zoomFromOrigin &&
							!this.isDummyImageRemoved &&
							((i = this.getDummyImgStyles(this.currentImageSize)),
							this.outer
								.find(".lg-current .lg-dummy-img")
								.first()
								.attr("style", i)),
						this.LGel.trigger(B));
				}),
				(a.prototype.resizeVideoSlide = function (t, e) {
					e = this.getVideoContStyle(e);
					this.getSlideItem(t).find(".lg-video-cont").attr("style", e);
				}),
				(a.prototype.updateSlides = function (t, e) {
					var i, s;
					this.index > t.length - 1 && (this.index = t.length - 1),
						1 === t.length && (this.index = 0),
						t.length
							? ((i = this.galleryItems[e].src),
							  (this.galleryItems = t),
							  this.updateControls(),
							  this.$inner.empty(),
							  (this.currentItemsInDom = []),
							  (s = 0),
							  this.galleryItems.some(function (t, e) {
									return t.src === i && ((s = e), !0);
							  }),
							  (this.currentItemsInDom = this.organizeSlideItems(s, -1)),
							  this.loadContent(s, !0),
							  this.getSlideItem(s).addClass("lg-current"),
							  (this.index = s),
							  this.updateCurrentCounter(s),
							  this.LGel.trigger(V))
							: this.closeGallery();
				}),
				(a.prototype.getItems = function () {
					var t;
					return (
						(this.items = []),
						this.settings.dynamic
							? this.settings.dynamicEl || []
							: ("this" === this.settings.selector
									? this.items.push(this.el)
									: this.settings.selector
									? "string" == typeof this.settings.selector
										? this.settings.selectWithin
											? ((t = w(this.settings.selectWithin)),
											  (this.items = t.find(this.settings.selector).get()))
											: (this.items = this.el.querySelectorAll(
													this.settings.selector
											  ))
										: (this.items = this.settings.selector)
									: (this.items = this.el.children),
							  gt(
									this.items,
									this.settings.extraProps,
									this.settings.getCaptionFromTitleOrAlt,
									this.settings.exThumbImage
							  ))
					);
				}),
				(a.prototype.openGallery = function (e, t) {
					var i,
						s,
						n,
						o,
						a,
						r = this;
					void 0 === e && (e = this.settings.index),
						this.lgOpened ||
							((this.lgOpened = !0),
							this.outer.get().focus(),
							this.outer.removeClass("lg-hide-items"),
							this.$container.addClass("lg-show"),
							(o = this.getItemsToBeInsertedToDom(e, e)),
							(this.currentItemsInDom = o),
							(i = ""),
							o.forEach(function (t) {
								i = i + '<div id="' + t + '" class="lg-item"></div>';
							}),
							this.$inner.append(i),
							this.addHtml(e),
							(s = ""),
							(this.mediaContainerPosition = this.getMediaContainerPosition()),
							(n = (o = this.mediaContainerPosition).top),
							(o = o.bottom),
							this.settings.allowMediaOverlap ||
								this.setMediaContainerPosition(n, o),
							(a = this.galleryItems[e].__slideVideoInfo),
							this.zoomFromOrigin &&
								t &&
								((this.currentImageSize = x(
									t,
									this.outer,
									n + o,
									a && this.settings.videoMaxSize
								)),
								(s = lt(t, this.outer, n, o, this.currentImageSize))),
							(this.zoomFromOrigin && s) ||
								(this.outer.addClass(this.settings.startClass),
								this.getSlideItem(e).removeClass("lg-complete")),
							(a = this.settings.zoomFromOrigin
								? 100
								: this.settings.backdropDuration),
							setTimeout(function () {
								r.outer.addClass("lg-components-open");
							}, a),
							(this.index = e),
							this.LGel.trigger(G),
							this.getSlideItem(e).addClass("lg-current"),
							(this.lGalleryOn = !1),
							(this.prevScrollTop = w(window).scrollTop()),
							setTimeout(function () {
								var t;
								r.zoomFromOrigin &&
									s &&
									((t = r.getSlideItem(e)).css("transform", s),
									setTimeout(function () {
										t
											.addClass("lg-start-progress lg-start-end-progress")
											.css(
												"transition-duration",
												r.settings.startAnimationDuration + "ms"
											),
											r.outer.addClass("lg-zoom-from-image");
									}),
									setTimeout(function () {
										t.css("transform", "translate3d(0, 0, 0)");
									}, 100)),
									setTimeout(function () {
										r.$backdrop.addClass("in"),
											r.$container.addClass("lg-show-in");
									}, 10),
									(r.zoomFromOrigin && s) ||
										setTimeout(function () {
											r.outer.addClass("lg-visible");
										}, r.settings.backdropDuration),
									r.slide(e, !1, !1, !1),
									r.LGel.trigger(W);
							}),
							document.body === this.settings.container &&
								w("html").addClass("lg-on"));
				}),
				(a.prototype.getMediaContainerPosition = function () {
					if (this.settings.allowMediaOverlap) return { top: 0, bottom: 0 };
					var t = this.$toolbar.get().clientHeight || 0,
						e = this.outer.find(".lg-components .lg-sub-html").get(),
						e =
							this.settings.defaultCaptionHeight || (e && e.clientHeight) || 0,
						i = this.outer.find(".lg-thumb-outer").get();
					return { top: t, bottom: (i ? i.clientHeight : 0) + e };
				}),
				(a.prototype.setMediaContainerPosition = function (t, e) {
					void 0 === e && (e = 0),
						this.$content
							.css("top", (t = void 0 === t ? 0 : t) + "px")
							.css("bottom", e + "px");
				}),
				(a.prototype.hideBars = function () {
					var t = this;
					setTimeout(function () {
						t.outer.removeClass("lg-hide-items"),
							0 < t.settings.hideBarsDelay &&
								(t.outer.on("mousemove.lg click.lg touchstart.lg", function () {
									t.outer.removeClass("lg-hide-items"),
										clearTimeout(t.hideBarTimeout),
										(t.hideBarTimeout = setTimeout(function () {
											t.outer.addClass("lg-hide-items");
										}, t.settings.hideBarsDelay));
								}),
								t.outer.trigger("mousemove.lg"));
					}, this.settings.showBarsAfter);
				}),
				(a.prototype.initPictureFill = function (t) {
					if (this.settings.supportLegacyBrowser)
						try {
							picturefill({ elements: [t.get()] });
						} catch (t) {
							console.warn(
								"lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document."
							);
						}
				}),
				(a.prototype.counter = function () {
					var t;
					this.settings.counter &&
						((t =
							'<div class="lg-counter" role="status" aria-live="polite">\n                <span id="' +
							this.getIdName("lg-counter-current") +
							'" class="lg-counter-current">' +
							(this.index + 1) +
							' </span> /\n                <span id="' +
							this.getIdName("lg-counter-all") +
							'" class="lg-counter-all">' +
							this.galleryItems.length +
							" </span></div>"),
						this.outer.find(this.settings.appendCounterTo).append(t));
				}),
				(a.prototype.addHtml = function (t) {
					var e, i, s;
					this.galleryItems[t].subHtmlUrl
						? (i = this.galleryItems[t].subHtmlUrl)
						: (e = this.galleryItems[t].subHtml),
						i ||
							(e
								? ("." !== (s = e.substring(0, 1)) && "#" !== s) ||
								  (e = (
										this.settings.subHtmlSelectorRelative &&
										!this.settings.dynamic
											? w(this.items).eq(t).find(e)
											: w(e)
								  )
										.first()
										.html())
								: (e = "")),
						".lg-item" !== this.settings.appendSubHtmlTo
							? i
								? this.outer.find(".lg-sub-html").load(i)
								: this.outer.find(".lg-sub-html").html(e)
							: ((s = w(this.getSlideItemId(t))),
							  i
									? s.load(i)
									: s.append('<div class="lg-sub-html">' + e + "</div>")),
						null != e &&
							("" === e
								? this.outer
										.find(this.settings.appendSubHtmlTo)
										.addClass("lg-empty-html")
								: this.outer
										.find(this.settings.appendSubHtmlTo)
										.removeClass("lg-empty-html")),
						this.LGel.trigger(U, { index: t });
				}),
				(a.prototype.preload = function (t) {
					for (
						var e = 1;
						e <= this.settings.preload && !(e >= this.galleryItems.length - t);
						e++
					)
						this.loadContent(t + e, !1);
					for (var i = 1; i <= this.settings.preload && !(t - i < 0); i++)
						this.loadContent(t - i, !1);
				}),
				(a.prototype.getDummyImgStyles = function (t) {
					return t
						? "width:" +
								t.width +
								"px;\n                margin-left: -" +
								t.width / 2 +
								"px;\n                margin-top: -" +
								t.height / 2 +
								"px;\n                height:" +
								t.height +
								"px"
						: "";
				}),
				(a.prototype.getVideoContStyle = function (t) {
					return t
						? "width:" +
								t.width +
								"px;\n                height:" +
								t.height +
								"px"
						: "";
				}),
				(a.prototype.getDummyImageContent = function (t, e, i) {
					if ((s = this.settings.dynamic ? s : w(this.items).eq(e))) {
						e = void 0;
						if (
							!(e = this.settings.exThumbImage
								? s.attr(this.settings.exThumbImage)
								: s.find("img").first().attr("src"))
						)
							return "";
						var s =
							"<img " +
							i +
							' style="' +
							this.getDummyImgStyles(this.currentImageSize) +
							'" class="lg-dummy-img" src="' +
							e +
							'" />';
						return (
							t.addClass("lg-first-slide"),
							this.outer.addClass("lg-first-slide-loading"),
							s
						);
					}
					return "";
				}),
				(a.prototype.setImgMarkup = function (t, e, i) {
					var s = this.galleryItems[i],
						n = s.alt,
						o = s.srcset,
						a = s.sizes,
						s = s.sources,
						r = "",
						n = n ? 'alt="' + n + '"' : "",
						r = this.isFirstSlideWithZoomAnimation()
							? this.getDummyImageContent(e, i, n)
							: ct(i, t, n, o, a, s);
					e.prepend('<picture class="lg-img-wrap"> ' + r + "</picture>");
				}),
				(a.prototype.onSlideObjectLoad = function (t, e, i, s) {
					t = t.find(".lg-object").first();
					ut(t.get()) || e
						? i()
						: (t.on("load.lg error.lg", function () {
								i && i();
						  }),
						  t.on("error.lg", function () {
								s && s();
						  }));
				}),
				(a.prototype.onLgObjectLoad = function (t, e, i, s, n, o) {
					var a = this;
					this.onSlideObjectLoad(
						t,
						o,
						function () {
							a.triggerSlideItemLoad(t, e, i, s, n);
						},
						function () {
							t.addClass("lg-complete lg-complete_"),
								t.html(
									'<span class="lg-error-msg">Oops... Failed to load content...</span>'
								);
						}
					);
				}),
				(a.prototype.triggerSlideItemLoad = function (t, e, i, s, n) {
					var o = this,
						a = this.galleryItems[e],
						a = n && "video" === this.getSlideType(a) && !a.poster ? s : 0;
					setTimeout(function () {
						t.addClass("lg-complete lg-complete_"),
							o.LGel.trigger(Y, { index: e, delay: i || 0, isFirstSlide: n });
					}, a);
				}),
				(a.prototype.isFirstSlideWithZoomAnimation = function () {
					return !(
						this.lGalleryOn ||
						!this.zoomFromOrigin ||
						!this.currentImageSize
					);
				}),
				(a.prototype.addSlideVideoInfo = function (t) {
					var i = this;
					t.forEach(function (t, e) {
						(t.__slideVideoInfo = ft(t.src, !!t.video, e)),
							t.__slideVideoInfo &&
								i.settings.loadYouTubePoster &&
								!t.poster &&
								t.__slideVideoInfo.youtube &&
								(t.poster =
									"//img.youtube.com/vi/" +
									t.__slideVideoInfo.youtube[1] +
									"/maxresdefault.jpg");
					});
				}),
				(a.prototype.loadContent = function (e, t) {
					var i,
						s,
						n,
						o = this,
						a = this.galleryItems[e],
						r = w(this.getSlideItemId(e)),
						l = a.poster,
						d = a.srcset,
						c = a.sizes,
						h = a.sources,
						u = a.src,
						m = a.video,
						m = m && "string" == typeof m ? JSON.parse(m) : m,
						g =
							(a.responsive &&
								((p = a.responsive.split(",")), (u = ht(p) || u)),
							a.__slideVideoInfo),
						p = "",
						f = !!a.iframe,
						v = !this.lGalleryOn,
						y = 0,
						b =
							(v &&
								(y =
									this.zoomFromOrigin && this.currentImageSize
										? this.settings.startAnimationDuration + 10
										: this.settings.backdropDuration + 10),
							r.hasClass("lg-loaded") ||
								(g &&
									((n = (i = this.mediaContainerPosition).top),
									(i = i.bottom),
									(n = x(
										this.items[e],
										this.outer,
										n + i,
										g && this.settings.videoMaxSize
									)),
									(p = this.getVideoContStyle(n))),
								f
									? ((s = dt(
											this.settings.iframeWidth,
											this.settings.iframeHeight,
											this.settings.iframeMaxWidth,
											this.settings.iframeMaxHeight,
											u,
											a.iframeTitle
									  )),
									  r.prepend(s))
									: l
									? ((i = ""),
									  v &&
											this.zoomFromOrigin &&
											this.currentImageSize &&
											(i = this.getDummyImageContent(r, e, "")),
									  (s = mt(l, i || "", p, this.settings.strings.playVideo, g)),
									  r.prepend(s))
									: g
									? r.prepend(
											(s =
												'<div class="lg-video-cont " style="' + p + '"></div>')
									  )
									: (this.setImgMarkup(u, r, e),
									  (d || h) &&
											((n = r.find(".lg-object")), this.initPictureFill(n))),
								(l || g) &&
									this.LGel.trigger(H, {
										index: e,
										src: u,
										html5Video: m,
										hasPoster: !!l,
									}),
								this.LGel.trigger(j, { index: e }),
								this.lGalleryOn &&
									".lg-item" === this.settings.appendSubHtmlTo &&
									this.addHtml(e)),
							0);
					y && !w(document.body).hasClass("lg-from-hash") && (b = y),
						this.isFirstSlideWithZoomAnimation() &&
							(setTimeout(function () {
								r.removeClass(
									"lg-start-end-progress lg-start-progress"
								).removeAttr("style");
							}, this.settings.startAnimationDuration + 100),
							r.hasClass("lg-loaded") ||
								setTimeout(function () {
									var t;
									"image" === o.getSlideType(a) &&
										(r
											.find(".lg-img-wrap")
											.append(ct(e, u, "", d, c, a.sources)),
										(d || h) &&
											((t = r.find(".lg-object")), o.initPictureFill(t))),
										("image" === o.getSlideType(a) ||
											("video" === o.getSlideType(a) && l)) &&
											(o.onLgObjectLoad(r, e, y, b, !0, !1),
											o.onSlideObjectLoad(
												r,
												!(!g || !g.html5 || l),
												function () {
													o.loadContentOnFirstSlideLoad(e, r, b);
												},
												function () {
													o.loadContentOnFirstSlideLoad(e, r, b);
												}
											));
								}, this.settings.startAnimationDuration + 100)),
						r.addClass("lg-loaded"),
						(this.isFirstSlideWithZoomAnimation() &&
							("video" !== this.getSlideType(a) || l)) ||
							this.onLgObjectLoad(r, e, y, b, v, !(!g || !g.html5 || l)),
						(this.zoomFromOrigin && this.currentImageSize) ||
							!r.hasClass("lg-complete_") ||
							this.lGalleryOn ||
							setTimeout(function () {
								r.addClass("lg-complete");
							}, this.settings.backdropDuration),
						(this.lGalleryOn = !0) === t &&
							(r.hasClass("lg-complete_")
								? this.preload(e)
								: r
										.find(".lg-object")
										.first()
										.on("load.lg error.lg", function () {
											o.preload(e);
										}));
				}),
				(a.prototype.loadContentOnFirstSlideLoad = function (t, e, i) {
					var s = this;
					setTimeout(function () {
						e.find(".lg-dummy-img").remove(),
							e.removeClass("lg-first-slide"),
							s.outer.removeClass("lg-first-slide-loading"),
							(s.isDummyImageRemoved = !0),
							s.preload(t);
					}, i + 300);
				}),
				(a.prototype.getItemsToBeInsertedToDom = function (t, e, i) {
					var s = this,
						n = (void 0 === i && (i = 0), []),
						o = Math.max(i, 3),
						o = Math.min(o, this.galleryItems.length),
						i = "lg-item-" + this.lgId + "-" + e;
					if (this.galleryItems.length <= 3)
						return (
							this.galleryItems.forEach(function (t, e) {
								n.push("lg-item-" + s.lgId + "-" + e);
							}),
							n
						);
					if (t < (this.galleryItems.length - 1) / 2) {
						for (var a = t; t - o / 2 < a && 0 <= a; a--)
							n.push("lg-item-" + this.lgId + "-" + a);
						for (var r = n.length, a = 0; a < o - r; a++)
							n.push("lg-item-" + this.lgId + "-" + (t + a + 1));
					} else {
						for (a = t; a <= this.galleryItems.length - 1 && a < t + o / 2; a++)
							n.push("lg-item-" + this.lgId + "-" + a);
						for (r = n.length, a = 0; a < o - r; a++)
							n.push("lg-item-" + this.lgId + "-" + (t - a - 1));
					}
					return (
						this.settings.loop &&
							(t === this.galleryItems.length - 1
								? n.push("lg-item-" + this.lgId + "-0")
								: 0 === t &&
								  n.push(
										"lg-item-" +
											this.lgId +
											"-" +
											(this.galleryItems.length - 1)
								  )),
						-1 === n.indexOf(i) && n.push("lg-item-" + this.lgId + "-" + e),
						n
					);
				}),
				(a.prototype.organizeSlideItems = function (t, e) {
					var i = this,
						s = this.getItemsToBeInsertedToDom(
							t,
							e,
							this.settings.numberOfSlideItemsInDom
						);
					return (
						s.forEach(function (t) {
							-1 === i.currentItemsInDom.indexOf(t) &&
								i.$inner.append('<div id="' + t + '" class="lg-item"></div>');
						}),
						this.currentItemsInDom.forEach(function (t) {
							-1 === s.indexOf(t) && w("#" + t).remove();
						}),
						s
					);
				}),
				(a.prototype.getPreviousSlideIndex = function () {
					var e = 0;
					try {
						var t = this.outer.find(".lg-current").first().attr("id"),
							e = parseInt(t.split("-")[3]) || 0;
					} catch (t) {
						e = 0;
					}
					return e;
				}),
				(a.prototype.setDownloadValue = function (t) {
					var e;
					this.settings.download &&
						(!1 === (t = this.galleryItems[t]).downloadUrl ||
						"false" === t.downloadUrl
							? this.outer.addClass("lg-hide-download")
							: ((e = this.getElementById("lg-download")),
							  this.outer.removeClass("lg-hide-download"),
							  e.attr("href", t.downloadUrl || t.src),
							  t.download && e.attr("download", t.download)));
				}),
				(a.prototype.makeSlideAnimation = function (t, e, i) {
					var s = this;
					this.lGalleryOn && i.addClass("lg-slide-progress"),
						setTimeout(
							function () {
								s.outer.addClass("lg-no-trans"),
									s.outer
										.find(".lg-item")
										.removeClass("lg-prev-slide lg-next-slide"),
									"prev" === t
										? (e.addClass("lg-prev-slide"), i.addClass("lg-next-slide"))
										: (e.addClass("lg-next-slide"),
										  i.addClass("lg-prev-slide")),
									setTimeout(function () {
										s.outer.find(".lg-item").removeClass("lg-current"),
											e.addClass("lg-current"),
											s.outer.removeClass("lg-no-trans");
									}, 50);
							},
							this.lGalleryOn ? this.settings.slideDelay : 0
						);
				}),
				(a.prototype.slide = function (t, e, i, s) {
					var n,
						o,
						a,
						r,
						l,
						d,
						c = this,
						h = this.getPreviousSlideIndex();
					(this.currentItemsInDom = this.organizeSlideItems(t, h)),
						(this.lGalleryOn && h === t) ||
							((n = this.galleryItems.length),
							this.lgBusy ||
								(this.settings.counter && this.updateCurrentCounter(t),
								(o = this.getSlideItem(t)),
								(a = this.getSlideItem(h)),
								(d = (l = this.galleryItems[t]).__slideVideoInfo),
								this.outer.attr("data-lg-slide-type", this.getSlideType(l)),
								this.setDownloadValue(t),
								d &&
									((r = (l = this.mediaContainerPosition).top),
									(l = l.bottom),
									(r = x(
										this.items[t],
										this.outer,
										r + l,
										d && this.settings.videoMaxSize
									)),
									this.resizeVideoSlide(t, r)),
								this.LGel.trigger(X, {
									prevIndex: h,
									index: t,
									fromTouch: !!e,
									fromThumb: !!i,
								}),
								(this.lgBusy = !0),
								clearTimeout(this.hideBarTimeout),
								this.arrowDisable(t),
								s || (t < h ? (s = "prev") : h < t && (s = "next")),
								e
									? (this.outer
											.find(".lg-item")
											.removeClass("lg-prev-slide lg-current lg-next-slide"),
									  (d = l = void 0),
									  2 < n
											? ((l = t - 1),
											  (d = t + 1),
											  ((0 === t && h === n - 1) ||
													(t === n - 1 && 0 === h)) &&
													((d = 0), (l = n - 1)))
											: ((l = 0), (d = 1)),
									  "prev" === s
											? this.getSlideItem(d).addClass("lg-next-slide")
											: this.getSlideItem(l).addClass("lg-prev-slide"),
									  o.addClass("lg-current"))
									: this.makeSlideAnimation(s, o, a),
								this.lGalleryOn
									? setTimeout(function () {
											c.loadContent(t, !0),
												".lg-item" !== c.settings.appendSubHtmlTo &&
													c.addHtml(t);
									  }, this.settings.speed +
											50 +
											(e ? 0 : this.settings.slideDelay))
									: this.loadContent(t, !0),
								setTimeout(function () {
									(c.lgBusy = !1),
										a.removeClass("lg-slide-progress"),
										c.LGel.trigger(Z, {
											prevIndex: h,
											index: t,
											fromTouch: e,
											fromThumb: i,
										});
								}, (this.lGalleryOn ? this.settings.speed + 100 : 100) +
									(e ? 0 : this.settings.slideDelay))),
							(this.index = t));
				}),
				(a.prototype.updateCurrentCounter = function (t) {
					this.getElementById("lg-counter-current").html(t + 1 + "");
				}),
				(a.prototype.updateCounterTotal = function () {
					this.getElementById("lg-counter-all").html(
						this.galleryItems.length + ""
					);
				}),
				(a.prototype.getSlideType = function (t) {
					return t.__slideVideoInfo ? "video" : t.iframe ? "iframe" : "image";
				}),
				(a.prototype.touchMove = function (t, e, i) {
					var s,
						n,
						o = e.pageX - t.pageX,
						e = e.pageY - t.pageY,
						t = !1;
					this.swipeDirection
						? (t = !0)
						: 15 < Math.abs(o)
						? ((this.swipeDirection = "horizontal"), (t = !0))
						: 15 < Math.abs(e) &&
						  ((this.swipeDirection = "vertical"), (t = !0)),
						t &&
							((t = this.getSlideItem(this.index)),
							"horizontal" === this.swipeDirection
								? (null != i && i.preventDefault(),
								  this.outer.addClass("lg-dragging"),
								  this.setTranslate(t, o, 0),
								  (s =
										(15 * (n = t.get().offsetWidth)) / 100 -
										Math.abs((10 * o) / 100)),
								  this.setTranslate(
										this.outer.find(".lg-prev-slide").first(),
										o - n - s,
										0
								  ),
								  this.setTranslate(
										this.outer.find(".lg-next-slide").first(),
										n + o + s,
										0
								  ))
								: "vertical" === this.swipeDirection &&
								  this.settings.swipeToClose &&
								  (null != i && i.preventDefault(),
								  this.$container.addClass("lg-dragging-vertical"),
								  (n = 1 - Math.abs(e) / window.innerHeight),
								  this.$backdrop.css("opacity", n),
								  (o = 1 - Math.abs(e) / (2 * window.innerWidth)),
								  this.setTranslate(t, 0, e, o, o),
								  100 < Math.abs(e) &&
										this.outer
											.addClass("lg-hide-items")
											.removeClass("lg-components-open")));
				}),
				(a.prototype.touchEnd = function (i, s, n) {
					var o,
						a = this;
					"lg-slide" !== this.settings.mode && this.outer.addClass("lg-slide"),
						setTimeout(function () {
							a.$container.removeClass("lg-dragging-vertical"),
								a.outer
									.removeClass("lg-dragging lg-hide-items")
									.addClass("lg-components-open");
							var t = !0;
							if ("horizontal" === a.swipeDirection) {
								o = i.pageX - s.pageX;
								var e = Math.abs(i.pageX - s.pageX);
								o < 0 && e > a.settings.swipeThreshold
									? (a.goToNextSlide(!0), (t = !1))
									: 0 < o &&
									  e > a.settings.swipeThreshold &&
									  (a.goToPrevSlide(!0), (t = !1));
							} else if ("vertical" === a.swipeDirection) {
								if (
									((o = Math.abs(i.pageY - s.pageY)),
									a.settings.closable && a.settings.swipeToClose && 100 < o)
								)
									return void a.closeGallery();
								a.$backdrop.css("opacity", 1);
							}
							a.outer.find(".lg-item").removeAttr("style"),
								t &&
									Math.abs(i.pageX - s.pageX) < 5 &&
									((e = w(n.target)),
									a.isPosterElement(e) && a.LGel.trigger(l)),
								(a.swipeDirection = void 0);
						}),
						setTimeout(function () {
							a.outer.hasClass("lg-dragging") ||
								"lg-slide" === a.settings.mode ||
								a.outer.removeClass("lg-slide");
						}, this.settings.speed + 100);
				}),
				(a.prototype.enableSwipe = function () {
					var i = this,
						s = {},
						e = {},
						n = !1,
						o = !1;
					this.settings.enableSwipe &&
						(this.$inner.on("touchstart.lg", function (t) {
							i.dragOrSwipeEnabled = !0;
							var e = i.getSlideItem(i.index);
							(!w(t.target).hasClass("lg-item") &&
								!e.get().contains(t.target)) ||
								i.outer.hasClass("lg-zoomed") ||
								i.lgBusy ||
								1 !== t.targetTouches.length ||
								((o = !0),
								(i.touchAction = "swipe"),
								i.manageSwipeClass(),
								(s = {
									pageX: t.targetTouches[0].pageX,
									pageY: t.targetTouches[0].pageY,
								}));
						}),
						this.$inner.on("touchmove.lg", function (t) {
							o &&
								"swipe" === i.touchAction &&
								1 === t.targetTouches.length &&
								((e = {
									pageX: t.targetTouches[0].pageX,
									pageY: t.targetTouches[0].pageY,
								}),
								i.touchMove(s, e, t),
								(n = !0));
						}),
						this.$inner.on("touchend.lg", function (t) {
							"swipe" === i.touchAction &&
								(n
									? ((n = !1), i.touchEnd(e, s, t))
									: o &&
									  ((t = w(t.target)),
									  i.isPosterElement(t) && i.LGel.trigger(l)),
								(i.touchAction = void 0),
								(o = !1));
						}));
				}),
				(a.prototype.enableDrag = function () {
					var i = this,
						s = {},
						n = {},
						o = !1,
						a = !1;
					this.settings.enableDrag &&
						(this.outer.on("mousedown.lg", function (t) {
							i.dragOrSwipeEnabled = !0;
							var e = i.getSlideItem(i.index);
							(!w(t.target).hasClass("lg-item") &&
								!e.get().contains(t.target)) ||
								i.outer.hasClass("lg-zoomed") ||
								i.lgBusy ||
								(t.preventDefault(),
								i.lgBusy ||
									(i.manageSwipeClass(),
									(s = { pageX: t.pageX, pageY: t.pageY }),
									(o = !0),
									(i.outer.get().scrollLeft += 1),
									--i.outer.get().scrollLeft,
									i.outer.removeClass("lg-grab").addClass("lg-grabbing"),
									i.LGel.trigger(K)));
						}),
						w(window).on("mousemove.lg.global" + this.lgId, function (t) {
							o &&
								i.lgOpened &&
								((a = !0),
								(n = { pageX: t.pageX, pageY: t.pageY }),
								i.touchMove(s, n),
								i.LGel.trigger(J));
						}),
						w(window).on("mouseup.lg.global" + this.lgId, function (t) {
							var e;
							i.lgOpened &&
								((e = w(t.target)),
								a
									? ((a = !1), i.touchEnd(n, s, t), i.LGel.trigger(Q))
									: i.isPosterElement(e) && i.LGel.trigger(l),
								o &&
									((o = !1),
									i.outer.removeClass("lg-grabbing").addClass("lg-grab")));
						}));
				}),
				(a.prototype.triggerPosterClick = function () {
					var e = this;
					this.$inner.on("click.lg", function (t) {
						!e.dragOrSwipeEnabled &&
							e.isPosterElement(w(t.target)) &&
							e.LGel.trigger(l);
					});
				}),
				(a.prototype.manageSwipeClass = function () {
					var t = this.index + 1,
						e = this.index - 1;
					this.settings.loop &&
						2 < this.galleryItems.length &&
						(0 === this.index
							? (e = this.galleryItems.length - 1)
							: this.index === this.galleryItems.length - 1 && (t = 0)),
						this.outer
							.find(".lg-item")
							.removeClass("lg-next-slide lg-prev-slide"),
						-1 < e && this.getSlideItem(e).addClass("lg-prev-slide"),
						this.getSlideItem(t).addClass("lg-next-slide");
				}),
				(a.prototype.goToNextSlide = function (t) {
					var e = this,
						i = this.settings.loop;
					t && this.galleryItems.length < 3 && (i = !1),
						this.lgBusy ||
							(this.index + 1 < this.galleryItems.length
								? (this.index++,
								  this.LGel.trigger(tt, { index: this.index }),
								  this.slide(this.index, !!t, !1, "next"))
								: i
								? ((this.index = 0),
								  this.LGel.trigger(tt, { index: this.index }),
								  this.slide(this.index, !!t, !1, "next"))
								: this.settings.slideEndAnimation &&
								  !t &&
								  (this.outer.addClass("lg-right-end"),
								  setTimeout(function () {
										e.outer.removeClass("lg-right-end");
								  }, 400)));
				}),
				(a.prototype.goToPrevSlide = function (t) {
					var e = this,
						i = this.settings.loop;
					t && this.galleryItems.length < 3 && (i = !1),
						this.lgBusy ||
							(0 < this.index
								? (this.index--,
								  this.LGel.trigger(et, { index: this.index, fromTouch: t }),
								  this.slide(this.index, !!t, !1, "prev"))
								: i
								? ((this.index = this.galleryItems.length - 1),
								  this.LGel.trigger(et, { index: this.index, fromTouch: t }),
								  this.slide(this.index, !!t, !1, "prev"))
								: this.settings.slideEndAnimation &&
								  !t &&
								  (this.outer.addClass("lg-left-end"),
								  setTimeout(function () {
										e.outer.removeClass("lg-left-end");
								  }, 400)));
				}),
				(a.prototype.keyPress = function () {
					var e = this;
					w(window).on("keydown.lg.global" + this.lgId, function (t) {
						e.lgOpened &&
							!0 === e.settings.escKey &&
							27 === t.keyCode &&
							(t.preventDefault(),
							e.settings.allowMediaOverlap &&
							e.outer.hasClass("lg-can-toggle") &&
							e.outer.hasClass("lg-components-open")
								? e.outer.removeClass("lg-components-open")
								: e.closeGallery()),
							e.lgOpened &&
								1 < e.galleryItems.length &&
								(37 === t.keyCode && (t.preventDefault(), e.goToPrevSlide()),
								39 === t.keyCode && (t.preventDefault(), e.goToNextSlide()));
					});
				}),
				(a.prototype.arrow = function () {
					var t = this;
					this.getElementById("lg-prev").on("click.lg", function () {
						t.goToPrevSlide();
					}),
						this.getElementById("lg-next").on("click.lg", function () {
							t.goToNextSlide();
						});
				}),
				(a.prototype.arrowDisable = function (t) {
					var e, i;
					!this.settings.loop &&
						this.settings.hideControlOnEnd &&
						((e = this.getElementById("lg-prev")),
						(i = this.getElementById("lg-next")),
						t + 1 === this.galleryItems.length
							? i.attr("disabled", "disabled").addClass("disabled")
							: i.removeAttr("disabled").removeClass("disabled"),
						0 === t
							? e.attr("disabled", "disabled").addClass("disabled")
							: e.removeAttr("disabled").removeClass("disabled"));
				}),
				(a.prototype.setTranslate = function (t, e, i, s, n) {
					t.css(
						"transform",
						"translate3d(" +
							e +
							"px, " +
							i +
							"px, 0px) scale3d(" +
							(s = void 0 === s ? 1 : s) +
							", " +
							(n = void 0 === n ? 1 : n) +
							", 1)"
					);
				}),
				(a.prototype.mousewheel = function () {
					var i = this,
						s = 0;
					this.outer.on("wheel.lg", function (t) {
						var e;
						!t.deltaY ||
							i.galleryItems.length < 2 ||
							(t.preventDefault(),
							(e = new Date().getTime()) - s < 1e3 ||
								((s = e),
								0 < t.deltaY
									? i.goToNextSlide()
									: t.deltaY < 0 && i.goToPrevSlide()));
					});
				}),
				(a.prototype.isSlideElement = function (t) {
					return (
						t.hasClass("lg-outer") ||
						t.hasClass("lg-item") ||
						t.hasClass("lg-img-wrap")
					);
				}),
				(a.prototype.isPosterElement = function (t) {
					var e = this.getSlideItem(this.index)
						.find(".lg-video-play-button")
						.get();
					return (
						t.hasClass("lg-video-poster") ||
						t.hasClass("lg-video-play-button") ||
						(e && e.contains(t.get()))
					);
				}),
				(a.prototype.toggleMaximize = function () {
					var t = this;
					this.getElementById("lg-maximize").on("click.lg", function () {
						t.$container.toggleClass("lg-inline"), t.refreshOnResize();
					});
				}),
				(a.prototype.invalidateItems = function () {
					for (var t = 0; t < this.items.length; t++) {
						var e = w(this.items[t]);
						e.off("click.lgcustom-item-" + e.attr("data-lg-id"));
					}
				}),
				(a.prototype.manageCloseGallery = function () {
					var e,
						i = this;
					this.settings.closable &&
						((e = !1),
						this.getElementById("lg-close").on("click.lg", function () {
							i.closeGallery();
						}),
						this.settings.closeOnTap &&
							(this.outer.on("mousedown.lg", function (t) {
								t = w(t.target);
								e = !!i.isSlideElement(t);
							}),
							this.outer.on("mousemove.lg", function () {
								e = !1;
							}),
							this.outer.on("mouseup.lg", function (t) {
								t = w(t.target);
								i.isSlideElement(t) &&
									e &&
									(i.outer.hasClass("lg-dragging") || i.closeGallery());
							})));
				}),
				(a.prototype.closeGallery = function (t) {
					var e = this;
					if (!this.lgOpened || (!this.settings.closable && !t)) return 0;
					this.LGel.trigger(it), w(window).scrollTop(this.prevScrollTop);
					var i,
						s,
						n,
						o,
						t = this.items[this.index],
						a =
							(this.zoomFromOrigin &&
								t &&
								((i = (s = this.mediaContainerPosition).top),
								(s = s.bottom),
								(n = (a = this.galleryItems[this.index]).__slideVideoInfo),
								(a = a.poster),
								(n = x(
									t,
									this.outer,
									i + s,
									n && a && this.settings.videoMaxSize
								)),
								(o = lt(t, this.outer, i, s, n))),
							this.zoomFromOrigin && o
								? (this.outer.addClass("lg-closing lg-zoom-from-image"),
								  this.getSlideItem(this.index)
										.addClass("lg-start-end-progress")
										.css(
											"transition-duration",
											this.settings.startAnimationDuration + "ms"
										)
										.css("transform", o))
								: (this.outer.addClass("lg-hide-items"),
								  this.outer.removeClass("lg-zoom-from-image")),
							this.destroyModules(),
							(this.lGalleryOn = !1),
							(this.isDummyImageRemoved = !1),
							(this.zoomFromOrigin = this.settings.zoomFromOrigin),
							clearTimeout(this.hideBarTimeout),
							(this.hideBarTimeout = !1),
							w("html").removeClass("lg-on"),
							this.outer.removeClass("lg-visible lg-components-open"),
							this.$backdrop.removeClass("in").css("opacity", 0),
							this.zoomFromOrigin && o
								? Math.max(
										this.settings.startAnimationDuration,
										this.settings.backdropDuration
								  )
								: this.settings.backdropDuration);
					return (
						this.$container.removeClass("lg-show-in"),
						setTimeout(function () {
							e.zoomFromOrigin &&
								o &&
								e.outer.removeClass("lg-zoom-from-image"),
								e.$container.removeClass("lg-show"),
								e.$backdrop
									.removeAttr("style")
									.css(
										"transition-duration",
										e.settings.backdropDuration + "ms"
									),
								e.outer.removeClass("lg-closing " + e.settings.startClass),
								e.getSlideItem(e.index).removeClass("lg-start-end-progress"),
								e.$inner.empty(),
								e.lgOpened && e.LGel.trigger(st, { instance: e }),
								e.outer.get() && e.outer.get().blur(),
								(e.lgOpened = !1);
						}, a + 100),
						a + 100
					);
				}),
				(a.prototype.initModules = function () {
					this.plugins.forEach(function (t) {
						try {
							t.init();
						} catch (t) {
							console.warn(
								"lightGallery:- make sure lightGallery module is properly initiated"
							);
						}
					});
				}),
				(a.prototype.destroyModules = function (e) {
					this.plugins.forEach(function (t) {
						try {
							e ? t.destroy() : t.closeGallery && t.closeGallery();
						} catch (t) {
							console.warn(
								"lightGallery:- make sure lightGallery module is properly destroyed"
							);
						}
					});
				}),
				(a.prototype.refresh = function (t) {
					this.settings.dynamic || this.invalidateItems(),
						(this.galleryItems = t || this.getItems()),
						this.updateControls(),
						this.openGalleryOnItemClick(),
						this.LGel.trigger(V);
				}),
				(a.prototype.updateControls = function () {
					this.addSlideVideoInfo(this.galleryItems),
						this.updateCounterTotal(),
						this.manageSingleSlideClassName();
				}),
				(a.prototype.destroy = function () {
					var t = this,
						e = this.closeGallery(!0);
					return (
						setTimeout(function () {
							t.destroyModules(!0),
								t.settings.dynamic || t.invalidateItems(),
								w(window).off(".lg.global" + t.lgId),
								t.LGel.off(".lg"),
								t.$container.remove();
						}, e),
						e
					);
				}),
				a);
		function a(t, e) {
			if (
				((this.lgOpened = !1),
				(this.index = 0),
				(this.plugins = []),
				(this.lGalleryOn = !1),
				(this.lgBusy = !1),
				(this.currentItemsInDom = []),
				(this.prevScrollTop = 0),
				(this.isDummyImageRemoved = !1),
				(this.dragOrSwipeEnabled = !1),
				(this.mediaContainerPosition = { top: 0, bottom: 0 }),
				!t)
			)
				return this;
			if (
				(vt++,
				(this.lgId = vt),
				(this.el = t),
				(this.LGel = w(t)),
				this.generateSettings(e),
				this.buildModules(),
				this.settings.dynamic &&
					void 0 !== this.settings.dynamicEl &&
					!Array.isArray(this.settings.dynamicEl))
			)
				throw "When using dynamic mode, you must also define dynamicEl as an Array.";
			return (
				(this.galleryItems = this.getItems()),
				this.normalizeSettings(),
				this.init(),
				this.validateLicense(),
				this
			);
		}
		function bt(e) {
			return Object.keys(e)
				.map(function (t) {
					return encodeURIComponent(t) + "=" + encodeURIComponent(e[t]);
				})
				.join("&");
		}
		var wt = function (t, e) {
				return new yt(t, e);
			},
			xt = function () {
				return (xt =
					Object.assign ||
					function (t) {
						for (var e, i = 1, s = arguments.length; i < s; i++)
							for (var n in (e = arguments[i]))
								Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
						return t;
					}).apply(this, arguments);
			},
			Ct = {
				autoplayFirstVideo: !0,
				youTubePlayerParams: !1,
				vimeoPlayerParams: !1,
				wistiaPlayerParams: !1,
				gotoNextSlideOnVideoEnd: !0,
				autoplayVideoOnSlide: !1,
				videojs: !1,
				videojsOptions: {},
			},
			St = "lgHasVideo",
			_t = "lgSlideItemLoad",
			Lt = "lgBeforeSlide",
			It = "lgAfterSlide",
			Et = "lgPosterClick";
		/*!
		 * lightgallery | 2.4.0 | January 29th 2022
		 * http://www.lightgalleryjs.com/
		 * Copyright (c) 2020 Sachin Neravath;
		 * @license GPLv3
		 */
		/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function d(
			t
		) {
			return (
				(this.core = t),
				(this.settings = xt(xt({}, Ct), this.core.settings)),
				this
			);
		}
		(d.prototype.init = function () {
			var e = this;
			this.core.LGel.on(St + ".video", this.onHasVideo.bind(this)),
				this.core.LGel.on(Et + ".video", function () {
					var t = e.core.getSlideItem(e.core.index);
					e.loadVideoOnPosterClick(t);
				}),
				this.core.LGel.on(_t + ".video", this.onSlideItemLoad.bind(this)),
				this.core.LGel.on(Lt + ".video", this.onBeforeSlide.bind(this)),
				this.core.LGel.on(It + ".video", this.onAfterSlide.bind(this));
		}),
			(d.prototype.onSlideItemLoad = function (t) {
				var e = this,
					t = t.detail,
					i = t.isFirstSlide,
					s = t.index;
				this.settings.autoplayFirstVideo &&
					i &&
					s === this.core.index &&
					setTimeout(function () {
						e.loadAndPlayVideo(s);
					}, 200),
					!i &&
						this.settings.autoplayVideoOnSlide &&
						s === this.core.index &&
						this.loadAndPlayVideo(s);
			}),
			(d.prototype.onHasVideo = function (t) {
				var t = t.detail,
					e = t.index,
					i = t.src,
					s = t.html5Video;
				t.hasPoster ||
					(this.appendVideos(this.core.getSlideItem(e), {
						src: i,
						addClass: "lg-object",
						index: e,
						html5Video: s,
					}),
					this.gotoNextSlideOnVideoEnd(i, e));
			}),
			(d.prototype.onBeforeSlide = function (t) {
				this.core.lGalleryOn && ((t = t.detail.prevIndex), this.pauseVideo(t));
			}),
			(d.prototype.onAfterSlide = function (t) {
				var e = this,
					t = t.detail,
					i = t.index,
					t = t.prevIndex,
					s = this.core.getSlideItem(i);
				this.settings.autoplayVideoOnSlide &&
					i !== t &&
					s.hasClass("lg-complete") &&
					setTimeout(function () {
						e.loadAndPlayVideo(i);
					}, 100);
			}),
			(d.prototype.loadAndPlayVideo = function (t) {
				var e = this.core.getSlideItem(t);
				this.core.galleryItems[t].poster
					? this.loadVideoOnPosterClick(e, !0)
					: this.playVideo(t);
			}),
			(d.prototype.playVideo = function (t) {
				this.controlVideo(t, "play");
			}),
			(d.prototype.pauseVideo = function (t) {
				this.controlVideo(t, "pause");
			}),
			(d.prototype.getVideoHtml = function (t, e, i, s) {
				var n = "",
					o = this.core.galleryItems[i].__slideVideoInfo || {},
					a = this.core.galleryItems[i],
					a = (a = a.title || a.alt) ? 'title="' + a + '"' : "",
					r =
						'allowtransparency="true"\n            frameborder="0"\n            scrolling="no"\n            allowfullscreen\n            mozallowfullscreen\n            webkitallowfullscreen\n            oallowfullscreen\n            msallowfullscreen';
				if (o.youtube)
					var l = "lg-youtube" + i,
						d =
							"?" +
							(o.youtube[2] ? o.youtube[2] + "&" : "") +
							"wmode=opaque&autoplay=0&mute=1&enablejsapi=1" +
							(this.settings.youTubePlayerParams
								? "&" + bt(this.settings.youTubePlayerParams)
								: ""),
						n =
							'<iframe allow="autoplay" id=' +
							l +
							' class="lg-video-object lg-youtube ' +
							e +
							'" ' +
							a +
							' src="//www.youtube.com/embed/' +
							(o.youtube[1] + d) +
							'" ' +
							r +
							"></iframe>";
				else if (o.vimeo) {
					(l = "lg-vimeo" + i),
						(d = (function (t, e) {
							if (!e || !e.vimeo) return "";
							e = "?" == (e = e.vimeo[2] || "")[0] ? "&" + e.slice(1) : e || "";
							return "?autoplay=0&muted=1" + (t ? "&" + bt(t) : "") + e;
						})(this.settings.vimeoPlayerParams, o));
					n =
						'<iframe allow="autoplay" id=' +
						l +
						' class="lg-video-object lg-vimeo ' +
						e +
						'" ' +
						a +
						' src="//player.vimeo.com/video/' +
						(o.vimeo[1] + d) +
						'" ' +
						r +
						"></iframe>";
				} else if (o.wistia) {
					(l = "lg-wistia" + i), (d = bt(this.settings.wistiaPlayerParams));
					n =
						'<iframe allow="autoplay" id="' +
						l +
						'" src="//fast.wistia.net/embed/iframe/' +
						(o.wistia[4] + (d = d ? "?" + d : "")) +
						'" ' +
						a +
						' class="wistia_embed lg-video-object lg-wistia ' +
						e +
						'" name="wistia_embed" ' +
						r +
						"></iframe>";
				} else if (o.html5) {
					for (var c = "", h = 0; h < s.source.length; h++)
						c +=
							'<source src="' +
							s.source[h].src +
							'" type="' +
							s.source[h].type +
							'">';
					if (s.tracks)
						for (h = 0; h < s.tracks.length; h++)
							!(function (t) {
								var e = "",
									i = s.tracks[t];
								Object.keys(i || {}).forEach(function (t) {
									e += t + '="' + i[t] + '" ';
								}),
									(c += "<track " + e + ">");
							})(h);
					var u = "",
						m = s.attributes || {};
					Object.keys(m || {}).forEach(function (t) {
						u += t + '="' + m[t] + '" ';
					}),
						(n =
							'<video class="lg-video-object lg-html5 ' +
							(this.settings.videojs ? "video-js" : "") +
							'" ' +
							u +
							">\n                " +
							c +
							"\n                Your browser does not support HTML5 video.\n            </video>");
				}
				return n;
			}),
			(d.prototype.appendVideos = function (t, e) {
				var i = this.getVideoHtml(e.src, e.addClass, e.index, e.html5Video),
					i =
						(t.find(".lg-video-cont").append(i),
						t.find(".lg-video-object").first());
				if (
					(e.html5Video &&
						i.on("mousedown.lg.video", function (t) {
							t.stopPropagation();
						}),
					this.settings.videojs &&
						null != (t = this.core.galleryItems[e.index].__slideVideoInfo) &&
						t.html5)
				)
					try {
						return videojs(i.get(), this.settings.videojsOptions);
					} catch (t) {
						console.error("lightGallery:- Make sure you have included videojs");
					}
			}),
			(d.prototype.gotoNextSlideOnVideoEnd = function (t, e) {
				var i = this,
					s = this.core.getSlideItem(e).find(".lg-video-object").first(),
					e = this.core.galleryItems[e].__slideVideoInfo || {};
				if (this.settings.gotoNextSlideOnVideoEnd)
					if (e.html5)
						s.on("ended", function () {
							i.core.goToNextSlide();
						});
					else if (e.vimeo)
						try {
							new Vimeo.Player(s.get()).on("ended", function () {
								i.core.goToNextSlide();
							});
						} catch (t) {
							console.error(
								"lightGallery:- Make sure you have included //github.com/vimeo/player.js"
							);
						}
					else if (e.wistia)
						try {
							(window._wq = window._wq || []),
								window._wq.push({
									id: s.attr("id"),
									onReady: function (t) {
										t.bind("end", function () {
											i.core.goToNextSlide();
										});
									},
								});
						} catch (t) {
							console.error(
								"lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js"
							);
						}
			}),
			(d.prototype.controlVideo = function (t, e) {
				var i = this.core.getSlideItem(t).find(".lg-video-object").first(),
					t = this.core.galleryItems[t].__slideVideoInfo || {};
				if (i.get())
					if (t.youtube)
						try {
							i.get().contentWindow.postMessage(
								'{"event":"command","func":"' + e + 'Video","args":""}',
								"*"
							);
						} catch (t) {
							console.error("lightGallery:- " + t);
						}
					else if (t.vimeo)
						try {
							new Vimeo.Player(i.get())[e]();
						} catch (t) {
							console.error(
								"lightGallery:- Make sure you have included //github.com/vimeo/player.js"
							);
						}
					else if (t.html5)
						if (this.settings.videojs)
							try {
								videojs(i.get())[e]();
							} catch (t) {
								console.error(
									"lightGallery:- Make sure you have included videojs"
								);
							}
						else i.get()[e]();
					else if (t.wistia)
						try {
							(window._wq = window._wq || []),
								window._wq.push({
									id: i.attr("id"),
									onReady: function (t) {
										t[e]();
									},
								});
						} catch (t) {
							console.error(
								"lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js"
							);
						}
			}),
			(d.prototype.loadVideoOnPosterClick = function (t, e) {
				var i,
					s,
					n,
					o = this;
				t.hasClass("lg-video-loaded")
					? e && this.playVideo(this.core.index)
					: t.hasClass("lg-has-video")
					? this.playVideo(this.core.index)
					: (t.addClass("lg-has-video"),
					  (e = void 0),
					  (i = this.core.galleryItems[this.core.index].src),
					  (n = this.core.galleryItems[this.core.index].video) &&
							(e = "string" == typeof n ? JSON.parse(n) : n),
					  (s = this.appendVideos(t, {
							src: i,
							addClass: "",
							index: this.core.index,
							html5Video: e,
					  })),
					  this.gotoNextSlideOnVideoEnd(i, this.core.index),
					  (n = t.find(".lg-object").first().get()),
					  t.find(".lg-video-cont").first().append(n),
					  t.addClass("lg-video-loading"),
					  s &&
							s.ready(function () {
								s.on("loadedmetadata", function () {
									o.onVideoLoadAfterPosterClick(t, o.core.index);
								});
							}),
					  t
							.find(".lg-video-object")
							.first()
							.on("load.lg error.lg loadedmetadata.lg", function () {
								setTimeout(function () {
									o.onVideoLoadAfterPosterClick(t, o.core.index);
								}, 50);
							}));
			}),
			(d.prototype.onVideoLoadAfterPosterClick = function (t, e) {
				t.addClass("lg-video-loaded"), this.playVideo(e);
			}),
			(d.prototype.destroy = function () {
				this.core.LGel.off(".lg.video"), this.core.LGel.off(".video");
			});
		var kt = d;
		const c = window.jQuery;
		var Tt = class {
				constructor(t = 0) {
					this.aboutUsScrollNextSection(),
						this.openVideoInModal(),
						this.toggleFaq(),
						this.toggleProductSlider();
					const e = document.querySelectorAll(".select-panel .slider-panel");
					e.length &&
						e.forEach((t) => {
							new Swiper(t, {
								slidesPerView: 4,
								spaceBetween: 30,
								breakpoints: {
									360: { slidesPerView: 1.5, spaceBetween: 20 },
									640: { slidesPerView: 2.5, spaceBetween: 20 },
									768: { slidesPerView: 3, spaceBetween: 30 },
									1024: { slidesPerView: 3, spaceBetween: 30 },
								},
							});
						});
				}
				aboutUsScrollNextSection() {
					c(".content-video a.btn-scroll").on("click", function (t) {
						t.preventDefault();
						t = c(this).closest("section").nextAll("section");
						const e = c(t[0]);
						c([document.documentElement, document.body]).animate(
							{ scrollTop: e.offset().top },
							1e3
						);
					});
				}
				openVideoInModal() {
					wt(document.querySelector(".video-link a"), {
						selector: "this",
						plugins: [kt],
						videojs: !0,
						mobileSettings: { controls: !0, showCloseIcon: !0 },
						videojsOptions: { controls: !0, autoplay: "muted" },
					}),
						wt(
							document.querySelector(".accordion-img-slider .swiper-wrapper"),
							{ thumbnail: !0 }
						);
				}
				toggleFaq() {
					c(".questions__title").on("click", function (t) {
						c(this).parent().toggleClass("open");
					});
				}
				productSlider() {
					const t = document.querySelectorAll(".accordion-img-slider");
					t.length &&
						t.forEach((t) => {
							new Swiper(t, { slidesPerView: "auto", spaceBetween: 10 });
						});
				}
				toggleProductSlider() {
					const e = this;
					let i = !0;
					c(".accordion-title").on("click", function (t) {
						i && c(".preloader").show(), t.preventDefault();
						t = c(this);
						t.hasClass("open") ||
							(c(".accordion-content").slideUp(400),
							c(".accordion-title").removeClass("open")),
							t.toggleClass("open"),
							t.next().slideToggle(400, function () {
								e.productSlider(), c(".preloader").hide();
							}),
							(i = !i);
					});
				}
			},
			t = (e(3), e(0)),
			At = e.n(t),
			Mt =
				/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|W{1,2}|[LlopSZN]|"[^"]*"|'[^']*'/g,
			Dt =
				/\b(?:[A-Z]{1,3}[A-Z][TC])(?:[-+]\d{4})?|((?:Australian )?(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time)\b/g,
			Pt = /[^-+\dA-Z]/g;
		function $t(t, e, i, s) {
			if (
				(1 !== arguments.length ||
					"string" != typeof t ||
					/\d/.test(t) ||
					((e = t), (t = void 0)),
				(t = t || 0 === t ? t : new Date()) instanceof Date ||
					(t = new Date(t)),
				isNaN(t))
			)
				throw TypeError("Invalid date");
			function n() {
				return i ? "getUTC" : "get";
			}
			function o() {
				return t[n() + "Date"]();
			}
			function a() {
				return t[n() + "Day"]();
			}
			function r() {
				return t[n() + "Month"]();
			}
			function l() {
				return t[n() + "FullYear"]();
			}
			function d() {
				return t[n() + "Hours"]();
			}
			function c() {
				return t[n() + "Minutes"]();
			}
			function h() {
				return t[n() + "Seconds"]();
			}
			function u() {
				return t[n() + "Milliseconds"]();
			}
			function m() {
				return i ? 0 : t.getTimezoneOffset();
			}
			function g() {
				return zt(t);
			}
			var p = (e = String(Ot[e] || e || Ot.default)).slice(0, 4),
				f =
					(("UTC:" !== p && "GMT:" !== p) ||
						((e = e.slice(4)), (i = !0), "GMT:" === p && (s = !0)),
					{
						d: o,
						dd: function () {
							return y(o());
						},
						ddd: function () {
							return v.dayNames[a()];
						},
						DDD: function () {
							return Ft({
								y: l(),
								m: r(),
								d: o(),
								_: n(),
								dayName: v.dayNames[a()],
								short: !0,
							});
						},
						dddd: function () {
							return v.dayNames[a() + 7];
						},
						DDDD: function () {
							return Ft({
								y: l(),
								m: r(),
								d: o(),
								_: n(),
								dayName: v.dayNames[a() + 7],
							});
						},
						m: function () {
							return r() + 1;
						},
						mm: function () {
							return y(r() + 1);
						},
						mmm: function () {
							return v.monthNames[r()];
						},
						mmmm: function () {
							return v.monthNames[r() + 12];
						},
						yy: function () {
							return String(l()).slice(2);
						},
						yyyy: function () {
							return y(l(), 4);
						},
						h: function () {
							return d() % 12 || 12;
						},
						hh: function () {
							return y(d() % 12 || 12);
						},
						H: d,
						HH: function () {
							return y(d());
						},
						M: c,
						MM: function () {
							return y(c());
						},
						s: h,
						ss: function () {
							return y(h());
						},
						l: function () {
							return y(u(), 3);
						},
						L: function () {
							return y(Math.floor(u() / 10));
						},
						t: function () {
							return d() < 12 ? v.timeNames[0] : v.timeNames[1];
						},
						tt: function () {
							return d() < 12 ? v.timeNames[2] : v.timeNames[3];
						},
						T: function () {
							return d() < 12 ? v.timeNames[4] : v.timeNames[5];
						},
						TT: function () {
							return d() < 12 ? v.timeNames[6] : v.timeNames[7];
						},
						Z: function () {
							return s ? "GMT" : i ? "UTC" : qt(t);
						},
						o: function () {
							return (
								(0 < m() ? "-" : "+") +
								y(
									100 * Math.floor(Math.abs(m()) / 60) + (Math.abs(m()) % 60),
									4
								)
							);
						},
						p: function () {
							return (
								(0 < m() ? "-" : "+") +
								y(Math.floor(Math.abs(m()) / 60), 2) +
								":" +
								y(Math.floor(Math.abs(m()) % 60), 2)
							);
						},
						S: function () {
							return ["th", "st", "nd", "rd"][
								3 < o() % 10 ? 0 : (((o() % 100) - (o() % 10) != 10) * o()) % 10
							];
						},
						W: g,
						WW: function () {
							return y(g());
						},
						N: function () {
							return Nt(t);
						},
					});
			return e.replace(Mt, function (t) {
				return t in f ? f[t]() : t.slice(1, t.length - 1);
			});
		}
		var Ot = {
				default: "ddd mmm dd yyyy HH:MM:ss",
				shortDate: "m/d/yy",
				paddedShortDate: "mm/dd/yyyy",
				mediumDate: "mmm d, yyyy",
				longDate: "mmmm d, yyyy",
				fullDate: "dddd, mmmm d, yyyy",
				shortTime: "h:MM TT",
				mediumTime: "h:MM:ss TT",
				longTime: "h:MM:ss TT Z",
				isoDate: "yyyy-mm-dd",
				isoTime: "HH:MM:ss",
				isoDateTime: "yyyy-mm-dd'T'HH:MM:sso",
				isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
				expiresHeaderFormat: "ddd, dd mmm yyyy HH:MM:ss Z",
			},
			v = {
				dayNames: [
					"Sun",
					"Mon",
					"Tue",
					"Wed",
					"Thu",
					"Fri",
					"Sat",
					"Sunday",
					"Monday",
					"Tuesday",
					"Wednesday",
					"Thursday",
					"Friday",
					"Saturday",
				],
				monthNames: [
					"Jan",
					"Feb",
					"Mar",
					"Apr",
					"May",
					"Jun",
					"Jul",
					"Aug",
					"Sep",
					"Oct",
					"Nov",
					"Dec",
					"January",
					"February",
					"March",
					"April",
					"May",
					"June",
					"July",
					"August",
					"September",
					"October",
					"November",
					"December",
				],
				timeNames: ["a", "p", "am", "pm", "A", "P", "AM", "PM"],
			},
			y = function (t) {
				var e =
					1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 2;
				return String(t).padStart(e, "0");
			},
			Ft = function (t) {
				var e = t.y,
					i = t.m,
					s = t.d,
					n = t._,
					o = t.dayName,
					t = t.short,
					t = void 0 !== t && t,
					a = new Date(),
					r = new Date(),
					l = (r.setDate(r[n + "Date"]() - 1), new Date());
				l.setDate(l[n + "Date"]() + 1);
				return a[n + "FullYear"]() === e &&
					a[n + "Month"]() === i &&
					a[n + "Date"]() === s
					? t
						? "Tdy"
						: "Today"
					: r[n + "FullYear"]() === e &&
					  r[n + "Month"]() === i &&
					  r[n + "Date"]() === s
					? t
						? "Ysd"
						: "Yesterday"
					: l[n + "FullYear"]() === e &&
					  l[n + "Month"]() === i &&
					  l[n + "Date"]() === s
					? t
						? "Tmw"
						: "Tomorrow"
					: o;
			},
			zt = function (t) {
				var t = new Date(t.getFullYear(), t.getMonth(), t.getDate()),
					e =
						(t.setDate(t.getDate() - ((t.getDay() + 6) % 7) + 3),
						new Date(t.getFullYear(), 0, 4)),
					i =
						(e.setDate(e.getDate() - ((e.getDay() + 6) % 7) + 3),
						t.getTimezoneOffset() - e.getTimezoneOffset());
				return t.setHours(t.getHours() - i), 1 + Math.floor((t - e) / 6048e5);
			},
			Nt = function (t) {
				t = t.getDay();
				return (t = 0 === t ? 7 : t);
			},
			qt = function (t) {
				return (String(t).match(Dt) || [""])
					.pop()
					.replace(Pt, "")
					.replace(/GMT\+0000/g, "UTC");
			};
		class jt {
			constructor(t) {
				(this.selector = document.querySelector(t)),
					this.selector && this.init();
			}
			closeTabs(t) {
				t.forEach((t) => {
					t.classList.remove("is-active");
				});
			}
			init() {
				let i = this.selector.querySelectorAll("[data-tab]"),
					s = this.selector.querySelectorAll(".c-tab__content");
				i.forEach((t) => {
					t.addEventListener("click", (t) => {
						let e = t.target.classList.contains(".c-tab__item")
							? t.target
							: t.target.closest(".c-tab__item");
						t = e.getAttribute("data-tab");
						this.closeTabs(i),
							this.closeTabs(s),
							e.classList.add("is-active"),
							this.selector.querySelector(t).classList.add("is-active");
					});
				});
			}
		}
		class h {
			constructor(t, e) {
				(this.modal = document.querySelectorAll(t)),
					(this.modalContainer = document.querySelector(e)),
					(this.modalContainerClass = e.replace(".", "")),
					this.init();
			}
			init() {
				let t = document.querySelectorAll("[data-modal]");
				t.length &&
					t.forEach((i) => {
						i.addEventListener("click", (t) => {
							var e = i.getAttribute("data-modal");
							this.modalController(e);
						});
					}),
					this.modalContainer.addEventListener("click", (t) => {
						t.target.classList.contains(this.modalContainerClass) &&
							(this.bodyScroll("close"),
							this.closeModal(this.modal, this.modalContainer));
					});
			}
			modalController(t) {
				var e = this.modalContainer.querySelector(t);
				"close" == t
					? (this.closeModal(this.modal, this.modalContainer),
					  this.bodyScroll("close"))
					: (this.closeModal(this.modal),
					  this.openModal(this.modalContainer, e),
					  this.bodyScroll());
			}
			bodyScroll(t) {
				const e = document.body,
					i = document.documentElement;
				"close" === t
					? (e.classList.remove("is-overflow-hidden"),
					  i.classList.remove("is-overflow-hidden"))
					: (e.classList.add("is-overflow-hidden"),
					  i.classList.add("is-overflow-hidden"));
			}
			openModal(t, e) {
				t.classList.contains("is-active") || t.classList.add("is-active"),
					e.classList.contains("is-active") || e.classList.add("is-active");
			}
			closeModal(t, e = !1) {
				t.forEach((t) => {
					t.classList.contains("is-active") && t.classList.remove("is-active");
				}),
					e && e.classList.remove("is-active");
			}
		}
		e(4);
		var t = e(1),
			Rt = e.n(t);
		window.jQuery;
		const Ht = [...document.querySelectorAll("input[name*=sms-value]")],
			Bt =
				(Ht.length && Ht.forEach((t) => Vt(t)),
				[...document.querySelectorAll("input[name*=whatsapp-value]")]);
		function Vt(e) {
			if (e) {
				let t = Rt()(e, {
					utilsScript:
						"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.18/js/utils.js",
					preferredCountries: ["il", "us"],
				});
				e.addEventListener("input", function () {
					this.value = t.getNumber(intlTelInputUtils.numberFormat.E164);
				});
			}
		}
		Bt.length && Bt.forEach((t) => Vt(t));
		var b = Vt;
		const C = window.jQuery;
		let S = ["S", "M", "T", "W", "T", "F", "S"],
			_ = [
				"Jan",
				"Feb",
				"Mar",
				"Apr",
				"May",
				"Jun",
				"Jul",
				"Aug",
				"Sep",
				"Oct",
				"Nov",
				"Dec",
			];
		function Ut(t) {
			var e, i, s, n;
			(t = t || C("body .wrapper-textarea > textarea.current-m")).length &&
				((e = t.val()),
				(i = t.attr("data-x")),
				(s = t.attr("data-y")),
				(n = t.attr("data-color")),
				(t = t.attr("data-font-size")),
				C(".template > div.svg #message-svg").text(e),
				L.svgTextMultiline(".step3 .template", "message-svg", i, s, n, t));
		}
		C("html").attr("dir") &&
			((S = ["א", "ב", "ג", "ד", "ה", "ו", "ש"]),
			(_ = [
				"יָנוּאָר",
				"פברואר",
				"מרץ",
				"אַפּרִיל",
				"מאי",
				"יוני",
				"יולי",
				"אוגוסט",
				"סֶפּטֶמבֶּר",
				"אוֹקְטוֹבֶּר",
				"נוֹבֶמבֶּר",
				"דֵצֶמבֶּר",
			]));
		const L = {
			state: {
				id: "",
				template: "",
				vId: "",
				price: 0,
				title: "",
				step: 1,
				type: "",
				forms: { form2: {}, form3: {}, form4: {} },
			},
			banner: C(".product-banner"),
			btnTrigger: C(".btn-step"),
			setLocalStorage: (t = [], e) => {
				let i = localStorage.getItem("localState");
				(i = i ? JSON.parse(i) : L.state).id !== e &&
					localStorage.setItem("localState", JSON.stringify(t));
			},
			getLocalStorageArr: () => {
				var t = localStorage.getItem("localState");
				return JSON.parse(t);
			},
			updateLocalStorage: (t, e, i) => {
				let s = localStorage.getItem("localState");
				(s = s ? JSON.parse(s) : L.state),
					i ? (s[e][i] = t) : (s[e] = t),
					localStorage.setItem("localState", JSON.stringify(s));
			},
			paymentFieldsValidation: () => {
				const t = document.querySelector("#og-ccnum"),
					e =
						(null !== t &&
							((t.placeholder = "0000 0000 0000 0000"), (t.maxLength = 19)),
						document.querySelector("#og-cvv"));
				null !== e && (e.placeholder = "xxx"),
					C(".og-cc-month") &&
						C(".og-cc-year") &&
						C(".og-cc-month").parents(".form-row").addClass("is-date"),
					C(".og-cc-cvv") &&
						C(".og-cc-cvv").parents(".form-row").addClass("is-cvv");
				C(".l-checkout").validate({
					errorElement: "span",
					groups: { data: "og-expmonth og-expyear" },
					rules: {
						"og-ccnum": { required: !0, minlength: 18 },
						"og-cvv": { required: !0, minlength: 3, maxlength: 4, digits: !0 },
					},
					messages: {
						"og-ccnum": {
							required: "Is This the Correct Card Number?",
							minlength: "Please enter at least 16 characters.",
						},
						"og-cvv": { minlength: "This field is required." },
					},
					errorPlacement: function (t, e) {
						"og-expmonth" == e.attr("name") || "og-expyear" == e.attr("name")
							? t.insertAfter(".form-row.is-date .og-expiration")
							: t.insertAfter(e);
					},
				});
			},
			svgChangeIds: () => {
				let t = document.querySelectorAll(
					'.steps-list input[name="template-id"], .default-card .default-card__block'
				);
				t.length &&
					t.forEach((t, e) => {
						let n = t.getAttribute("id");
						const i = t.closest(".item").querySelector("svg");
						if (i) {
							i.hasAttribute("id")
								? (n = i.getAttribute("id"))
								: i.setAttribute("id", n);
							let s = [];
							var t = i.querySelectorAll("g"),
								o = i.querySelectorAll("use"),
								a = i.querySelectorAll("clipPath"),
								r = i.querySelectorAll("mask"),
								l = i.querySelectorAll("filter"),
								d = i.querySelectorAll("path"),
								c = i.querySelectorAll("rect"),
								h = i.querySelectorAll("feColorMatrix"),
								u = i.querySelectorAll("radialGradient"),
								m = i.querySelectorAll("circle");
							if (
								([t, o, a, r, l, d, c, h, u, m].forEach((t, e) => {
									t.forEach((e, t) => {
										var i;
										if (
											(e.hasAttribute("id") &&
												((i = e.getAttribute("id")),
												e.setAttribute("id", i + "-" + n),
												(s["#" + i] = "#" + i + "-" + n)),
											e.hasAttribute("xlink:href") &&
												((i = e.getAttribute("xlink:href")),
												e.setAttribute("xlink:href", i + "-" + n),
												(s[i] = i + "-" + n)),
											e.hasAttribute("filter"))
										) {
											let t = e.getAttribute("filter");
											(t = t.match(/\((.*?)\)/)),
												e.setAttribute("filter", "url(" + t[1] + "-" + n + ")"),
												(s[t[1]] = t[1] + "-" + n);
										}
										if (e.hasAttribute("mask")) {
											let t = e.getAttribute("mask");
											(t = t.match(/\((.*?)\)/)),
												e.setAttribute("mask", "url(" + t[1] + "-" + n + ")"),
												(s[t[1]] = t[1] + "-" + n);
										}
										if (e.hasAttribute("clip-path")) {
											let t = e.getAttribute("clip-path");
											(t = t.match(/\((.*?)\)/)),
												e.setAttribute(
													"clip-path",
													"url(" + t[1] + "-" + n + ")"
												),
												(s[t[1]] = t[1] + "-" + n);
										}
										if (e.hasAttribute("fill")) {
											let t = e.getAttribute("fill");
											(t = t.match(/\((.*?)\)/)) &&
												(e.setAttribute("fill", "url(" + t[1] + "-" + n + ")"),
												(s[t[1]] = t[1] + "-" + n));
										}
									});
								}),
								i.querySelector("style"))
							) {
								let t = i.querySelector("style");
								(t.innerHTML = t.innerHTML.replace(/\t/g, "")),
									(t.innerHTML = t.innerHTML.replace(/\n/g, "")),
									t.innerHTML.match(/\}(.+?)(?=\{)/) &&
										((t.innerHTML = t.innerHTML.replace(
											/\}(.+?)(?=\{)/g,
											(t) => "}#" + n + " " + t.substring(1)
										)),
										(t.innerHTML = "#" + n + " " + t.innerHTML)),
									(t.innerHTML = t.innerHTML.replace(
										/\(#(.+?)(?=\))/g,
										(t) => t + "-" + n
									));
							}
						}
					});
			},
			svgAddImportantTags: (g) => {
				if (g) {
					let t = g.getAttribute("viewBox");
					var p = t.split(/\s+|,/),
						f = p[2],
						p = (f / p[3]).toFixed(1);
					let e = p < 1 ? 2.89 : 2,
						i = p < 1 ? 6.9 : 5.5,
						s = p < 1 ? 4 : 2.9;
					var v;
					let n = 15,
						o = p < 1 ? 6 : 4,
						a = 16,
						r = p < 1 ? 41 : 43,
						l = p < 1 ? 45 : 47,
						d = p < 1 ? 48 : 48,
						c = 65,
						h = 69,
						u = 79,
						m = 58;
					(e = ((f / 100) * e).toFixed(1)),
						(i = ((f / 100) * i).toFixed(1)),
						(s = ((f / 100) * s).toFixed(1)),
						(v = ((f / 100) * 25).toFixed(1)),
						(n = ((f / 100) * n).toFixed(1)),
						1.3 < p &&
							p < 1.5 &&
							((n = 27),
							(u = 85),
							(h = 73),
							(i = 11),
							(o = 4),
							(l = 40.5),
							(a = 10.5),
							(r = 32),
							(c = 32),
							(d = 46),
							(m = 52),
							(c = 57)),
						0.6 < p &&
							p < 0.8 &&
							((r = 34),
							(d = 47),
							(m = 53.5),
							(l = 42),
							(c = 57),
							(h = 64),
							(a = 11),
							(u = 77.5)),
						0.9 < p &&
							p < 1.1 &&
							((r = 34.5),
							(e = 5),
							(l = 44),
							(d = 49.5),
							(c = 60),
							(h = 70),
							(m = 55),
							(s = 7.5),
							(a = 12));
					(f = `<text x="50%" y="${o}%" font-size="${i}" fill="#0E1856" font-weight="600" dominant-baseline="middle"
      text-anchor="middle" id="receiver-name-svg"></text>

      <text x="50%" y="13%" fill="#997C61" font-size="${e}" dominant-baseline="middle"
      text-anchor="middle" id="message-svg"></text>

      <text x="50%" y="${r}%" font-size="${s}" fill="#0E1856" font-weight="600" dominant-baseline="middle"
      text-anchor="middle" id="from-name-svg"></text>

      <text x="50%" y="${l}%" font-size="${s}" fill="#0E1856"  dominant-baseline="middle"
      text-anchor="middle" id="behalf-svg"></text>

      <text x="50%" y="${d}%" font-size="${s}" dominant-baseline="middle" font-weight="500"
      text-anchor="middle" id="product-title-svg"></text> 

      <text x="50%" y="${c}%" font-size="${s}" dominant-baseline="middle"
      text-anchor="middle" id="partner-title-svg"></text>

      <text x="50%" y="${h}%" font-size="${e}" dominant-baseline="middle"
      text-anchor="middle" id="partner-desc-svg"></text>


      <text x="50%" y="${m}%" font-size="${s}" dominant-baseline="middle"
      text-anchor="middle" id="show-price-svg"></text>`),
						(p = C(".js-svg-attr").attr("data-partner-logo"));
					if ("" !== p) {
						let t = document.createElementNS(
							"http://www.w3.org/2000/svg",
							"image"
						);
						t.setAttributeNS(null, "height", n),
							t.setAttributeNS(null, "width", v),
							t.setAttributeNS("http://www.w3.org/1999/xlink", "href", p),
							t.setAttributeNS(null, "x", "39%"),
							t.setAttributeNS(null, "y", u + "%"),
							t.setAttributeNS(null, "visibility", "visible"),
							C(g).append(t);
					}
					return (
						(C(g).find("#receiver-name-svg").length &&
							C(g).find("#from-name-svg").length &&
							C(g).find("#message-svg").length &&
							C(g).find("#show-price-svg").length) ||
							C(g).append(f),
						g.outerHTML
					);
				}
			},
			timepickerChanger: () => {
				let s = !1;
				C(document).mouseup((t) => {
					const e = C(".timepicker .placeholder"),
						i = C(".timepicker-dropdown");
					e.is(t.target) ||
						i.is(t.target) ||
						0 !== e.has(t.target).length ||
						0 !== i.has(t.target).length ||
						(e.removeClass("open"),
						e.siblings(".timepicker-dropdown").slideUp(300, () => {
							s = !1;
						}));
				}),
					C(document).on("click", ".timepicker .placeholder", (t) => {
						s ||
							((s = !0),
							C(t.target).toggleClass("open"),
							C(t.target)
								.siblings(".timepicker-dropdown")
								.slideToggle(300, () => {
									s = !1;
								}));
					}),
					C(document).on("click", ".item-hour", (t) => {
						C(".item-hour").removeClass("active"),
							C(".custom-date.custom-show").attr(
								"data-hour-value",
								C(t.target).text()
							),
							C(t.target).addClass("active"),
							C(t.target)
								.closest(".timepicker-wrapper")
								.find(".placeholder > .text")
								.hide(),
							C(t.target)
								.closest(".timepicker-wrapper")
								.find(".placeholder > .time")
								.show()
								.find(".hour")
								.text(C(t.target).text());
					}),
					C(document).on("click", ".item-minute", (t) => {
						C(".item-minute").removeClass("active"),
							C(".custom-date.custom-show").attr(
								"data-minute-value",
								C(t.target).text()
							),
							C(t.target).addClass("active"),
							C(t.target)
								.closest(".timepicker-wrapper")
								.find(".placeholder > .text")
								.hide(),
							C(t.target)
								.closest(".timepicker-wrapper")
								.find(".placeholder > .time")
								.show()
								.find(".minute")
								.text(C(t.target).text());
					}),
					C(document).on("change", ".custom-date", (t) => {
						t.target.classList.contains("custom-show")
							? C(t.target)
									.closest(".radiobutton-row")
									.find(".time-group")
									.slideDown(300)
							: C(t.target)
									.closest(".radiobutton-row")
									.find(".time-group")
									.slideUp(300);
					});
			},
			onStepsClick: () => {
				C(document).on("click", ".product-steps__item", (t) => {
					t.preventDefault();
					var e = t.target
						.closest(".product-steps__item")
						.getAttribute("data-steps-item");
					switch ((e = parseInt(e, 10))) {
						case 1:
							C('[data-steps-item="2"],[data-steps-item="3"]').removeClass(
								"active"
							),
								C(".steps-list__item").removeClass("show-step"),
								C(".step1").addClass("show-step"),
								C(".step1").addClass('aria-hidden="false"'),
								C(".product-steps").hide(),
								C(".product-steps:not(.for-me)").fadeIn(500),
								L.updateLocalStorage(e, "step"),
								L.updateLocalStorage({}, "forms", "form2"),
								L.updateLocalStorage({}, "forms", "form3"),
								L.updateLocalStorage({}, "forms", "form4"),
								L.updateLocalStorage("", "template"),
								C(".wrapper-errors").removeClass("show"),
								C(".wrapper-errors-list").removeClass("show-list"),
								C(".default-item-row").removeClass("errors-find"),
								C(".new-item").remove(),
								C(".temp-svg").remove(),
								C(".btn-add-default").remove(),
								L.banner.hide();
							break;
						case 2:
							C('[data-steps-item="3"]').removeClass("active"),
								L.updateLocalStorage(e, "step"),
								L.updateLocalStorage("", "template"),
								C(".steps-list__item").removeClass("show-step"),
								C(".step2").addClass("show-step");
							break;
						case 3:
							L.updateLocalStorage(4, "step"),
								C(".steps-list__item").removeClass("show-step"),
								C(".step4").addClass("show-step");
					}
				});
			},
			showChangeCheckbox: () => {
				C(document).on(
					"change",
					'.wrapper-errors-list input[type="checkbox"]',
					(t) => {
						t.target.checked
							? t.target
									.closest(".wrapper-errors-list")
									.querySelector('input[type="text"]')
									.setAttribute("data-show", !0)
							: t.target
									.closest(".wrapper-errors-list")
									.querySelector('input[type="text"]')
									.setAttribute("data-show", !1);
					}
				);
			},
			validateFormFields: (e) => {
				let s = [],
					n = "en";
				C.isFunction("getCookie") &&
					(n = getCookie("wp-wpml_current_language"));
				for (var o of e.elements)
					if (o.closest(".wrapper-errors") && !o.closest(".hidden-errors"))
						if (
							("checkbox" !== o.type &&
								"true" === o.getAttribute("data-show") &&
								"sms-value" === o.name) ||
							("checkbox" !== o.type &&
								"true" === o.getAttribute("data-show") &&
								"whatsapp-value" === o.name)
						) {
							let t = /^\+{0,1}[0-9]{10,12}$/,
								e = o.closest(".wrapper-errors"),
								i = o.closest(".wrapper-errors").querySelector(".error");
							"" === o.value
								? ((i.innerHTML = "Required fields"),
								  "he" == n && (i.innerHTML = "שדות חובה"),
								  e.classList.add("show"),
								  s.push(o.type))
								: t.test(o.value)
								? e.classList.remove("show")
								: ((i.innerHTML =
										"Invalid data (only numbers from 10 to 12 characters)"),
								  "he" == n &&
										(i.innerHTML =
											"נתונים לא חוקיים (רק מספרים מ-10 עד 12 תווים)"),
								  e.classList.add("show"),
								  s.push(o.type));
						} else if (
							"checkbox" !== o.type &&
							"true" === o.getAttribute("data-show") &&
							"email-value" === o.name
						) {
							let t =
									/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
								e = o.closest(".wrapper-errors"),
								i = o.closest(".wrapper-errors").querySelector(".error");
							"" === o.value
								? ((i.innerHTML = "Required fields"),
								  "he" == n && (i.innerHTML = "שדות חובה"),
								  e.classList.add("show"),
								  s.push(o.type))
								: t.test(o.value)
								? e.classList.remove("show")
								: ((i.innerHTML = "Invalid data (example test@gmail.com)"),
								  "he" == n &&
										(i.innerHTML = "נתונים לא חוקיים (לדוגמה test@gmail.com)"),
								  e.classList.add("show"),
								  s.push(o.type));
						} else
							("" === o.value &&
								"checkbox" !== o.type &&
								null === o.getAttribute("data-show")) ||
							("" === o.value &&
								"checkbox" !== o.type &&
								null !== o.getAttribute("data-show") &&
								"true" === o.getAttribute("data-show"))
								? o.closest(".send-row.temp") ||
								  o.closest(".hidden-errors") ||
								  (o.closest(".wrapper-errors").classList.add("show"),
								  s.push(o.type))
								: o.closest(".wrapper-errors").classList.remove("show");
				var t = L.getLocalStorageArr();
				if ("For Several Receivers" === t.type)
					if (((s = []), 4 !== t.step)) {
						let t = 1;
						for (var i of e.elements)
							i.closest(".wrapper-errors") &&
								!i.closest(".hidden-errors") &&
								("" === i.value &&
									"text" === i.type &&
									i.classList.contains("receivers-input") &&
									1 === t &&
									(i.closest(".wrapper-errors").classList.add("show"),
									s.push(i.type),
									t++),
								"from-name" === i.getAttribute("id") &&
									i.closest(".wrapper-errors").classList.remove("show"));
					} else {
						s = [];
						for (var a of e.elements)
							a.closest(".wrapper-errors") &&
								!a.closest(".hidden-errors") &&
								((("" === a.value &&
									"checkbox" !== a.type &&
									null === a.getAttribute("data-show")) ||
									("" === a.value &&
										"checkbox" !== a.type &&
										null !== a.getAttribute("data-show") &&
										"true" === a.getAttribute("data-show"))) &&
									(a.closest(".wrapper-errors").classList.add("show"),
									s.push(a.type)),
								"from-name" === a.getAttribute("id") &&
									a.closest(".wrapper-errors").classList.remove("show"));
					}
				return (
					C(
						'.product-steps__item[data-steps-item="1"],.product-steps__item[data-steps-item="2"],.product-steps__item[data-steps-item="3"]'
					).bind("click", function () {
						C(".wrapper-errors").removeClass("show"), (s = []);
					}),
					0 < s.length
				);
			},
			validateFormCheckbox: (t) => {
				let e = [];
				for (var i of t.elements)
					!i.closest(".wrapper-errors-list") ||
						"checkbox" !== i.type ||
						i.checked ||
						i.closest(".send-row.temp") ||
						i.closest(".hidden-errors") ||
						(i.closest(".wrapper-errors-list").classList.add("show-list"),
						e.push(i.type));
				return (
					e.length < 3 && C(".wrapper-errors-list").removeClass("show-list"),
					e.length < 3
				);
			},
			validateFormCheckboxRows: () => {
				let t = [];
				return (
					C(".default-item-row, .new-item").each(function () {
						C(this).find('input[type="checkbox"]').filter(":checked").length < 1
							? (C(this).find(".wrapper-errors-list").addClass("show-list"),
							  C(this).addClass("errors-find"),
							  t.push(1))
							: (C(this).find(".wrapper-errors-list").removeClass("show-list"),
							  C(this).removeClass("errors-find"));
					}),
					0 < t.length
				);
			},
			onclickFromSubmit: () => {
				C("#form-step2").submit((a) => {
					a.preventDefault();
					var a = document.getElementById("form-step2"),
						r = C("#form-step2")
							.serializeArray()
							.reduce((t, e) => ((t[e.name] = e.value), t), {});
					if (!L.validateFormFields(a)) {
						L.updateLocalStorage(3, "step"),
							L.updateLocalStorage(r, "forms", "form2");
						let t = C(".template > div.svg").first().find("svg").clone(!0, !0),
							e =
								((t = L.svgAddImportantTags(t.get(0))),
								C(".template-result > div.svg").html(t),
								C("textarea.current-m")),
							i = e.attr("data-x"),
							s = e.attr("data-y"),
							n = e.attr("data-color"),
							o = e.attr("data-font-size");
						C(".template > div.svg #message-svg").text(e.val());
						var a = C(".js-svg-attr").attr("data-partner-desc"),
							r = C(".js-svg-attr").attr("data-partner-title"),
							l = C(".js-svg-attr").attr("data-product-title"),
							d = C(".js-svg-attr").attr("data-behalf-title"),
							a =
								(C(".template > div.svg #partner-desc-svg").text(a),
								C(".template > div.svg #partner-title-svg").text(r),
								C(".template > div.svg #product-title-svg").text(l),
								C(".template > div.svg #behalf-svg").text(d),
								setTimeout(function () {
									L.svgTextMultiline(
										".step3 .template",
										"message-svg",
										i,
										s,
										n,
										o
									),
										L.svgTextMultiline(
											".step3 .template",
											"partner-desc-svg",
											i,
											s,
											n,
											o
										),
										L.svgTextMultiline(
											".step3 .template",
											"partner-title-svg",
											i,
											s,
											n,
											o
										),
										L.svgTextMultiline(
											".step3 .template",
											"product-title-svg",
											i,
											s,
											n,
											o
										),
										L.svgTextMultiline(
											".step3 .template",
											"behalf-svg",
											i,
											s,
											n,
											o
										);
								}, 1),
								C(".steps-list__item").removeClass("show-step"),
								C(".step3").addClass("show-step"),
								L.getLocalStorageArr().forms);
						null !== a.form2["template-id"] &&
							(1 <
							C("#" + a.form2["template-id"])
								.closest(".items")
								.find(".item").length
								? C(".switcher-btn").css({
										opacity: 1,
										pointerEvents: "auto",
										height: "auto",
								  })
								: C(".switcher-btn").css({
										opacity: 0,
										pointerEvents: "none",
										height: 0,
								  }));
					}
					var e = C("select#select-happening")
						.find(":selected")
						.attr("data-option-order");
					C(".wrapper-textarea-for-occasion").each(function () {
						var t = C(this);
						t.hasClass("wrapper-textarea-for-" + e)
							? (t.addClass("wrapper-textarea"),
							  t.show(),
							  t.find(".arrow-left-inactive").addClass("arrow-left"),
							  t.find(".arrow-right-inactive").addClass("arrow-right"),
							  Ut(null))
							: (t.removeClass("wrapper-textarea"),
							  t.hide(),
							  t.find(".arrow-left-inactive").removeClass("arrow-left"),
							  t.find(".arrow-right-inactive").removeClass("arrow-right"));
					});
				});
				const h = (i, t, e, s = !1) => {
					C("#for-several-receivers").append(
						`<div class="send-row new-item default-item-row" data-id="${i}">${e}</div>`
					);
					const n = C(`[data-id="${i}"]`);
					if (
						(n.find(".title").addClass("default").text(t),
						n.find(".panel-title").addClass("panel-default"),
						n.find('[id="email-id"]').attr("id", "email-id-" + i),
						n.find('[for="email-id"]').attr("for", "email-id-" + i),
						n
							.find('[name="email-value-id"]')
							.attr("name", "email-value-id-" + i),
						n.find('[id="sms-id"]').attr("id", "sms-id-" + i),
						n.find('[for="sms-id"]').attr("for", "sms-id-" + i),
						n
							.find('[name="sms-value-id"]')
							.attr("name", "sms-value-id-" + i)
							.each(function () {
								b(this);
							}),
						n.find('[id="whatsapp-id"]').attr("id", "whatsapp-id-" + i),
						n.find('[for="whatsapp-id"]').attr("for", "whatsapp-id-" + i),
						n
							.find('[name="whatsapp-value-id"]')
							.attr("name", "whatsapp-value-id-" + i)
							.each(function () {
								b(this);
							}),
						n.find('[id="now-id"]').attr("id", "now-id-" + i),
						n.find('[for="now-id"]').attr("for", "now-id-" + i),
						n.find('[id="date-id"]').attr("id", "date-id-" + i),
						n.find('[for="date-id"]').attr("for", "date-id-" + i),
						n
							.find('[name="dispatch-time-id"]')
							.attr("name", "dispatch-time-id-" + i),
						n.find(".datapicker").addClass("datapicker-" + i),
						s &&
							(n.append(
								C(document.createElement("button"))
									.prop({
										type: "button",
										innerHTML: themeVars.remove,
										class: "btn-remove-default",
									})
									.attr("data-remove-id", i)
							),
							n.find(".panel-title").trigger("click")),
						C(".datapicker-" + i).length)
					) {
						const o = At()(".datapicker-" + i, {
							showAllDates: !0,
							customDays: S,
							customMonths: _,
							onSelect: (t, e) => {
								C("#date-id-" + i).val($t(e, "mm/dd/yyyy"));
							},
						});
						o.setMin(new Date());
					}
				};
				C(document).on("click", ".rush-btn", function (t) {
					t.preventDefault();
					t = L.getLocalStorageArr();
					L.defaultCard(),
						C('[data-steps-item="3"]').addClass("active"),
						C(".steps-list__item").removeClass("show-step"),
						C(".step4").addClass("show-step"),
						L.updateLocalStorage(4, "step"),
						C(".btn-add-default").remove();
					let e = C(".js-svg-attr").attr("data-x-t"),
						i = C(".js-svg-attr").attr("data-y-t"),
						s = C(".js-svg-attr").attr("data-color-t"),
						n = C(".js-svg-attr").attr("data-font-size-t");
					var o = C(".js-svg-attr").attr("data-partner-desc"),
						a = C(".js-svg-attr").attr("data-partner-title"),
						r = C(".js-svg-attr").attr("data-product-title"),
						l = C(".js-svg-attr").attr("data-behalf-title");
					if (
						(C(".template > div.svg #partner-desc-svg").text(o),
						C(".template > div.svg #partner-title-svg").text(a),
						C(".template > div.svg #product-title-svg").text(r),
						C(".template > div.svg #behalf-svg").text(l),
						setTimeout(function () {
							L.svgTextMultiline(
								".template-result",
								"partner-desc-svg",
								e,
								i,
								s,
								n
							),
								L.svgTextMultiline(
									".template-result",
									"partner-title-svg",
									e,
									i,
									s,
									n
								),
								L.svgTextMultiline(
									".template-result",
									"product-title-svg",
									e,
									i,
									s,
									n
								),
								L.svgTextMultiline(
									".template-result",
									"behalf-svg",
									e,
									i,
									s,
									n
								);
						}, 1),
						"For Several Receivers" === t.type)
					) {
						const d = C("#for-several-receivers .temp"),
							c = d.clone(!0, !0).html();
						h(
							String(new Date().getTime()) + "123",
							themeVars.defaultText,
							c,
							!0
						),
							C("#for-several-receivers").after(
								C(document.createElement("button")).prop({
									type: "button",
									innerHTML: themeVars.add,
									class: "btn-add-default",
								})
							);
					}
				}),
					C(document).on("click", ".btn-add-default", function () {
						const t = C("#for-several-receivers .temp"),
							e = t.clone(!0, !0).html();
						h(String(new Date().getTime()) + "123", themeVars.defaultText, e);
					}),
					C(document).on("click", ".btn-remove-default", function (t) {
						let e = C(t.target);
						e.closest(".default-item-row").remove();
					}),
					C("#form-step3").submit((t) => {
						var e = L.getLocalStorageArr();
						if ((t.preventDefault(), "For Several Receivers" !== e.type)) {
							(t = document.getElementById("form-step3")),
								(e = C("#form-step3")
									.serializeArray()
									.reduce(
										(t, e) => (
											(t["current-msg"] = C(".current-m").attr("id")),
											e.name,
											(t[e.name] = e.value),
											t
										),
										{}
									));
							if (!L.validateFormFields(t)) {
								let t = C(".template > div.svg")
									.first()
									.find("svg")
									.clone(!0, !0);
								(t = L.svgAddImportantTags(t.get(0))),
									C(".template-result > div.svg").html(t),
									C('[data-steps-item="3"]').addClass("active"),
									C(".steps-list__item").removeClass("show-step"),
									C(".step4").addClass("show-step"),
									L.updateLocalStorage(4, "step"),
									L.updateLocalStorage(e, "forms", "form3");
							}
						}
					}),
					C("#form-step4").submit((t) => {
						var e = L.getLocalStorageArr();
						if (C("#now").prop("checked"))
							L.updateLocalStorage("now", "time_send");
						else {
							let t = C(".custom-date.custom-show");
							var i =
								t.val() +
								" " +
								t.attr("data-hour-value") +
								":" +
								t.attr("data-minute-value");
							L.updateLocalStorage(i, "time_send");
						}
						t.preventDefault(),
							"For One Receiver" === e.type &&
								(C(".payment-from").hide(),
								C(".loader-payment, .payment-from").addClass("loading"),
								(i = document.getElementById("form-step4")),
								(e = {
									receivers: [
										{
											id: "",
											"dispatch-time": (t = C("#form-step4")
												.serializeArray()
												.reduce(function (t, e) {
													return (t[e.name] = e.value), t;
												}, {}))["dispatch-time"],
											email: t["email-value"],
											sms: t["sms-value"],
											whatsapp: t["whatsapp-value"],
											template: "",
										},
									],
									"sender-name": t["sender-name"],
									"sender-phone": t["sender-phone"],
								}),
								L.validateFormCheckbox(i) &&
									!L.validateFormFields(i) &&
									(C(".steps-list__item").removeClass("show-step"),
									L.updateLocalStorage(5, "step"),
									L.banner.hide(),
									L.updateLocalStorage(e, "forms", "form4")),
								Gt(!0));
					});
			},
			clickMainPopup: () => {
				L.btnTrigger.on("click", (e) => {
					var t = L.getLocalStorageArr(),
						t =
							(C('#product-modal [data-modal="close"]').trigger("click"),
							C(".steps-list__item").removeClass("show-step"),
							C(".step" + e.target.getAttribute("data-step")).addClass(
								"show-step"
							),
							L.updateLocalStorage(
								"" + e.target.getAttribute("data-type"),
								"type"
							),
							L.updateLocalStorage(
								parseInt(e.target.getAttribute("data-step"), 10),
								"step"
							),
							C('[data-steps-item="2"]').addClass("active"),
							L.banner.find(".price").html(t.price),
							L.banner.find(".subtitle").html(t.title),
							C("#show-price").attr({ "data-price": t.price }),
							C(".js-svg-attr").attr({ "data-product-title": t.title }),
							"For Several Receivers" === e.target.getAttribute("data-type")
								? (C(".for-one").addClass("hidden-errors").hide(),
								  C(".for-several").removeClass("hidden-errors").show())
								: (C(".for-one").removeClass("hidden-errors").show(),
								  C(".for-several").addClass("hidden-errors").hide()),
							"5" !== e.target.getAttribute("data-step") &&
								L.banner.fadeIn(700),
							"5" === e.target.getAttribute("data-step") &&
								"For Me" === e.target.getAttribute("data-type") &&
								(C(".product-steps").hide(),
								C(".product-steps.for-me").fadeIn(500)),
							{
								action: "woocommerce_ajax_add_to_cart",
								product_id: L.getLocalStorageArr().id,
								product_sku: "",
								quantity: 1,
								variation_id: L.getLocalStorageArr().vId,
								donation: L.getLocalStorageArr().price,
								gift: L.getUrlParameter("gift"),
							});
					C.ajax({
						type: "post",
						url: themeVars.ajaxUrl,
						data: t,
						beforeSend: () => {
							C(".loader-payment, .payment-from").addClass("loading");
						},
						success: function (t) {
							"5" === e.target.getAttribute("data-step") &&
							"For Me" === e.target.getAttribute("data-type")
								? Gt()
								: (C(".payment-from").hide().html(t).fadeIn(300),
								  new jt(".js-tab-payment"),
								  new h(".c-modal", ".l-modal-container"),
								  L.paymentFieldsValidation(),
								  C(".js-add-tip").click(function () {
										const t = C(".l-checkout__total .is-add-tip-input");
										t.attr("disabled", !t.attr("disabled")),
											t.toggleClass("is-active"),
											C(this).addClass("d-none"),
											C(".js-add-tip-finish").addClass("d-block");
								  }),
								  C(".js-add-custom-price").click(function () {
										C('.c-modal.is-add-tip input[name="add-tip"]').prop(
											"checked",
											!1
										);
								  }));
						},
					});
				});
			},
			donationAmountValidate() {
				C(".donate-btn").on("click", function (t) {
					t.preventDefault();
					var e,
						t = parseInt(
							C(this).prev(".custom-price-wrap").find("input").val()
						),
						i = parseInt(
							C(this).prev(".custom-price-wrap").find("input").attr("min")
						);
					isNaN(t) || (0 === i && t <= i) || (0 < i && t < i)
						? C(".custom-price-wrap .error").addClass("show")
						: ((i = C(this).attr("data-title")),
						  (e = C(this).attr("data-vproduct-id")),
						  i && L.updateLocalStorage(i, "title"),
						  e && L.updateLocalStorage(e, "vId"),
						  L.updateLocalStorage(t, "price"),
						  C(".custom-price-wrap .error").removeClass("show"),
						  (L.getUrlParameter("gift")
								? C('.btn-step[data-type="For Me"]')
								: C(".js-trigger-modal.is-product-modal")
						  ).trigger("click"));
				});
			},
			loadMore() {
				C(".load-more").on("click", function (t) {
					t.preventDefault(),
						C(".product-step1__price-item").removeClass("hidden"),
						C(this).remove();
				});
			},
			initModal() {
				C(document).on("click", ".regular-price a", function (t) {
					t.preventDefault();
					var t = C(this).attr("data-title"),
						e = C(this).attr("data-vproduct-id"),
						i = C(this).attr("data-price");
					t && L.updateLocalStorage(t, "title"),
						e && L.updateLocalStorage(e, "vId"),
						i && L.updateLocalStorage(i, "price"),
						(L.getUrlParameter("gift")
							? C('.btn-step[data-type="For Me"]')
							: C('.js-trigger-modal[data-modal="#product-modal"]')
						).trigger("click");
				});
			},
			formatTabChange: () => {
				C(document).on("change", ".radiobutton-format", function () {
					var t = C(this).attr("name");
					C(".panel." + t).hide(), C(".panel." + C(this).val()).fadeIn(500);
				}),
					C(document).on("change", "#select-happening", function () {
						C(".select-panel").hide(),
							C(`.select-panel[data-select-value="${C(this).val()}"]`).fadeIn(
								500
							);
					}),
					C(document).on(
						"change",
						"input[type=radio][name=template-id]",
						function () {
							let t = C(".template > div.svg");
							var e = C(this).closest(".panel").attr("data-format");
							let i = C(this).closest(".item").find("svg").clone(!0, !0);
							(i = L.svgAddImportantTags(i.get(0))),
								t.attr("data-format", e),
								t.html(i);
						}
					);
				let t = C("input[type=radio][name=template-id]:checked")
					.siblings(".wrapper")
					.find("svg")
					.clone(!0, !0);
				(t = L.svgAddImportantTags(t.get(0))),
					0 < C("input[type=radio][name=template-id]:checked").length &&
						C(".template > div.svg").html(t);
			},
			switchCurrentTemplate: () => {
				var t = L.getLocalStorageArr().forms;
				null !== t.form2["template-id"] &&
					(1 <
					C("#" + t.form2["template-id"])
						.closest(".items")
						.find(".item").length
						? C(".switcher-btn").css({
								opacity: 1,
								pointerEvents: "auto",
								height: "auto",
						  })
						: C(".switcher-btn").css({
								opacity: 0,
								pointerEvents: "none",
								height: 0,
						  })),
					C(".switcher-btn").on("click", (s) => {
						s.preventDefault();
						s = L.getLocalStorageArr().forms;
						if (
							((C.fn.nextOrFirst = function (t) {
								var e = this.next(t);
								return e.length ? e : this.prevAll(t).last();
							}),
							null !== s.form2["template-id"])
						) {
							const r = C("#" + s.form2["template-id"]).closest(".item");
							let t = r.nextOrFirst(r);
							const l = s.form2;
							(l["template-id"] = t.find("[name=template-id]").attr("id")),
								L.updateLocalStorage(l, "forms", "form2");
							let e = C(".template > div.svg"),
								i = t.find("svg").clone(!0, !0);
							(i = L.svgAddImportantTags(i.get(0))),
								e.html(i),
								setTimeout(function () {
									"For Several Receivers" !== L.getLocalStorageArr().type &&
										C("form #receiver-name").trigger("input");
								}, 0),
								C("form #from-name").trigger("input"),
								C("form #show-price").trigger("change");
							var s = C(".js-svg-attr").attr("data-partner-desc"),
								n = C(".js-svg-attr").attr("data-partner-title"),
								o = C(".js-svg-attr").attr("data-product-title"),
								a = C(".js-svg-attr").attr("data-behalf-title");
							C(".template > div.svg #partner-desc-svg").text(s),
								C(".template > div.svg #partner-title-svg").text(n),
								C(".template > div.svg #product-title-svg").text(o),
								C(".template > div.svg #behalf-svg").text(a),
								setTimeout(function () {
									L.svgTextMultiline(".step3 .template", "partner-desc-svg"),
										L.svgTextMultiline(".step3 .template", "partner-title-svg"),
										L.svgTextMultiline(".step3 .template", "product-title-svg"),
										L.svgTextMultiline(".step3 .template", "behalf-svg");
								}, 1);
						}
					});
			},
			onChangeInputLister: () => {
				C("form #receiver-name").on("input", function (t) {
					const e = C(t.target);
					C(".template > div.svg #receiver-name-svg").text(e.val());
					var t = e.attr("data-x"),
						i = e.attr("data-y"),
						s = e.attr("data-color"),
						n = e.attr("data-font-size");
					L.svgTextMultiline(
						".step3 .template",
						"receiver-name-svg",
						t,
						i,
						s,
						n
					);
				}),
					C(document).on("input", "textarea.current-m", function (t) {
						const e = C(t.target);
						if (this.value.length > this.maxlength)
							return (
								e.text(e.val()),
								void (this.value = this.value.substring(0, this.maxlength))
							);
						C(".template > div.svg #message-svg").text(this.value);
						var t = e.attr("data-x"),
							i = e.attr("data-y"),
							s = e.attr("data-color"),
							n = e.attr("data-font-size");
						L.svgTextMultiline(".step3 .template", "message-svg", t, i, s, n);
					}),
					C("form #from-name").on("input", function (t) {
						const e = C(t.target);
						C(".template > div.svg #from-name-svg").text(e.val());
						var t = e.attr("data-x"),
							i = e.attr("data-y"),
							s = e.attr("data-color"),
							n = e.attr("data-font-size");
						L.svgTextMultiline(".step3 .template", "from-name-svg", t, i, s, n);
					}),
					C("form #show-price").on("change", function (t) {
						const e = C(t.target);
						var i, s, n;
						e.is(":checked")
							? (C(".template > div.svg #show-price-svg").text(
									e.attr("data-text") +
										e.attr("data-price") +
										e.attr("data-currency")
							  ),
							  (t = e.attr("data-x-p")),
							  (i = e.attr("data-y-p")),
							  (s = e.attr("data-color-p")),
							  (n = e.attr("data-font-size-p")),
							  L.svgTextMultiline(
									".step3 .template",
									"show-price-svg",
									t,
									i,
									s,
									n
							  ))
							: C(".template > div.svg #show-price-svg").text("");
					});
			},
			customSliderForTextarea: () => {
				function t(i, s) {
					let n = C("body .arrow-left"),
						o = C("body .arrow-right");
					var a = C("body .wrapper-textarea > textarea").length;
					let r = C(i).siblings("span.count").find("span.current"),
						l = C(i).parent("div").siblings("textarea.current-m");
					i = parseInt(l.data("textarea-order"));
					if ((s && i < a) || (!s && 1 <= i)) {
						let t = l.next("textarea"),
							e = i + 1;
						s || ((t = l.prev("textarea")), (e = i - 1)),
							l.hide().removeClass("current-m"),
							t.fadeIn(500).addClass("current-m"),
							Ut(t),
							t.trigger("input"),
							r.text(e),
							e === a && o.addClass("last"),
							e === a - 1 && o.removeClass("last"),
							1 < e && n.removeClass("last"),
							1 === e && n.addClass("last");
					}
				}
				C("body").on("click", ".arrow-right", function () {
					t(this, !0);
				}),
					C("body").on("click", ".arrow-left", function () {
						t(this, !1);
					});
			},
			defaultCard: () => {
				let t = C(".default-card .svg").first().find("svg").clone(!0, !0);
				(t = L.svgAddImportantTags(t.get(0))),
					C(".template-result > div.svg").html(t),
					C(".default-card .svg").remove(),
					L.updateLocalStorage("default", "template");
			},
			placeOrder: () => {
				C(document.body).on("click", "#place_order", function (t) {
					t.preventDefault();
					t = L.getLocalStorageArr();
					let e;
					e =
						"For Me" === t.type
							? ""
							: "default" === t.template
							? "default"
							: C(".template-result > div.svg").clone(!0, !0).html();
					var i,
						s,
						n,
						o = C(".product").hasClass("magic-gift"),
						a = { ...t.forms.form3, ...t.forms.form4 };
					L.paymentFieldsValidation(),
						C(".l-checkout").valid() &&
							((i = t.forms.form4.receivers),
							(s = t.forms.form4["sender-name"]),
							(n = t.forms.form4["sender-phone"]),
							C.ajax({
								type: "POST",
								url: themeVars.ajaxUrl,
								data: {
									action: "ajax_order",
									fields: C("form.checkout").serializeArray(),
									user_id: themeVars.userID,
									template: C.trim(e),
									steps_fields: a,
									magic_gift: o,
									amount: t.price,
									type_send: t.type,
									receivers: i,
									sender_name: s,
									sender_phone: n,
								},
								beforeSend: () => {
									C(".loader-payment, .payment-from").addClass("loading");
								},
								success: function (t) {
									t && "success" === t.status
										? (C(".error-payment-note").remove(),
										  (window.location.href = t.data.location))
										: (C(".error-payment-note").length ||
												C("#wc-officeguy-cc-form").append(
													'<p class="error-payment-note" style="color: red; padding: 10px; font-size: 18px;">Invalid card data or there is not enough money in your account</p>'
												),
										  C(".loader-payment, .payment-from").removeClass(
												"loading"
										  ));
								},
								error: function (t) {
									C(".loader-payment, .payment-from").removeClass("loading"),
										console.log(t);
								},
							}));
				});
			},
			fieldsSeveralReceivers: () => {
				var t = L.getLocalStorageArr();
				let n,
					r = 1;
				const i = document.getElementById("wrapper-receivers-buttons"),
					s = document.getElementById("wrapper-receivers-buttons-result"),
					o = String(new Date().getTime()),
					l =
						(C("#receivers").attr({ id: "receiver-" + o, "data-id": o }),
						C("#receivers-remove").attr("id", o),
						{
							"receiver-name": "",
							message: "",
							"from-name": "",
							"show-price": !(L.receivers = {}),
						});
				(L.receivers[o] = { ...l }), (L.receiversFirstId = o);
				C(document).on("click", ".panel-title", (t) => {
					const e = C(t.target);
					e.closest(".send-row")
						.toggleClass("open")
						.find(".panel-content")
						.slideToggle(500);
				});
				const d = (t) => {
						if (null !== i) {
							const e = document.createElement("button");
							e.setAttribute("id", "btn-toggle-receiver-" + t),
								e.setAttribute("class", "btn-receiver btn-receiver__hidden"),
								i.appendChild(e),
								e.addEventListener("click", () => p.call(null, t));
						}
					},
					c = (t) => {
						if (null !== s) {
							const e = document.createElement("button");
							e.setAttribute("id", "result-btn-toggle-receiver-" + t),
								e.setAttribute("class", "btn-receiver btn-receiver__hidden"),
								s.appendChild(e),
								e.addEventListener("click", () => p.call(null, t));
						}
					};
				const a = () => {
						(n = Object.keys(L.receivers)[0]), p(n);
					},
					h = (t, e, i) => {
						(L.receivers[t][e] = i), m(t, e, i);
					},
					u = (t, e) => {
						let i = C("#" + t);
						if ("receiver-name" === t) {
							C(`.template > div.svg #${t}-svg`).text(e);
							var s = i.attr("data-x"),
								n = i.attr("data-y"),
								o = i.attr("data-color"),
								a = i.attr("data-font-size");
							L.svgTextMultiline(".step3 .template", t + "-svg", s, n, o, a),
								L.svgTextMultiline(".template-result", t + "-svg", s, n, o, a);
						} else if ("from-name" === t) {
							C(`.template > div.svg #${t}-svg`).text(e);
							(s = i.attr("data-x")),
								(n = i.attr("data-y")),
								(o = i.attr("data-color")),
								(a = i.attr("data-font-size"));
							L.svgTextMultiline(".step3 .template", t + "-svg", s, n, o, a),
								L.svgTextMultiline(".template-result", t + "-svg", s, n, o, a);
						} else if ("show-price" === t) {
							const r = C("#" + t);
							e
								? (C(".template > div.svg #show-price-svg").text(
										r.attr("data-text") +
											r.attr("data-price") +
											r.attr("data-currency")
								  ),
								  (s = r.attr("data-x-p")),
								  r.attr("data-x-t"),
								  (n = r.attr("data-y-p")),
								  r.attr("data-y-t"),
								  (o = r.attr("data-color-p")),
								  r.attr("data-color-t"),
								  (a = r.attr("data-font-size-p")),
								  r.attr("data-font-size-t"),
								  L.svgTextMultiline(
										".step3 .template",
										"show-price-svg",
										s,
										n,
										o,
										a
								  ),
								  L.svgTextMultiline(
										".template-result",
										"show-price-svg",
										s,
										n,
										o,
										a
								  ))
								: C(".template > div.svg #show-price-svg").text("");
						} else
							"message" === t &&
								(C(
									".template:not(.template-result) > div.svg #message-svg"
								).text(e),
								C(".template-result > div.svg #message-svg").text(e),
								(s = i.attr("data-x")),
								(n = i.attr("data-y")),
								(o = i.attr("data-color")),
								(a = i.attr("data-font-size")),
								L.svgTextMultiline(
									".step3 .template",
									"message-svg",
									s,
									n,
									o,
									a
								),
								L.svgTextMultiline(
									".template-result",
									"message-svg",
									s,
									n,
									o,
									a
								));
					};
				const m = (t, e, i, s = !1) => {
						s || "receiver-name" !== e
							? u(e, i)
							: t === n && u("receiver-name", i);
					},
					g = (t, e) => {
						if ("receiver-name" !== t)
							if ("show-price" === t) {
								var i = e;
								const s = document.getElementById("show-price");
								s.checked = i;
							} else if ("message" !== t) {
								i = t;
								t = e;
								const n = document.getElementById(i);
								n.value = t;
							}
					},
					p = (t) => {
						var e;
						(e = t),
							C(".btn-receiver").removeClass("btn-receiver__active"),
							C("#btn-toggle-receiver-" + e).addClass("btn-receiver__active"),
							C("#result-btn-toggle-receiver-" + e).addClass(
								"btn-receiver__active"
							),
							(n = t),
							Object.entries(L.receivers[n]).forEach(([t, e]) => {
								"message" == t &&
									(e = C(".wrapper-textarea .current-m").text()),
									m(n, t, e),
									g(t, e);
							});
					},
					f =
						(d(o),
						c(o),
						C(document).on("click", "#add-button", () => {
							let n = r;
							if (n < 10) {
								var o = String(new Date().getTime());
								let t = { ...l },
									e =
										((t.message = L.receivers[L.receiversFirstId].message),
										(t["from-name"] =
											L.receivers[L.receiversFirstId]["from-name"]),
										(t["show-price"] =
											L.receivers[L.receiversFirstId]["show-price"]),
										(L.receivers[o] = t),
										d(o),
										c(o),
										C(".receivers-repeater > ol.list")),
									i = C(".receivers-repeater > .list > li").last(),
									s = i.clone(!0, !0).html();
								const a = e.append(`<li>${s}</li>`);
								a
									.find("li")
									.last()
									.find('input[type="text"]')
									.attr({ id: "receiver-" + o, "data-id": o }),
									a.find("li").last().find(".remove").attr("id", o),
									10 === ++n && C("#add-button").hide();
							}
							r = n;
						}),
						C(document).on("click", "button.remove", (t) => {
							var e = r,
								i = C(t.target).attr("id");
							if (1 !== e && o !== i) {
								const s = C(t.target);
								delete L.receivers[i],
									s.parent().remove(),
									C("#btn-toggle-receiver-" + i).remove(),
									C("#result-btn-toggle-receiver-" + i).remove(),
									i === n && a(),
									--e < 10 && C("#add-button").show(),
									(r = e);
							}
						}),
						0 < C("textarea.current-m").length && a(),
						C('.product-steps__item[data-steps-item="1"]').bind("click", () => {
							C("button.remove").trigger("click"),
								C(".receivers-input").val("").trigger("input"),
								C(".btn-receiver").addClass("btn-receiver__hidden").text("");
						}),
						C(document).on("input", ".receivers-input", (t) => {
							const e = C(t.target);
							h.call(null, e.attr("data-id"), "receiver-name", e.val()),
								"" !== e.val()
									? (C("#btn-toggle-" + e.attr("id"))
											.removeClass("btn-receiver__hidden")
											.text(e.val()),
									  C("#result-btn-toggle-" + e.attr("id"))
											.removeClass("btn-receiver__hidden")
											.text(e.val()))
									: (C("#btn-toggle-" + e.attr("id"))
											.addClass("btn-receiver__hidden")
											.text(e.val()),
									  C("#result-btn-toggle-" + e.attr("id"))
											.addClass("btn-receiver__hidden")
											.text(e.val()));
						}),
						C(document).on("input", "textarea.current-m", function (t) {
							const e = C(t.target);
							if (this.value.length > this.maxlength)
								return (
									e.text(e.val()),
									void (this.value = this.value.substring(0, this.maxlength))
								);
							h.call(null, n, "message", this.value);
						}),
						C(".switcher-btn").bind("click", function () {
							a();
						}),
						C(window).on("load", function () {
							0 < C("textarea.current-m").length &&
								C("textarea.current-m").first().trigger("input");
						}),
						C(".arrow-left").on("click", function () {
							C("textarea.current-m").trigger("input");
						}),
						C(".arrow-right").on("click", function () {
							C("textarea.current-m").trigger("input");
						}),
						C("form #from-name").on("input", function (t) {
							const e = C(t.target);
							for (var i in L.receivers) h.call(null, i, "from-name", e.val());
						}),
						C("form #show-price").on("change", function (t) {
							t = t.target;
							h.call(null, n, "show-price", t.checked);
						}),
						(t) => {
							if (void 0 !== t) {
								const e = C("#for-several-receivers .temp"),
									l = e.clone(!0, !0).html(),
									i = (C(".new-item").remove(), []);
								C.each(t, function (t, e) {
									i.push({ id: t, ...e });
								});
								let r = !0;
								i.forEach((t, e) => {
									if ("" !== t["receiver-name"]) {
										{
											var [i, t, s, n = !1] = [t.id, t["receiver-name"], l, r];
											C("#for-several-receivers").append(
												`<div class="send-row new-item 2222" data-id="${i}">${s}</div>`
											);
											const o = C(`[data-id="${i}"]`);
											if (
												(o.find(".title").text(t),
												o.find('[id="email-id"]').attr("id", "email-id-" + i),
												o.find('[for="email-id"]').attr("for", "email-id-" + i),
												o
													.find('[name="email-value-id"]')
													.attr("name", "email-value-id-" + i),
												o.find('[id="sms-id"]').attr("id", "sms-id-" + i),
												o.find('[for="sms-id"]').attr("for", "sms-id-" + i),
												o
													.find('[name="sms-value-id"]')
													.attr("name", "sms-value-id-" + i)
													.each(function () {
														b(this);
													}),
												o
													.find('[id="whatsapp-id"]')
													.attr("id", "whatsapp-id-" + i),
												o
													.find('[for="whatsapp-id"]')
													.attr("for", "whatsapp-id-" + i),
												o
													.find('[name="whatsapp-value-id"]')
													.attr("name", "whatsapp-value-id-" + i)
													.each(function () {
														b(this);
													}),
												o.find('[id="now-id"]').attr("id", "now-id-" + i),
												o.find('[for="now-id"]').attr("for", "now-id-" + i),
												o.find('[id="date-id"]').attr("id", "date-id-" + i),
												o.find('[for="date-id"]').attr("for", "date-id-" + i),
												o
													.find('[name="dispatch-time-id"]')
													.attr("name", "dispatch-time-id-" + i),
												o.find(".datapicker").addClass("datapicker-" + i),
												C(".datapicker-" + i).length)
											) {
												const a = At()(".datapicker-" + i, {
													showAllDates: !0,
													customDays: S,
													customMonths: _,
													onSelect: (t, e) => {
														C("#date-id-" + i).val($t(e, "mm/dd/yyyy"));
													},
												});
												a.setMin(new Date());
											}
											n && o.find(".panel-title").trigger("click");
										}
										r = !1;
									}
								});
							}
						});
				C("#form-step3").submit((e) => {
					var i = L.getLocalStorageArr();
					if ((e.preventDefault(), "For Several Receivers" === i.type)) {
						(i = {
							receivers: L.receivers,
							"from-name": e.target.querySelector("#from-name").value,
						}),
							(e = document.getElementById("form-step3"));
						if (!L.validateFormFields(e)) {
							C('[data-steps-item="3"]').addClass("active"),
								C(".steps-list__item").removeClass("show-step"),
								C(".step4").addClass("show-step"),
								L.updateLocalStorage(4, "step"),
								L.updateLocalStorage(i, "forms", "form3");
							let t = C(".template > div.svg")
								.first()
								.find("svg")
								.clone(!0, !0);
							(t = L.svgAddImportantTags(t.get(0))),
								C(".template-result > div.svg").html(t);
							e = L.getLocalStorageArr();
							f(e.forms.form3.receivers);
						}
					}
				}),
					C("#form-step4").submit((t) => {
						if (
							(t.preventDefault(),
							"For Several Receivers" === L.getLocalStorageArr().type)
						) {
							t = document.getElementById("form-step4");
							const s = C("#form-step4")
								.serializeArray()
								.reduce(function (t, e) {
									return (t[e.name] = e.value), t;
								}, {});
							let e = L.getLocalStorageArr().forms.form3.receivers;
							const n = {
								receivers: [],
								"sender-name": s["sender-name"],
								"sender-phone": s["sender-phone"],
							};
							void 0 !== e
								? Object.entries(e).map(([i]) => {
										Object.entries(L.receivers[i]).forEach(async ([t, e]) => {
											await m(i, t, e, !0);
										});
										var t = {
											id: i,
											"dispatch-time": s["dispatch-time-id-" + i],
											email: s["email-value-id-" + i],
											sms: s["sms-value-id-" + i],
											whatsapp: s["whatsapp-value-id-" + i],
											template: C.trim(
												C(".template-result > div.svg").clone(!0, !0).html()
											),
										};
										n.receivers.push(t);
								  })
								: ((e = []),
								  C(".default-item-row").each(function () {
										var t = C(this).attr("data-id");
										e.push(t);
								  }),
								  Object.entries(e).map(([, t]) => {
										t = {
											id: t,
											"dispatch-time": s["dispatch-time-id-" + t],
											email: s["email-value-id-" + t],
											sms: s["sms-value-id-" + t],
											whatsapp: s["whatsapp-value-id-" + t],
										};
										n.receivers.push(t);
								  })),
								L.validateFormCheckboxRows() ||
									L.validateFormFields(t) ||
									(C(".steps-list__item").removeClass("show-step"),
									L.updateLocalStorage(5, "step"),
									L.banner.hide(),
									L.updateLocalStorage(n, "forms", "form4")),
								Gt(!0);
						}
					}),
					f(t.forms.form3.receivers);
			},
			addTip: () => {
				C("body").on("click", ".js-add-tip-finish", function () {
					var t = [
							{ name: "custom_price", value: C(".is-add-tip-input").val() },
						],
						t = {
							action: "woocommerce_ajax_add_to_cart",
							product_id: L.getLocalStorageArr().id,
							product_sku: "",
							quantity: 1,
							variation_id: L.getLocalStorageArr().vId,
							donation: L.getLocalStorageArr().price,
							tip: t,
							gift: L.getUrlParameter("gift"),
						};
					0 < C(".is-add-tip-input").val() &&
						C.ajax({
							type: "post",
							url: themeVars.ajaxUrl,
							data: t,
							beforeSend: () => {
								C(".payment-from").hide(),
									C(".loader-payment, .payment-from").addClass("loading");
							},
							success: function (t) {
								C(".payment-from").hide().html(t).fadeIn(300),
									C(".loader-payment, .payment-from").removeClass("loading"),
									new jt(".js-tab-payment"),
									new h(".c-modal", ".l-modal-container"),
									L.paymentFieldsValidation(),
									C(".js-add-tip").click(function () {
										const t = C(".l-checkout__total .is-add-tip-input");
										t.attr("disabled", !t.attr("disabled")),
											t.toggleClass("is-active"),
											C(this).addClass("d-none"),
											C(".js-add-tip-finish").addClass("d-block");
									}),
									C(".js-add-custom-price").click(function () {
										C('.c-modal.is-add-tip input[name="add-tip"]').prop(
											"checked",
											!1
										);
									});
							},
						});
				}),
					C("#tip-form").submit((t) => {
						t.preventDefault();
						let e = C(t.target).serializeArray();
						let i;
						e.forEach((t, e) => {
							"add-tip" == t.name &&
								"" != t.value &&
								(i = Math.round(
									(L.getLocalStorageArr().price / 100) * t.value
								)),
								"custom_price" == t.name && "" != t.value && (i = t.value);
						});
						var s = [{ name: "custom_price", value: i }],
							s = {
								action: "woocommerce_ajax_add_to_cart",
								product_id: L.getLocalStorageArr().id,
								product_sku: "",
								quantity: 1,
								variation_id: L.getLocalStorageArr().vId,
								donation: L.getLocalStorageArr().price,
								tip: s,
								gift: L.getUrlParameter("gift"),
							};
						C.ajax({
							type: "post",
							url: themeVars.ajaxUrl,
							data: s,
							beforeSend: () => {
								C(t.target).trigger("reset"),
									C(t.target)
										.closest("#add-tip")
										.find(".c-modal__close")
										.trigger("click"),
									C(".payment-from").hide(),
									C(".loader-payment, .payment-from").addClass("loading");
							},
							success: function (t) {
								C(".payment-from").hide().html(t).fadeIn(300),
									C(".loader-payment, .payment-from").removeClass("loading"),
									new jt(".js-tab-payment"),
									new h(".c-modal", ".l-modal-container"),
									L.paymentFieldsValidation(),
									C(".js-add-tip").click(function () {
										const t = C(".l-checkout__total .is-add-tip-input");
										t.attr("disabled", !t.attr("disabled")),
											t.toggleClass("is-active"),
											C(this).addClass("d-none"),
											C(".js-add-tip-finish").addClass("d-block");
									}),
									C(".js-add-custom-price").click(function () {
										C('.c-modal.is-add-tip input[name="add-tip"]').prop(
											"checked",
											!1
										);
									});
							},
						});
					});
			},
			init: () => {
				var t = C("[data-product-id]").attr("data-product-id"),
					t =
						(themeVars.isProduct &&
							(t && L.setLocalStorage(L.state, t),
							L.updateLocalStorage(t, "id"),
							L.updateLocalStorage(1, "step"),
							L.updateLocalStorage({}, "forms", "form2"),
							L.updateLocalStorage({}, "forms", "form3"),
							L.updateLocalStorage({}, "forms", "form4"),
							L.updateLocalStorage("", "template"),
							L.updateLocalStorage("", "type"),
							L.updateLocalStorage("", "vId"),
							L.updateLocalStorage(
								document.querySelector("html").lang,
								"lang"
							)),
						L.getLocalStorageArr());
				if (
					(L.svgChangeIds(),
					L.formatTabChange(),
					L.customSliderForTextarea(),
					L.switchCurrentTemplate(),
					L.onChangeInputLister(),
					L.addTip(),
					"For Several Receivers" === t.type
						? (C(".for-one").addClass("hidden-errors").hide(),
						  C(".for-several").removeClass("hidden-errors").show())
						: (C(".for-one").removeClass("hidden-errors").show(),
						  C(".for-several").addClass("hidden-errors").hide()),
					L.fieldsSeveralReceivers(),
					C(".step1").fadeIn(500),
					L.onStepsClick(),
					L.timepickerChanger(),
					L.onclickFromSubmit(),
					L.donationAmountValidate(),
					L.loadMore(),
					L.initModal(),
					L.showChangeCheckbox(),
					L.clickMainPopup(),
					"default" === t.template && L.defaultCard(),
					C(".datapicker-for-one").length)
				) {
					const e = At()(".datapicker-for-one", {
						showAllDates: !0,
						customDays: S,
						customMonths: _,
						onSelect: (t, e) => {
							C("#date").val($t(e, "mm/dd/yyyy"));
						},
					});
					e.setMin(new Date());
				}
			},
			getUrlParameter: (t) => {
				for (
					var e, i = window.location.search.substring(1).split("&"), s = 0;
					s < i.length;
					s++
				)
					if ((e = i[s].split("="))[0] === t)
						return void 0 === e[1] || decodeURIComponent(e[1]);
				return !1;
			},
			svgTextMultiline: (
				h,
				u,
				n = "50",
				o = "",
				m = "",
				g = "",
				p = "middle",
				f = '"Rubik", sans-serif'
			) => {
				const v = document.querySelector(h + " > .svg > svg");
				if (null !== v) {
					let a = n;
					n = o || 0;
					let i = v.clientWidth / 1.2,
						t = v.getAttribute("viewBox");
					o = t.split(/\s+|,/);
					const _ = (o[2] / o[3]).toFixed(1),
						L = document.querySelector(h + " > .svg > svg #" + u);
					var o = L.getAttribute("font-size"),
						y = L.getAttribute("y"),
						b = L.getAttribute("fill");
					let r = o || g;
					o = b || m;
					let e = "0%" !== y ? y : n + "%",
						l = r || 15,
						s =
							(r && (L.style.fontSize = r),
							o && (L.style.fill = o),
							p && (L.style.textAnchor = p),
							f && (L.style.fontFamily = f),
							e && L.setAttribute("y", e),
							("message-svg" !== u && "partner-desc-svg" !== u) ||
								(L.style.opacity = "0"),
							L.innerHTML);
					var w = (s = (s = s.replace(/(<([^>]+)>)/gi, "")).replace(
						"  ",
						" "
					)).split(" ");
					const el = document.createElementNS("http://www.w3.org/2000/svg", "text");
					el.setAttribute('font-size', L.getAttribute("font-size"));
					let d = "",
						c =
							(("message-svg" !== u && "partner-desc-svg" !== u) ||
								((i =
									"message-svg" === u
										? v.clientWidth / 1.2
										: v.clientWidth / 1.15),
								(l = 4 < r && r < 6 ? 7 : 1.4 * r)),
								(v.querySelector('g').append(el)),
							// (v.querySelector('g').innerHTML += '<text id="temp" font-size=' + L.getAttribute("font-size") + '></text >'),
							(L.innerHTML = ''),
							[]);
					for (let e = 0; e < w.length; e++) {
						var x = d + w[e] + " ";
						let t = el;
						t.innerHTML = x;
						var C = t.getBoundingClientRect().width + 50;
						if (u !== "partner-desc-svg" && u !== "message-svg") {
							console.log('---')
							console.log(el);
							console.log(L);
							console.log(i);
							console.log(x);
							console.log(C);
							console.log('!!!');
						}
						d =
							C > i && 0 < e
								? ((L.innerHTML +=
										'<tspan x="' + a + '%" dy="' + l + '">' + d + '</tspan><!-- left-to right mark --><tspan dx="-0.5em" class="br">&#x200E;</tspan>'),

								  ("message-svg" !== u && "partner-desc-svg" !== u) ||
										c.push(d),
								  w[e] + " ")
								: x;
					}
					function S(n = 2.8, o = 3.8) {
						setTimeout(() => {
							c.push(d),
								document
									.querySelectorAll(h + " > .svg > svg .multiline-text-" + u)
									.forEach((t) => t.remove());
							var i = Number(e.slice(0, -1));
							for (
								let e = 0;
								e < c.length && !("partner-desc-svg" === u && 6 <= e);
								e++
							) {
								let t = i + e * n + "%";
								var s =
									'<text x="50%" y="' +
									(t = 1.3 < _ && _ < 1.5 ? i + e * o + "%" : t) +
									'" fill="#000000" font-size="' +
									r +
									'" dominant-baseline="middle" text-anchor="middle" class="multiline-text-' +
									u +
									'"><tspan x="' +
									a +
									'%" dy="' +
									l +
									'">' +
									c[e] +
									"</tspan> </text>";
								v.innerHTML += s;
							}
						}, 10);
					}
					"partner-desc-svg" === u ? S(3.2) : "message-svg" === u && S(3.1),
						(L.innerHTML +=
							'<tspan x="' + a + '%" dy="' + l + '">' + d + "</tspan>"),
						el.remove();
				}
			},
		};
		async function Gt(t = !1) {
			var e = localStorage.getItem("localState");
			const i = JSON.parse(e);
			if (t) {
				let e = !1;
				if (
					(i.forms.form4.receivers &&
						((e = !0),
						i.forms.form4.receivers.forEach((t) => {
							t.email || t.sms || t.whatsapp || (e = !1);
						})),
					!e)
				)
					return;
			}
			C(".l-checkout").css("display", "none"),
				C(".steps-list__item.step5").addClass("show-step"),
				C(".loader-payment, .payment-from").addClass("loading"),
				"default1" !== i.template &&
					L.updateLocalStorage(
						C(".template-result > div.svg").clone(!0, !0).html(),
						"template"
					),
				L.updateLocalStorage(
					C(".product").hasClass("magic-gift"),
					"productType"
				),
				"For Several Receivers" == i.type
					? C.ajax({
							type: "post",
							url: themeVars.ajaxUrl,
							data: {
								action: "update_cart_quantity",
								receiversQuantity: i.forms.form4.receivers.length,
							},
							success: function (t) {
								window.location = themeVars.checkoutPage;
							},
					  })
					: (window.location = themeVars.checkoutPage + window.location.search);
		}
		themeVars.isProduct && L.init();
		const Wt = document.querySelectorAll(
			".woocommerce-checkout .product-steps"
		);
		Wt.length &&
			"For Me" == L.getLocalStorageArr().type &&
			((Wt[0].style.display = "none"), (Wt[1].style.display = "flex"));
		e(7), e(8), e(9), e(10), e(11);
		const u = window.jQuery;
		var Yt = () => {
				u("select.custom").each(function (t, i) {
					if (!u(this).next().hasClass("dropdown")) {
						u(this).after(
							'<div class="dropdown ' +
								(u(this).attr("class") || "") +
								'" tabindex="0"><span class="current"></span><div class="list"><ul class="select-list"></ul></div></div>'
						);
						let s = u(this).next(),
							t = u(i).find("option"),
							e = u(this).find("option:selected");
						s.find(".current").html(e.data("display-text") || e.text()),
							t.each(function (t, e) {
								var i = u(e).data("display-text") || "";
								s.find("ul").append(
									'<li class="option ' +
										(u(e).is(":selected") ? "selected" : "") +
										'" data-value="' +
										u(e).val() +
										'" data-display-text="' +
										i +
										'">' +
										u(e).text() +
										"</li>"
								);
							});
					}
				}),
					u(document).on("click", ".dropdown", function () {
						u(".dropdown").not(u(this)).removeClass("open"),
							u(this).toggleClass("open"),
							u(this).hasClass("open")
								? (u(this).find(".option").attr("tabindex", 0),
								  u(this).find(".selected").focus())
								: (u(this).find(".option").removeAttr("tabindex"),
								  u(this).focus());
					}),
					u(document).on("click", function (t) {
						0 === u(t.target).closest(".dropdown").length &&
							(u(".dropdown").removeClass("open"),
							u(".dropdown .option").removeAttr("tabindex")),
							t.stopPropagation();
					}),
					u(document).on("click", ".dropdown .option", function () {
						u(this).closest(".list").find(".selected").removeClass("selected"),
							u(this).addClass("selected");
						var t = u(this).data("display-text") || u(this).text();
						u(this).closest(".dropdown").find(".current").text(t),
							u(this)
								.closest(".dropdown")
								.prev("select")
								.val(u(this).data("value"))
								.trigger("change");
					}),
					u(document).on("keydown", ".dropdown", function (t) {
						let e = u(
							u(this).find(".list .option:focus")[0] ||
								u(this).find(".list .option.selected")[0]
						);
						if (32 === t.keyCode || 13 === t.keyCode)
							return (
								(u(this).hasClass("open") ? e : u(this)).trigger("click"), !1
							);
						if (40 === t.keyCode)
							return (
								u(this).hasClass("open")
									? e.next().focus()
									: u(this).trigger("click"),
								!1
							);
						if (38 !== t.keyCode)
							return 27 === t.keyCode
								? (u(this).hasClass("open") && u(this).trigger("click"), !1)
								: void 0;
						if (u(this).hasClass("open")) {
							let t = u(
								u(this).find(".list .option:focus")[0] ||
									u(this).find(".list .option.selected")[0]
							);
							t.prev().focus();
						} else u(this).trigger("click");
						return !1;
					});
			},
			Xt = () => {
				jQuery(document).ready(function (o) {
					o("body").on("click", ".gifts__image .favorites", function (t) {
						t.preventDefault(), t.stopPropagation();
						let e = o(this).closest(".gifts__image").data("id"),
							i = o(this).hasClass("active"),
							s = o(this),
							n = { action: "wishlist", id: e, add: !i };
						o.ajax({
							url: themeVars.ajaxUrl,
							data: n,
							type: "POST",
							beforeSend: () => {
								s.addClass("waiting");
							},
							success: (t) => {
								i ? s.removeClass("active") : s.addClass("active"),
									s.removeClass("waiting");
							},
						});
					});
				});
			},
			Zt = () => {
				jQuery(document).ready(function (e) {
					e(".woocommerce-MyAccount-navigation .active-tab a").on(
						"click",
						function (t) {
							t.preventDefault(),
								e(this).closest(".active-tab").siblings(".other").slideToggle(),
								e(this).closest(".mobile").toggleClass("open");
						}
					);
				});
			};
		e(12), e(13);
		function m(t) {
			return (
				!!(
					t &&
					"object" == typeof t &&
					t instanceof Element &&
					t !== document.body
				) &&
				!t.__Panzoom &&
				((e = t),
				(i = getComputedStyle(e)["overflow-y"]),
				(s = getComputedStyle(e)["overflow-x"]),
				(i =
					("scroll" === i || "auto" === i) &&
					1 < Math.abs(e.scrollHeight - e.clientHeight)),
				(s =
					("scroll" === s || "auto" === s) &&
					1 < Math.abs(e.scrollWidth - e.clientWidth)),
				i || s ? t : m(t.parentNode))
			);
			var e, i, s;
		}
		const g = (t) =>
				"object" == typeof t &&
				null !== t &&
				t.constructor === Object &&
				"[object Object]" === Object.prototype.toString.call(t),
			p = (...t) => {
				let e = !1,
					i = ("boolean" == typeof t[0] && (e = t.shift()), t[0]);
				if (!i || "object" != typeof i)
					throw new Error("extendee must be an object");
				const s = t.slice(1),
					n = s.length;
				for (let t = 0; t < n; t++) {
					const n = s[t];
					for (var o in n)
						if (n.hasOwnProperty(o)) {
							const s = n[o];
							if (e && (Array.isArray(s) || g(s))) {
								const g = Array.isArray(s) ? [] : {};
								i[o] = p(!0, i.hasOwnProperty(o) ? i[o] : g, s);
							} else i[o] = s;
						}
				}
				return i;
			},
			I = (t, e = 1e4) => (
				(t = parseFloat(t) || 0), Math.round((t + Number.EPSILON) * e) / e
			),
			Kt =
				("undefined" != typeof window && window.ResizeObserver) ||
				class {
					constructor(t) {
						(this.observables = []),
							(this.boundCheck = this.check.bind(this)),
							this.boundCheck(),
							(this.callback = t);
					}
					observe(e) {
						var t;
						this.observables.some((t) => t.el === e) ||
							((t = {
								el: e,
								size: { height: e.clientHeight, width: e.clientWidth },
							}),
							this.observables.push(t));
					}
					unobserve(e) {
						this.observables = this.observables.filter((t) => t.el !== e);
					}
					disconnect() {
						this.observables = [];
					}
					check() {
						var t = this.observables
							.filter((t) => {
								var e = t.el.clientHeight,
									i = t.el.clientWidth;
								if (t.size.height !== e || t.size.width !== i)
									return (t.size.height = e), (t.size.width = i), !0;
							})
							.map((t) => t.el);
						0 < t.length && this.callback(t),
							window.requestAnimationFrame(this.boundCheck);
					}
				};
		class f {
			constructor(t) {
				(this.id = self.Touch && t instanceof Touch ? t.identifier : -1),
					(this.pageX = t.pageX),
					(this.pageY = t.pageY),
					(this.clientX = t.clientX),
					(this.clientY = t.clientY);
			}
		}
		const E = (t, e) =>
				e
					? Math.sqrt(
							(e.clientX - t.clientX) ** 2 + (e.clientY - t.clientY) ** 2
					  )
					: 0,
			Jt = (t, e) =>
				e
					? {
							clientX: (t.clientX + e.clientX) / 2,
							clientY: (t.clientY + e.clientY) / 2,
					  }
					: t;
		class Qt {
			constructor(
				t,
				{ start: e = () => !0, move: i = () => {}, end: s = () => {} } = {}
			) {
				(this._element = t),
					(this.startPointers = []),
					(this.currentPointers = []),
					(this._pointerStart = (t) => {
						if (!(0 < t.buttons && 0 !== t.button)) {
							const e = new f(t);
							this.currentPointers.some((t) => t.id === e.id) ||
								(this._triggerPointerStart(e, t) &&
									(window.addEventListener("mousemove", this._move),
									window.addEventListener("mouseup", this._pointerEnd)));
						}
					}),
					(this._touchStart = (t) => {
						for (const e of Array.from(t.changedTouches || []))
							this._triggerPointerStart(new f(e), t);
					}),
					(this._move = (e) => {
						const t = this.currentPointers.slice(),
							i =
								"changedTouches" in e
									? Array.from(e.changedTouches).map((t) => new f(t))
									: [new f(e)];
						for (const e of i) {
							const t = this.currentPointers.findIndex((t) => t.id === e.id);
							t < 0 || (this.currentPointers[t] = e);
						}
						this._moveCallback(t, this.currentPointers.slice(), e);
					}),
					(this._triggerPointerEnd = (e, t) => {
						var i = this.currentPointers.findIndex((t) => t.id === e.id);
						return !(
							i < 0 ||
							(this.currentPointers.splice(i, 1),
							this.startPointers.splice(i, 1),
							this._endCallback(e, t),
							0)
						);
					}),
					(this._pointerEnd = (t) => {
						(0 < t.buttons && 0 !== t.button) ||
							(this._triggerPointerEnd(new f(t), t) &&
								(window.removeEventListener("mousemove", this._move, {
									passive: !1,
								}),
								window.removeEventListener("mouseup", this._pointerEnd, {
									passive: !1,
								})));
					}),
					(this._touchEnd = (t) => {
						for (const e of Array.from(t.changedTouches || []))
							this._triggerPointerEnd(new f(e), t);
					}),
					(this._startCallback = e),
					(this._moveCallback = i),
					(this._endCallback = s),
					this._element.addEventListener("mousedown", this._pointerStart, {
						passive: !1,
					}),
					this._element.addEventListener("touchstart", this._touchStart, {
						passive: !1,
					}),
					this._element.addEventListener("touchmove", this._move, {
						passive: !1,
					}),
					this._element.addEventListener("touchend", this._touchEnd),
					this._element.addEventListener("touchcancel", this._touchEnd);
			}
			stop() {
				this._element.removeEventListener("mousedown", this._pointerStart, {
					passive: !1,
				}),
					this._element.removeEventListener("touchstart", this._touchStart, {
						passive: !1,
					}),
					this._element.removeEventListener("touchmove", this._move, {
						passive: !1,
					}),
					this._element.removeEventListener("touchend", this._touchEnd),
					this._element.removeEventListener("touchcancel", this._touchEnd),
					window.removeEventListener("mousemove", this._move),
					window.removeEventListener("mouseup", this._pointerEnd);
			}
			_triggerPointerStart(t, e) {
				return (
					!!this._startCallback(t, e) &&
					(this.currentPointers.push(t), this.startPointers.push(t), !0)
				);
			}
		}
		class te {
			constructor(t = {}) {
				(this.options = p(!0, {}, t)), (this.plugins = []), (this.events = {});
				for (const t of ["on", "once"])
					for (const e of Object.entries(this.options[t] || {})) this[t](...e);
			}
			option(t, e, ...i) {
				(t = t = String(t)), (n = this.options);
				let s = t.split(".").reduce(function (t, e) {
					return t && t[e];
				}, n);
				var n;
				return void 0 ===
					(s = "function" == typeof s ? s.call(this, this, ...i) : s)
					? e
					: s;
			}
			localize(t, n = []) {
				return (t = String(t).replace(/\{\{(\w+).?(\w+)?\}\}/g, (t, e, i) => {
					let s = "";
					i
						? (s = this.option(
								e[0] + e.toLowerCase().substring(1) + ".l10n." + i
						  ))
						: e && (s = this.option("l10n." + e)),
						(s = s || t);
					for (let t = 0; t < n.length; t++) s = s.split(n[t][0]).join(n[t][1]);
					return s;
				})).replace(/\{\{(.*)\}\}/, (t, e) => e);
			}
			on(t, i) {
				if (g(t)) {
					for (const g of Object.entries(t)) this.on(...g);
					return this;
				}
				return (
					String(t)
						.split(" ")
						.forEach((t) => {
							const e = (this.events[t] = this.events[t] || []);
							-1 == e.indexOf(i) && e.push(i);
						}),
					this
				);
			}
			once(t, s) {
				if (g(t)) {
					for (const g of Object.entries(t)) this.once(...g);
					return this;
				}
				return (
					String(t)
						.split(" ")
						.forEach((e) => {
							const i = (...t) => {
								this.off(e, i), s.call(this, this, ...t);
							};
							(i._ = s), this.on(e, i);
						}),
					this
				);
			}
			off(t, o) {
				if (!g(t))
					return (
						t.split(" ").forEach((t) => {
							const i = this.events[t];
							if (!i || !i.length) return this;
							let s = -1;
							for (let t = 0, e = i.length; t < e; t++) {
								var n = i[t];
								if (n && (n === o || n._ === o)) {
									s = t;
									break;
								}
							}
							-1 != s && i.splice(s, 1);
						}),
						this
					);
				for (const g of Object.entries(t)) this.off(...g);
			}
			trigger(t, ...e) {
				for (const i of [...(this.events[t] || [])].slice())
					if (i && !1 === i.call(this, this, ...e)) return !1;
				for (const s of [...(this.events["*"] || [])].slice())
					if (s && !1 === s.call(this, t, this, ...e)) return !1;
				return !0;
			}
			attachPlugins(t) {
				const e = {};
				for (var [i, s] of Object.entries(t || {}))
					!1 === this.options[i] ||
						this.plugins[i] ||
						((this.options[i] = p({}, s.defaults || {}, this.options[i])),
						(e[i] = new s(this)));
				for (const [t, n] of Object.entries(e)) n.attach(this);
				return (this.plugins = Object.assign({}, this.plugins, e)), this;
			}
			detachPlugins() {
				for (const e in this.plugins) {
					let t;
					(t = this.plugins[e]) &&
						"function" == typeof t.detach &&
						t.detach(this);
				}
				return (this.plugins = {}), this;
			}
		}
		const ee = {
			touch: !0,
			zoom: !0,
			pinchToZoom: !0,
			panOnlyZoomed: !1,
			lockAxis: !1,
			friction: 0.64,
			decelFriction: 0.88,
			zoomFriction: 0.74,
			bounceForce: 0.2,
			baseScale: 1,
			minScale: 1,
			maxScale: 2,
			step: 0.5,
			textSelection: !1,
			click: "toggleZoom",
			wheel: "zoom",
			wheelFactor: 42,
			wheelLimit: 5,
			draggableClass: "is-draggable",
			draggingClass: "is-dragging",
			ratio: 1,
		};
		class k extends te {
			constructor(t, e = {}) {
				super(p(!0, {}, ee, e)), (this.state = "init"), (this.$container = t);
				for (const t of ["onLoad", "onWheel", "onClick"])
					this[t] = this[t].bind(this);
				this.initLayout(),
					this.resetValues(),
					this.attachPlugins(k.Plugins),
					this.trigger("init"),
					this.updateMetrics(),
					this.attachEvents(),
					this.trigger("ready"),
					!1 === this.option("centerOnStart")
						? (this.state = "ready")
						: this.panTo({ friction: 0 }),
					(t.__Panzoom = this);
			}
			initLayout() {
				const t = this.$container;
				if (!(t instanceof HTMLElement))
					throw new Error("Panzoom: Container not found");
				var e = this.option("content") || t.querySelector(".panzoom__content");
				if (!e) throw new Error("Panzoom: Content not found");
				this.$content = e;
				let i =
					this.option("viewport") || t.querySelector(".panzoom__viewport");
				i ||
					!1 === this.option("wrapInner") ||
					((i = document.createElement("div")).classList.add(
						"panzoom__viewport"
					),
					i.append(...t.childNodes),
					t.appendChild(i)),
					(this.$viewport = i || e.parentNode);
			}
			resetValues() {
				(this.updateRate = this.option(
					"updateRate",
					/iPhone|iPad|iPod|Android/i.test(navigator.userAgent) ? 250 : 24
				)),
					(this.container = { width: 0, height: 0 }),
					(this.viewport = { width: 0, height: 0 }),
					(this.content = {
						origWidth: 0,
						origHeight: 0,
						width: 0,
						height: 0,
						x: this.option("x", 0),
						y: this.option("y", 0),
						scale: this.option("baseScale"),
					}),
					(this.transform = { x: 0, y: 0, scale: 1 }),
					this.resetDragPosition();
			}
			onLoad(t) {
				this.updateMetrics(),
					this.panTo({ scale: this.option("baseScale"), friction: 0 }),
					this.trigger("load", t);
			}
			onClick(t) {
				if (!t.defaultPrevented) {
					var e;
					if (
						!this.option("textSelection") ||
						!window.getSelection().toString().length
					)
						return (
							(e = this.$content.getClientRects()[0]),
							"ready" !== this.state &&
							(this.dragPosition.midPoint ||
								1 < Math.abs(e.top - this.dragStart.rect.top) ||
								1 < Math.abs(e.left - this.dragStart.rect.left))
								? (t.preventDefault(), void t.stopPropagation())
								: void (
										!1 !== this.trigger("click", t) &&
										this.option("zoom") &&
										"toggleZoom" === this.option("click") &&
										(t.preventDefault(),
										t.stopPropagation(),
										this.zoomWithClick(t))
								  )
						);
					t.stopPropagation();
				}
			}
			onWheel(t) {
				!1 !== this.trigger("wheel", t) &&
					this.option("zoom") &&
					this.option("wheel") &&
					this.zoomWithWheel(t);
			}
			zoomWithWheel(t) {
				void 0 === this.changedDelta && (this.changedDelta = 0);
				var e = Math.max(
						-1,
						Math.min(1, -t.deltaY || -t.deltaX || t.wheelDelta || -t.detail)
					),
					i = this.content.scale;
				let s = (i * (100 + e * this.option("wheelFactor"))) / 100;
				(s =
					(e < 0 && Math.abs(i - this.option("minScale")) < 0.01) ||
					(0 < e && Math.abs(i - this.option("maxScale")) < 0.01)
						? ((this.changedDelta += Math.abs(e)), i)
						: ((this.changedDelta = 0),
						  Math.max(
								Math.min(s, this.option("maxScale")),
								this.option("minScale")
						  ))),
					this.changedDelta > this.option("wheelLimit") ||
						(t.preventDefault(),
						s !== i &&
							((e = this.$content.getBoundingClientRect()),
							(i = t.clientX - e.left),
							(t = t.clientY - e.top),
							this.zoomTo(s, { x: i, y: t })));
			}
			zoomWithClick(t) {
				var e = this.$content.getClientRects()[0],
					i = t.clientX - e.left,
					t = t.clientY - e.top;
				this.toggleZoom({ x: i, y: t });
			}
			attachEvents() {
				this.$content.addEventListener("load", this.onLoad),
					this.$container.addEventListener("wheel", this.onWheel, {
						passive: !1,
					}),
					this.$container.addEventListener("click", this.onClick, {
						passive: !1,
					}),
					this.initObserver();
				const c = new Qt(this.$container, {
					start: (t, e) => {
						if (!this.option("touch")) return !1;
						if (this.velocity.scale < 0) return !1;
						var r = e.composedPath()[0];
						if (!c.currentPointers.length) {
							if (
								-1 !==
								[
									"BUTTON",
									"TEXTAREA",
									"OPTION",
									"INPUT",
									"SELECT",
									"VIDEO",
								].indexOf(r.nodeName)
							)
								return !1;
							if (
								this.option("textSelection") &&
								((e, i) => {
									const s = r.childNodes,
										n = document.createRange();
									for (let t = 0; t < s.length; t++) {
										var o = s[t];
										if (o.nodeType === Node.TEXT_NODE) {
											n.selectNodeContents(o);
											var a = n.getBoundingClientRect();
											if (
												e >= a.left &&
												i >= a.top &&
												e <= a.right &&
												i <= a.bottom
											)
												return o;
										}
									}
									return !1;
								})(t.clientX, t.clientY)
							)
								return !1;
						}
						return (
							!m(r) &&
							!1 !== this.trigger("touchStart", e) &&
							("mousedown" === e.type && e.preventDefault(),
							(this.state = "pointerdown"),
							this.resetDragPosition(),
							(this.dragPosition.midPoint = null),
							(this.dragPosition.time = Date.now()),
							!0)
						);
					},
					move: (t, e, i) => {
						if ("pointerdown" === this.state)
							if (!1 === this.trigger("touchMove", i)) i.preventDefault();
							else if (
								!(
									e.length < 2 &&
									!0 === this.option("panOnlyZoomed") &&
									this.content.width <= this.viewport.width &&
									this.content.height <= this.viewport.height &&
									this.transform.scale <= this.option("baseScale")
								) &&
								(!(1 < e.length) ||
									(this.option("zoom") && !1 !== this.option("pinchToZoom")))
							) {
								const s = Jt(t[0], t[1]),
									n = Jt(e[0], e[1]),
									o = n.clientX - s.clientX,
									a = n.clientY - s.clientY,
									r = E(t[0], t[1]),
									l = E(e[0], e[1]),
									d = r && l ? l / r : 1;
								(this.dragOffset.x += o),
									(this.dragOffset.y += a),
									(this.dragOffset.scale *= d),
									(this.dragOffset.time = Date.now() - this.dragPosition.time);
								t = 1 === this.dragStart.scale && this.option("lockAxis");
								if (t && !this.lockAxis) {
									if (
										Math.abs(this.dragOffset.x) < 6 &&
										Math.abs(this.dragOffset.y) < 6
									)
										return void i.preventDefault();
									const c = Math.abs(
										(180 * Math.atan2(this.dragOffset.y, this.dragOffset.x)) /
											Math.PI
									);
									this.lockAxis = 45 < c && c < 135 ? "y" : "x";
								}
								if ("xy" === t || "y" !== this.lockAxis) {
									if (
										(i.preventDefault(),
										i.stopPropagation(),
										i.stopImmediatePropagation(),
										this.lockAxis &&
											(this.dragOffset["x" === this.lockAxis ? "y" : "x"] = 0),
										this.$container.classList.add(this.option("draggingClass")),
										(this.transform.scale === this.option("baseScale") &&
											"y" === this.lockAxis) ||
											(this.dragPosition.x =
												this.dragStart.x + this.dragOffset.x),
										(this.transform.scale === this.option("baseScale") &&
											"x" === this.lockAxis) ||
											(this.dragPosition.y =
												this.dragStart.y + this.dragOffset.y),
										(this.dragPosition.scale =
											this.dragStart.scale * this.dragOffset.scale),
										1 < e.length)
									) {
										const t = Jt(c.startPointers[0], c.startPointers[1]),
											e = t.clientX - this.dragStart.rect.x,
											i = t.clientY - this.dragStart.rect.y,
											{ deltaX: s, deltaY: E } = this.getZoomDelta(
												this.content.scale * this.dragOffset.scale,
												e,
												i
											);
										(this.dragPosition.x -= s),
											(this.dragPosition.y -= E),
											(this.dragPosition.midPoint = n);
									} else this.setDragResistance();
									(this.transform = {
										x: this.dragPosition.x,
										y: this.dragPosition.y,
										scale: this.dragPosition.scale,
									}),
										this.startAnimation();
								}
							}
					},
					end: (t, e) => {
						if ("pointerdown" === this.state)
							if (
								((this._dragOffset = { ...this.dragOffset }),
								c.currentPointers.length)
							)
								this.resetDragPosition();
							else if (
								((this.state = "decel"),
								(this.friction = this.option("decelFriction")),
								this.recalculateTransform(),
								this.$container.classList.remove(this.option("draggingClass")),
								!1 !== this.trigger("touchEnd", e) && "decel" === this.state)
							) {
								e = this.option("minScale");
								if (this.transform.scale < e)
									this.zoomTo(e, { friction: 0.64 });
								else {
									var i = this.option("maxScale");
									if (0.01 < this.transform.scale - i) {
										const c = this.dragPosition.midPoint || t,
											e = this.$content.getClientRects()[0];
										this.zoomTo(i, {
											friction: 0.64,
											x: c.clientX - e.left,
											y: c.clientY - e.top,
										});
									}
								}
							}
					},
				});
				this.pointerTracker = c;
			}
			initObserver() {
				this.resizeObserver ||
					((this.resizeObserver = new Kt(() => {
						this.updateTimer ||
							(this.updateTimer = setTimeout(() => {
								var t = this.$container.getBoundingClientRect();
								t.width &&
									t.height &&
									(1 < Math.abs(t.width - this.container.width) ||
										1 < Math.abs(t.height - this.container.height)) &&
									(this.isAnimating() && this.endAnimation(!0),
									this.updateMetrics(),
									this.panTo({
										x: this.content.x,
										y: this.content.y,
										scale: this.option("baseScale"),
										friction: 0,
									})),
									(this.updateTimer = null);
							}, this.updateRate));
					})),
					this.resizeObserver.observe(this.$container));
			}
			resetDragPosition() {
				(this.lockAxis = null),
					(this.friction = this.option("friction")),
					(this.velocity = { x: 0, y: 0, scale: 0 });
				var { x: t, y: e, scale: i } = this.content;
				(this.dragStart = {
					rect: this.$content.getBoundingClientRect(),
					x: t,
					y: e,
					scale: i,
				}),
					(this.dragPosition = { ...this.dragPosition, x: t, y: e, scale: i }),
					(this.dragOffset = { x: 0, y: 0, scale: 1, time: 0 });
			}
			updateMetrics(t) {
				!0 !== t && this.trigger("beforeUpdate");
				const e = this.$container,
					i = this.$content,
					s = this.$viewport,
					n = i instanceof HTMLImageElement,
					o = this.option("zoom"),
					a = this.option("resizeParent", o);
				let r = this.option("width"),
					l = this.option("height"),
					d =
						r ||
						((c = i),
						Math.max(
							parseFloat(c.naturalWidth || 0),
							parseFloat(
								(c.width && c.width.baseVal && c.width.baseVal.value) || 0
							),
							parseFloat(c.offsetWidth || 0),
							parseFloat(c.scrollWidth || 0)
						));
				var c,
					h =
						l ||
						((c = i),
						Math.max(
							parseFloat(c.naturalHeight || 0),
							parseFloat(
								(c.height && c.height.baseVal && c.height.baseVal.value) || 0
							),
							parseFloat(c.offsetHeight || 0),
							parseFloat(c.scrollHeight || 0)
						)),
					u =
						(Object.assign(i.style, {
							width: r ? r + "px" : "",
							height: l ? l + "px" : "",
							maxWidth: "",
							maxHeight: "",
						}),
						a && Object.assign(s.style, { width: "", height: "" }),
						this.option("ratio")),
					u =
						((d = I(d * u)),
						(h = I(h * u)),
						(r = d),
						(l = h),
						i.getBoundingClientRect()),
					m = s.getBoundingClientRect(),
					g = s == e ? m : e.getBoundingClientRect(),
					p = Math.max(s.offsetWidth, I(m.width)),
					m = Math.max(s.offsetHeight, I(m.height)),
					f = window.getComputedStyle(s);
				if (
					((p -= parseFloat(f.paddingLeft) + parseFloat(f.paddingRight)),
					(m -= parseFloat(f.paddingTop) + parseFloat(f.paddingBottom)),
					(this.viewport.width = p),
					(this.viewport.height = m),
					o)
				) {
					if (0.1 < Math.abs(d - u.width) || 0.1 < Math.abs(h - u.height)) {
						const t = ((t, e, i, s) => {
							i = Math.min(i / t || 0, s / e);
							return { width: t * i || 0, height: e * i || 0 };
						})(d, h, Math.min(d, u.width), Math.min(h, u.height));
						(r = I(t.width)), (l = I(t.height));
					}
					Object.assign(i.style, {
						width: r + "px",
						height: l + "px",
						transform: "",
					});
				}
				if (
					(a &&
						(Object.assign(s.style, { width: r + "px", height: l + "px" }),
						(this.viewport = { ...this.viewport, width: r, height: l })),
					n && o && "function" != typeof this.options.maxScale)
				) {
					const t = this.option("maxScale");
					this.options.maxScale = function () {
						return 0 < this.content.origWidth && 0 < this.content.fitWidth
							? this.content.origWidth / this.content.fitWidth
							: t;
					};
				}
				(this.content = {
					...this.content,
					origWidth: d,
					origHeight: h,
					fitWidth: r,
					fitHeight: l,
					width: r,
					height: l,
					scale: 1,
					isZoomable: o,
				}),
					(this.container = { width: g.width, height: g.height }),
					!0 !== t && this.trigger("afterUpdate");
			}
			zoomIn(t) {
				this.zoomTo(this.content.scale + (t || this.option("step")));
			}
			zoomOut(t) {
				this.zoomTo(this.content.scale - (t || this.option("step")));
			}
			toggleZoom(t = {}) {
				var e = this.option("maxScale"),
					i = this.option("baseScale"),
					i = this.content.scale > i + 0.5 * (e - i) ? i : e;
				this.zoomTo(i, t);
			}
			zoomTo(t = this.option("baseScale"), { x: e = null, y: i = null } = {}) {
				t = Math.max(
					Math.min(t, this.option("maxScale")),
					this.option("minScale")
				);
				var s = I(
						this.content.scale / (this.content.width / this.content.fitWidth),
						1e7
					),
					{ deltaX: s, deltaY: n } =
						(null === e && (e = this.content.width * s * 0.5),
						null === i && (i = this.content.height * s * 0.5),
						this.getZoomDelta(t, e, i));
				(e = this.content.x - s),
					(i = this.content.y - n),
					this.panTo({
						x: e,
						y: i,
						scale: t,
						friction: this.option("zoomFriction"),
					});
			}
			getZoomDelta(t, e = 0, i = 0) {
				var s = this.content.fitWidth * this.content.scale,
					n = this.content.fitHeight * this.content.scale;
				return {
					deltaX: (this.content.fitWidth * t - s) * (0 < e && s ? e / s : 0),
					deltaY: (this.content.fitHeight * t - n) * (0 < i && n ? i / n : 0),
				};
			}
			panTo({
				x: t = this.content.x,
				y: e = this.content.y,
				scale: i,
				friction: s = this.option("friction"),
				ignoreBounds: n = !1,
			} = {}) {
				if (((i = i || this.content.scale || 1), !n)) {
					const { boundX: s, boundY: n } = this.getBounds(i);
					s && (t = Math.max(Math.min(t, s.to), s.from)),
						n && (e = Math.max(Math.min(e, n.to), n.from));
				}
				(this.friction = s),
					(this.transform = { ...this.transform, x: t, y: e, scale: i }),
					s
						? ((this.state = "panning"),
						  (this.velocity = {
								x: (1 / this.friction - 1) * (t - this.content.x),
								y: (1 / this.friction - 1) * (e - this.content.y),
								scale: (1 / this.friction - 1) * (i - this.content.scale),
						  }),
						  this.startAnimation())
						: this.endAnimation();
			}
			startAnimation() {
				this.rAF
					? cancelAnimationFrame(this.rAF)
					: this.trigger("startAnimation"),
					(this.rAF = requestAnimationFrame(() => this.animate()));
			}
			animate() {
				if (
					(this.setEdgeForce(),
					this.setDragForce(),
					(this.velocity.x *= this.friction),
					(this.velocity.y *= this.friction),
					(this.velocity.scale *= this.friction),
					(this.content.x += this.velocity.x),
					(this.content.y += this.velocity.y),
					(this.content.scale += this.velocity.scale),
					this.isAnimating())
				)
					this.setTransform();
				else if ("pointerdown" !== this.state) return void this.endAnimation();
				this.rAF = requestAnimationFrame(() => this.animate());
			}
			getBounds(t) {
				let e = this.boundX,
					i = this.boundY;
				if (void 0 !== e && void 0 !== i) return { boundX: e, boundY: i };
				(e = { from: 0, to: 0 }),
					(i = { from: 0, to: 0 }),
					(t = t || this.transform.scale);
				var s = this.content.fitWidth * t,
					n = this.content.fitHeight * t,
					o = this.viewport.width,
					a = this.viewport.height;
				if (s < o) {
					const t = I(0.5 * (o - s));
					(e.from = t), (e.to = t);
				} else e.from = I(o - s);
				if (n < a) {
					const t = 0.5 * (a - n);
					(i.from = t), (i.to = t);
				} else i.from = I(a - n);
				return { boundX: e, boundY: i };
			}
			setEdgeForce() {
				if ("decel" === this.state) {
					var n = this.option("bounceForce"),
						{ boundX: o, boundY: a } = this.getBounds(
							Math.max(this.transform.scale, this.content.scale)
						);
					let i, t, s, e;
					if (
						(o && ((i = this.content.x < o.from), (t = this.content.x > o.to)),
						a && ((s = this.content.y < a.from), (e = this.content.y > a.to)),
						i || t)
					) {
						let t = ((i ? o.from : o.to) - this.content.x) * n;
						const e = this.content.x + (this.velocity.x + t) / this.friction;
						e >= o.from && e <= o.to && (t += this.velocity.x),
							(this.velocity.x = t),
							this.recalculateTransform();
					}
					if (s || e) {
						let t = ((s ? a.from : a.to) - this.content.y) * n;
						const e = this.content.y + (t + this.velocity.y) / this.friction;
						e >= a.from && e <= a.to && (t += this.velocity.y),
							(this.velocity.y = t),
							this.recalculateTransform();
					}
				}
			}
			setDragResistance() {
				if ("pointerdown" === this.state) {
					const { boundX: n, boundY: o } = this.getBounds(
						this.dragPosition.scale
					);
					let e, t, i, s;
					if (
						(n &&
							((e = this.dragPosition.x < n.from),
							(t = this.dragPosition.x > n.to)),
						o &&
							((i = this.dragPosition.y < o.from),
							(s = this.dragPosition.y > o.to)),
						(e || t) && (!e || !t))
					) {
						const o = e ? n.from : n.to,
							t = o - this.dragPosition.x;
						this.dragPosition.x = o - 0.3 * t;
					}
					if ((i || s) && (!i || !s)) {
						const n = i ? o.from : o.to,
							t = n - this.dragPosition.y;
						this.dragPosition.y = n - 0.3 * t;
					}
				}
			}
			setDragForce() {
				"pointerdown" === this.state &&
					((this.velocity.x = this.dragPosition.x - this.content.x),
					(this.velocity.y = this.dragPosition.y - this.content.y),
					(this.velocity.scale = this.dragPosition.scale - this.content.scale));
			}
			recalculateTransform() {
				(this.transform.x =
					this.content.x + this.velocity.x / (1 / this.friction - 1)),
					(this.transform.y =
						this.content.y + this.velocity.y / (1 / this.friction - 1)),
					(this.transform.scale =
						this.content.scale + this.velocity.scale / (1 / this.friction - 1));
			}
			isAnimating() {
				return !(
					!this.friction ||
					!(
						0.05 < Math.abs(this.velocity.x) ||
						0.05 < Math.abs(this.velocity.y) ||
						0.05 < Math.abs(this.velocity.scale)
					)
				);
			}
			setTransform(t) {
				let e, i, s;
				var n;
				t
					? ((e = I(this.transform.x)),
					  (i = I(this.transform.y)),
					  (s = this.transform.scale),
					  (this.content = { ...this.content, x: e, y: i, scale: s }))
					: ((e = I(this.content.x)),
					  (i = I(this.content.y)),
					  (s =
							this.content.scale /
							(this.content.width / this.content.fitWidth)),
					  (this.content = { ...this.content, x: e, y: i })),
					this.trigger("beforeTransform"),
					(e = I(this.content.x)),
					(i = I(this.content.y)),
					t && this.option("zoom")
						? ((t = I(this.content.fitWidth * s)),
						  (n = I(this.content.fitHeight * s)),
						  (this.content.width = t),
						  (this.content.height = n),
						  (this.transform = {
								...this.transform,
								width: t,
								height: n,
								scale: s,
						  }),
						  Object.assign(this.$content.style, {
								width: t + "px",
								height: n + "px",
								maxWidth: "none",
								maxHeight: "none",
								transform: `translate3d(${e}px, ${i}px, 0) scale(1)`,
						  }))
						: (this.$content.style.transform = `translate3d(${e}px, ${i}px, 0) scale(${s})`),
					this.trigger("afterTransform");
			}
			endAnimation(t) {
				cancelAnimationFrame(this.rAF),
					(this.rAF = null),
					(this.velocity = { x: 0, y: 0, scale: 0 }),
					this.setTransform(!0),
					(this.state = "ready"),
					this.handleCursor(),
					!0 !== t && this.trigger("endAnimation");
			}
			handleCursor() {
				var t = this.option("draggableClass");
				t &&
					this.option("touch") &&
					(1 == this.option("panOnlyZoomed") &&
					this.content.width <= this.viewport.width &&
					this.content.height <= this.viewport.height &&
					this.transform.scale <= this.option("baseScale")
						? this.$container.classList.remove(t)
						: this.$container.classList.add(t));
			}
			detachEvents() {
				this.$content.removeEventListener("load", this.onLoad),
					this.$container.removeEventListener("wheel", this.onWheel, {
						passive: !1,
					}),
					this.$container.removeEventListener("click", this.onClick, {
						passive: !1,
					}),
					this.pointerTracker &&
						(this.pointerTracker.stop(), (this.pointerTracker = null)),
					this.resizeObserver &&
						(this.resizeObserver.disconnect(), (this.resizeObserver = null));
			}
			destroy() {
				"destroy" !== this.state &&
					((this.state = "destroy"),
					clearTimeout(this.updateTimer),
					(this.updateTimer = null),
					cancelAnimationFrame(this.rAF),
					(this.rAF = null),
					this.detachEvents(),
					this.detachPlugins(),
					this.resetDragPosition());
			}
		}
		(k.version = "4.0.27"), (k.Plugins = {});
		const ie = (i, s) => {
			let n = 0;
			return function (...t) {
				var e = new Date().getTime();
				if (!(e - n < s)) return (n = e), i(...t);
			};
		};
		class se {
			constructor(t) {
				(this.$container = null),
					(this.$prev = null),
					(this.$next = null),
					(this.carousel = t),
					(this.onRefresh = this.onRefresh.bind(this));
			}
			option(t) {
				return this.carousel.option("Navigation." + t);
			}
			createButton(e) {
				const t = document.createElement("button"),
					i =
						(t.setAttribute(
							"title",
							this.carousel.localize(`{{${e.toUpperCase()}}}`)
						),
						this.option("classNames.button") +
							" " +
							this.option("classNames." + e));
				return (
					t.classList.add(...i.split(" ")),
					t.setAttribute("tabindex", "0"),
					(t.innerHTML = this.carousel.localize(this.option(e + "Tpl"))),
					t.addEventListener("click", (t) => {
						t.preventDefault(),
							t.stopPropagation(),
							this.carousel["slide" + ("next" === e ? "Next" : "Prev")]();
					}),
					t
				);
			}
			build() {
				this.$container ||
					((this.$container = document.createElement("div")),
					this.$container.classList.add(
						...this.option("classNames.main").split(" ")
					),
					this.carousel.$container.appendChild(this.$container)),
					this.$next ||
						((this.$next = this.createButton("next")),
						this.$container.appendChild(this.$next)),
					this.$prev ||
						((this.$prev = this.createButton("prev")),
						this.$container.appendChild(this.$prev));
			}
			onRefresh() {
				var t = this.carousel.pages.length;
				t <= 1 ||
				(1 < t &&
					this.carousel.elemDimWidth < this.carousel.wrapDimWidth &&
					!Number.isInteger(this.carousel.option("slidesPerPage")))
					? this.cleanup()
					: (this.build(),
					  this.$prev.removeAttribute("disabled"),
					  this.$next.removeAttribute("disabled"),
					  this.carousel.option(
							"infiniteX",
							this.carousel.option("infinite")
					  ) ||
							(this.carousel.page <= 0 &&
								this.$prev.setAttribute("disabled", ""),
							this.carousel.page >= t - 1 &&
								this.$next.setAttribute("disabled", "")));
			}
			cleanup() {
				this.$prev && this.$prev.remove(),
					(this.$prev = null),
					this.$next && this.$next.remove(),
					(this.$next = null),
					this.$container && this.$container.remove(),
					(this.$container = null);
			}
			attach() {
				this.carousel.on("refresh change", this.onRefresh);
			}
			detach() {
				this.carousel.off("refresh change", this.onRefresh), this.cleanup();
			}
		}
		se.defaults = {
			prevTpl:
				'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M15 3l-9 9 9 9"/></svg>',
			nextTpl:
				'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M9 3l9 9-9 9"/></svg>',
			classNames: {
				main: "carousel__nav",
				button: "carousel__button",
				next: "is-next",
				prev: "is-prev",
			},
		};
		class ne {
			constructor(t) {
				(this.carousel = t),
					(this.selectedIndex = null),
					(this.friction = 0),
					(this.onNavReady = this.onNavReady.bind(this)),
					(this.onNavClick = this.onNavClick.bind(this)),
					(this.onNavCreateSlide = this.onNavCreateSlide.bind(this)),
					(this.onTargetChange = this.onTargetChange.bind(this));
			}
			addAsTargetFor(t) {
				(this.target = this.carousel), (this.nav = t), this.attachEvents();
			}
			addAsNavFor(t) {
				(this.target = t), (this.nav = this.carousel), this.attachEvents();
			}
			attachEvents() {
				(this.nav.options.initialSlide = this.target.options.initialPage),
					this.nav.on("ready", this.onNavReady),
					this.nav.on("createSlide", this.onNavCreateSlide),
					this.nav.on("Panzoom.click", this.onNavClick),
					this.target.on("change", this.onTargetChange),
					this.target.on("Panzoom.afterUpdate", this.onTargetChange);
			}
			onNavReady() {
				this.onTargetChange(!0);
			}
			onNavClick(t, e, i) {
				var s = i.target.closest(".carousel__slide");
				s &&
					(i.stopPropagation(),
					(i = parseInt(s.dataset.index, 10)),
					(s = this.target.findPageForSlide(i)),
					this.target.page !== s &&
						this.target.slideTo(s, { friction: this.friction }),
					this.markSelectedSlide(i));
			}
			onNavCreateSlide(t, e) {
				e.index === this.selectedIndex && this.markSelectedSlide(e.index);
			}
			onTargetChange() {
				var t = this.target.pages[this.target.page].indexes[0],
					e = this.nav.findPageForSlide(t);
				this.nav.slideTo(e), this.markSelectedSlide(t);
			}
			markSelectedSlide(t) {
				(this.selectedIndex = t),
					[...this.nav.slides].filter(
						(t) => t.$el && t.$el.classList.remove("is-nav-selected")
					);
				const e = this.nav.slides[t];
				e && e.$el && e.$el.classList.add("is-nav-selected");
			}
			attach(t) {
				t = t.options.Sync;
				(t.target || t.nav) &&
					(t.target
						? this.addAsNavFor(t.target)
						: t.nav && this.addAsTargetFor(t.nav),
					(this.friction = t.friction));
			}
			detach() {
				this.nav &&
					(this.nav.off("ready", this.onNavReady),
					this.nav.off("Panzoom.click", this.onNavClick),
					this.nav.off("createSlide", this.onNavCreateSlide)),
					this.target &&
						(this.target.off("Panzoom.afterUpdate", this.onTargetChange),
						this.target.off("change", this.onTargetChange));
			}
		}
		ne.defaults = { friction: 0.92 };
		t = {
			Navigation: se,
			Dots: class {
				constructor(t) {
					(this.carousel = t),
						(this.$list = null),
						(this.events = {
							change: this.onChange.bind(this),
							refresh: this.onRefresh.bind(this),
						});
				}
				buildList() {
					if (
						!(
							this.carousel.pages.length <
							this.carousel.option("Dots.minSlideCount")
						)
					) {
						const t = document.createElement("ol");
						return (
							t.classList.add("carousel__dots"),
							t.addEventListener("click", (t) => {
								if ("page" in t.target.dataset) {
									t.preventDefault(), t.stopPropagation();
									const e = parseInt(t.target.dataset.page, 10),
										i = this.carousel;
									e !== i.page &&
										(i.pages.length < 3 && i.option("infinite")
											? i[0 == e ? "slidePrev" : "slideNext"]()
											: i.slideTo(e));
								}
							}),
							(this.$list = t),
							this.carousel.$container.appendChild(t),
							this.carousel.$container.classList.add("has-dots"),
							t
						);
					}
				}
				removeList() {
					this.$list &&
						(this.$list.parentNode.removeChild(this.$list),
						(this.$list = null)),
						this.carousel.$container.classList.remove("has-dots");
				}
				rebuildDots() {
					const i = !!this.$list,
						e = this.carousel.pages.length;
					if (e < 2) i && this.removeList();
					else {
						i || this.buildList();
						var s = this.$list.children.length;
						if (e < s)
							for (let t = e; t < s; t++)
								this.$list.removeChild(this.$list.lastChild);
						else {
							for (let t = s; t < e; t++) {
								const i = document.createElement("li");
								i.classList.add("carousel__dot"),
									(i.dataset.page = t),
									i.setAttribute("role", "button"),
									i.setAttribute("tabindex", "0"),
									i.setAttribute(
										"title",
										this.carousel.localize("{{GOTO}}", [["%d", t + 1]])
									),
									i.addEventListener("keydown", (t) => {
										t = t.code;
										let e;
										"Enter" === t || "NumpadEnter" === t
											? (e = i)
											: "ArrowRight" === t
											? (e = i.nextSibling)
											: "ArrowLeft" === t && (e = i.previousSibling),
											e && e.click();
									}),
									this.$list.appendChild(i);
							}
							this.setActiveDot();
						}
					}
				}
				setActiveDot() {
					if (this.$list) {
						this.$list.childNodes.forEach((t) => {
							t.classList.remove("is-selected");
						});
						const t = this.$list.childNodes[this.carousel.page];
						t && t.classList.add("is-selected");
					}
				}
				onChange() {
					this.setActiveDot();
				}
				onRefresh() {
					this.rebuildDots();
				}
				attach() {
					this.carousel.on(this.events);
				}
				detach() {
					this.removeList(),
						this.carousel.off(this.events),
						(this.carousel = null);
				}
			},
			Sync: ne,
		};
		const oe = {
			slides: [],
			preload: 0,
			slidesPerPage: "auto",
			initialPage: null,
			initialSlide: null,
			friction: 0.92,
			center: !0,
			infinite: !0,
			fill: !0,
			dragFree: !1,
			prefix: "",
			classNames: {
				viewport: "carousel__viewport",
				track: "carousel__track",
				slide: "carousel__slide",
				slideSelected: "is-selected",
			},
			l10n: {
				NEXT: "Next slide",
				PREV: "Previous slide",
				GOTO: "Go to slide #%d",
			},
		};
		class T extends te {
			constructor(t, e = {}) {
				if (
					(super((e = p(!0, {}, oe, e))),
					(this.state = "init"),
					(this.$container = t),
					!(this.$container instanceof HTMLElement))
				)
					throw new Error("No root element provided");
				(this.slideNext = ie(this.slideNext.bind(this), 250)),
					(this.slidePrev = ie(this.slidePrev.bind(this), 250)),
					this.init(),
					(t.__Carousel = this);
			}
			init() {
				(this.pages = []),
					(this.page = this.pageIndex = null),
					(this.prevPage = this.prevPageIndex = null),
					this.attachPlugins(T.Plugins),
					this.trigger("init"),
					this.initLayout(),
					this.initSlides(),
					this.updateMetrics(),
					this.$track &&
						this.pages.length &&
						(this.$track.style.transform = `translate3d(${
							-1 * this.pages[this.page].left
						}px, 0px, 0) scale(1)`),
					this.manageSlideVisiblity(),
					this.initPanzoom(),
					(this.state = "ready"),
					this.trigger("ready");
			}
			initLayout() {
				var t = this.option("prefix"),
					e = this.option("classNames");
				(this.$viewport =
					this.option("viewport") ||
					this.$container.querySelector("." + t + e.viewport)),
					this.$viewport ||
						((this.$viewport = document.createElement("div")),
						this.$viewport.classList.add(...(t + e.viewport).split(" ")),
						this.$viewport.append(...this.$container.childNodes),
						this.$container.appendChild(this.$viewport)),
					(this.$track =
						this.option("track") ||
						this.$container.querySelector("." + t + e.track)),
					this.$track ||
						((this.$track = document.createElement("div")),
						this.$track.classList.add(...(t + e.track).split(" ")),
						this.$track.append(...this.$viewport.childNodes),
						this.$viewport.appendChild(this.$track));
			}
			initSlides() {
				(this.slides = []),
					this.$viewport
						.querySelectorAll(
							"." + this.option("prefix") + this.option("classNames.slide")
						)
						.forEach((t) => {
							t = { $el: t, isDom: !0 };
							this.slides.push(t),
								this.trigger("createSlide", t, this.slides.length);
						}),
					Array.isArray(this.options.slides) &&
						(this.slides = p(!0, [...this.slides], this.options.slides));
			}
			updateMetrics() {
				let s,
					n = 0,
					o = [],
					a =
						(this.slides.forEach((t, e) => {
							var i = t.$el,
								i = t.isDom || !s ? this.getSlideMetrics(i) : s;
							(t.index = e),
								(t.width = i),
								(t.left = n),
								(s = i),
								(n += i),
								o.push(e);
						}),
						Math.max(
							this.$track.offsetWidth,
							I(this.$track.getBoundingClientRect().width)
						)),
					t = getComputedStyle(this.$track);
				(a -= parseFloat(t.paddingLeft) + parseFloat(t.paddingRight)),
					(this.contentWidth = n),
					(this.viewportWidth = a);
				const r = [],
					e = this.option("slidesPerPage");
				if (Number.isInteger(e) && n > a)
					for (let t = 0; t < this.slides.length; t += e)
						r.push({
							indexes: o.slice(t, t + e),
							slides: this.slides.slice(t, t + e),
						});
				else {
					let e = 0,
						i = 0;
					for (let t = 0; t < this.slides.length; t += 1) {
						var l = this.slides[t];
						(!r.length || i + l.width > a) &&
							(r.push({ indexes: [], slides: [] }),
							(e = r.length - 1),
							(i = 0)),
							(i += l.width),
							r[e].indexes.push(t),
							r[e].slides.push(l);
					}
				}
				const i = this.option("center"),
					d = this.option("fill"),
					c =
						(r.forEach((t, e) => {
							(t.index = e),
								(t.width = t.slides.reduce((t, e) => t + e.width, 0)),
								(t.left = t.slides[0].left),
								i && (t.left += 0.5 * (a - t.width) * -1),
								d &&
									!this.option("infiniteX", this.option("infinite")) &&
									n > a &&
									((t.left = Math.max(t.left, 0)),
									(t.left = Math.min(t.left, n - a)));
						}),
						[]);
				let h,
					u =
						(r.forEach((t) => {
							const e = { ...t };
							h && e.left === h.left
								? ((h.width += e.width),
								  (h.slides = [...h.slides, ...e.slides]),
								  (h.indexes = [...h.indexes, ...e.indexes]))
								: ((e.index = c.length), (h = e), c.push(e));
						}),
						(this.pages = c),
						this.page);
				if (null === u) {
					const s = this.option("initialSlide");
					(u =
						null !== s
							? this.findPageForSlide(s)
							: parseInt(this.option("initialPage", 0), 10) || 0),
						c[u] || (u = c.length && u > c.length ? c[c.length - 1].index : 0),
						(this.page = u),
						(this.pageIndex = u);
				}
				this.updatePanzoom(), this.trigger("refresh");
			}
			getSlideMetrics(t) {
				if (!t) {
					const e = this.slides[0];
					((t = document.createElement("div")).dataset.isTestEl = 1),
						(t.style.visibility = "hidden"),
						t.classList.add(
							...(
								this.option("prefix") + this.option("classNames.slide")
							).split(" ")
						),
						e.customClass && t.classList.add(...e.customClass.split(" ")),
						this.$track.prepend(t);
				}
				let e = Math.max(t.offsetWidth, I(t.getBoundingClientRect().width));
				var i = t.currentStyle || window.getComputedStyle(t);
				return (
					(e =
						e +
						(parseFloat(i.marginLeft) || 0) +
						(parseFloat(i.marginRight) || 0)),
					t.dataset.isTestEl && t.remove(),
					e
				);
			}
			findPageForSlide(e) {
				e = parseInt(e, 10) || 0;
				var t = this.pages.find((t) => -1 < t.indexes.indexOf(e));
				return t ? t.index : null;
			}
			slideNext() {
				this.slideTo(this.pageIndex + 1);
			}
			slidePrev() {
				this.slideTo(this.pageIndex - 1);
			}
			slideTo(t, e = {}) {
				var {
					x: e = -1 * this.setPage(t, !0),
					y: t = 0,
					friction: i = this.option("friction"),
				} = e;
				(this.Panzoom.content.x === e && !this.Panzoom.velocity.x && i) ||
					(this.Panzoom.panTo({ x: e, y: t, friction: i, ignoreBounds: !0 }),
					"ready" === this.state &&
						"ready" === this.Panzoom.state &&
						this.trigger("settle"));
			}
			initPanzoom() {
				this.Panzoom && this.Panzoom.destroy();
				var t = p(
					!0,
					{},
					{
						content: this.$track,
						wrapInner: !1,
						resizeParent: !1,
						zoom: !1,
						click: !1,
						lockAxis: "x",
						x: this.pages.length ? -1 * this.pages[this.page].left : 0,
						centerOnStart: !1,
						textSelection: () => this.option("textSelection", !1),
						panOnlyZoomed: function () {
							return this.content.width <= this.viewport.width;
						},
					},
					this.option("Panzoom")
				);
				(this.Panzoom = new k(this.$container, t)),
					this.Panzoom.on({
						"*": (t, ...e) => this.trigger("Panzoom." + t, ...e),
						afterUpdate: () => {
							this.updatePage();
						},
						beforeTransform: this.onBeforeTransform.bind(this),
						touchEnd: this.onTouchEnd.bind(this),
						endAnimation: () => {
							this.trigger("settle");
						},
					}),
					this.updateMetrics(),
					this.manageSlideVisiblity();
			}
			updatePanzoom() {
				this.Panzoom &&
					((this.Panzoom.content = {
						...this.Panzoom.content,
						fitWidth: this.contentWidth,
						origWidth: this.contentWidth,
						width: this.contentWidth,
					}),
					1 < this.pages.length &&
					this.option("infiniteX", this.option("infinite"))
						? (this.Panzoom.boundX = null)
						: this.pages.length &&
						  (this.Panzoom.boundX = {
								from: -1 * this.pages[this.pages.length - 1].left,
								to: -1 * this.pages[0].left,
						  }),
					this.option("infiniteY", this.option("infinite"))
						? (this.Panzoom.boundY = null)
						: (this.Panzoom.boundY = { from: 0, to: 0 }),
					this.Panzoom.handleCursor());
			}
			manageSlideVisiblity() {
				const r = this.contentWidth,
					l = this.viewportWidth;
				let d = this.Panzoom
					? -1 * this.Panzoom.content.x
					: this.pages.length
					? this.pages[this.page].left
					: 0;
				const c = this.option("preload"),
					h = this.option("infiniteX", this.option("infinite")),
					u = parseFloat(
						getComputedStyle(this.$viewport, null).getPropertyValue(
							"padding-left"
						)
					),
					m = parseFloat(
						getComputedStyle(this.$viewport, null).getPropertyValue(
							"padding-right"
						)
					);
				this.slides.forEach((t) => {
					let e,
						i,
						s = 0;
					(e = d - u),
						(i = d + l + m),
						(e -= c * (l + u + m)),
						(i += c * (l + u + m));
					var n = t.left + t.width > e && t.left < i,
						o =
							((e = d + r - u),
							(i = d + r + l + m),
							(e -= c * (l + u + m)),
							h && t.left + t.width > e && t.left < i),
						a =
							((e = d - r - u),
							(i = d - r + l + m),
							(e -= c * (l + u + m)),
							h && t.left + t.width > e && t.left < i);
					o || n || a
						? (this.createSlideEl(t),
						  n && (s = 0),
						  o && (s = -1),
						  a && (s = 1),
						  t.left + t.width > d && t.left <= d + l + m && (s = 0))
						: this.removeSlideEl(t),
						(t.hasDiff = s);
				});
				let s = 0,
					n = 0;
				this.slides.forEach((t, e) => {
					let i = 0;
					t.$el
						? (e !== s || t.hasDiff ? (i = n + t.hasDiff * r) : (n = 0),
						  (t.$el.style.left =
								0.1 < Math.abs(i) ? n + t.hasDiff * r + "px" : ""),
						  s++)
						: (n += t.width);
				}),
					this.markSelectedSlides();
			}
			createSlideEl(e) {
				if (e) {
					var i;
					if (!e.$el) {
						const s = document.createElement("div"),
							n =
								((s.dataset.index = e.index),
								s.classList.add(
									...(
										this.option("prefix") + this.option("classNames.slide")
									).split(" ")
								),
								e.customClass && s.classList.add(...e.customClass.split(" ")),
								e.html && (s.innerHTML = e.html),
								[]),
							o =
								(this.slides.forEach((t, e) => {
									t.$el && n.push(e);
								}),
								e.index);
						let t = null;
						return (
							n.length &&
								((i = n.reduce((t, e) =>
									Math.abs(e - o) < Math.abs(t - o) ? e : t
								)),
								(t = this.slides[i])),
							this.$track.insertBefore(
								s,
								t && t.$el
									? t.index < e.index
										? t.$el.nextSibling
										: t.$el
									: null
							),
							(e.$el = s),
							this.trigger("createSlide", e, o),
							e
						);
					}
					((i = e.$el.dataset.index) && parseInt(i, 10) === e.index) ||
						((e.$el.dataset.index = e.index),
						e.$el.querySelectorAll("[data-lazy-srcset]").forEach((t) => {
							t.srcset = t.dataset.lazySrcset;
						}),
						e.$el.querySelectorAll("[data-lazy-src]").forEach((t) => {
							var e = t.dataset.lazySrc;
							t instanceof HTMLImageElement
								? (t.src = e)
								: (t.style.backgroundImage = `url('${e}')`);
						}),
						(i = e.$el.dataset.lazySrc) &&
							(e.$el.style.backgroundImage = `url('${i}')`),
						(e.state = "ready"));
				}
			}
			removeSlideEl(t) {
				t.$el &&
					!t.isDom &&
					(this.trigger("removeSlide", t), t.$el.remove(), (t.$el = null));
			}
			markSelectedSlides() {
				const n = this.option("classNames.slideSelected"),
					o = "aria-hidden";
				this.slides.forEach((t, e) => {
					const i = t.$el;
					if (i) {
						const s = this.pages[this.page];
						s && s.indexes && -1 < s.indexes.indexOf(e)
							? (n &&
									!i.classList.contains(n) &&
									(i.classList.add(n), this.trigger("selectSlide", t)),
							  i.removeAttribute(o))
							: (n &&
									i.classList.contains(n) &&
									(i.classList.remove(n), this.trigger("unselectSlide", t)),
							  i.setAttribute(o, !0));
					}
				});
			}
			updatePage() {
				this.updateMetrics(), this.slideTo(this.page, { friction: 0 });
			}
			onBeforeTransform() {
				this.option("infiniteX", this.option("infinite")) &&
					this.manageInfiniteTrack(),
					this.manageSlideVisiblity();
			}
			manageInfiniteTrack() {
				var e = this.contentWidth,
					i = this.viewportWidth;
				if (
					!(
						!this.option("infiniteX", this.option("infinite")) ||
						this.pages.length < 2 ||
						e < i
					)
				) {
					const s = this.Panzoom;
					let t = !1;
					return (
						s.content.x < -1 * (e - i) &&
							((s.content.x += e),
							(this.pageIndex = this.pageIndex - this.pages.length),
							(t = !0)),
						s.content.x > i &&
							((s.content.x -= e),
							(this.pageIndex = this.pageIndex + this.pages.length),
							(t = !0)),
						t && "pointerdown" === s.state && s.resetDragPosition(),
						t
					);
				}
			}
			onTouchEnd(t, e) {
				var i = this.option("dragFree");
				if (
					!i &&
					1 < this.pages.length &&
					t.dragOffset.time < 350 &&
					Math.abs(t.dragOffset.y) < 1 &&
					5 < Math.abs(t.dragOffset.x)
				)
					this[t.dragOffset.x < 0 ? "slideNext" : "slidePrev"]();
				else if (i) {
					const [, e] = this.getPageFromPosition(-1 * t.transform.x);
					this.setPage(e);
				} else this.slideToClosest();
			}
			slideToClosest(t = {}) {
				var [, e] = this.getPageFromPosition(-1 * this.Panzoom.content.x);
				this.slideTo(e, t);
			}
			getPageFromPosition(e) {
				var t = this.pages.length,
					i =
						(this.option("center") && (e += 0.5 * this.viewportWidth),
						Math.floor(e / this.contentWidth)),
					s =
						((e -= i * this.contentWidth),
						this.slides.find((t) => t.left <= e && t.left + t.width > e));
				return s ? [(s = this.findPageForSlide(s.index)), s + i * t] : [0, 0];
			}
			setPage(t, e) {
				let i = 0,
					s = parseInt(t, 10) || 0;
				const n = this.page,
					o = this.pageIndex,
					a = this.pages.length,
					r = this.contentWidth,
					l = this.viewportWidth;
				if (
					((t = ((s % a) + a) % a),
					this.option("infiniteX", this.option("infinite")) && r > l)
				) {
					const n = Math.floor(s / a) || 0,
						o = r;
					if (((i = this.pages[t].left + n * o), !0 === e && 2 < a)) {
						var d = -1 * this.Panzoom.content.x;
						const e = i - o,
							n = i + o,
							r = Math.abs(d - i),
							l = Math.abs(d - e),
							c = Math.abs(d - n);
						c < r && c <= l
							? ((i = n), (s += a))
							: l < r && l < c && ((i = e), (s -= a));
					}
				} else
					(t = s = Math.max(0, Math.min(s, a - 1))),
						(i = this.pages.length ? this.pages[t].left : 0);
				return (
					(this.page = t),
					(this.pageIndex = s),
					null !== n &&
						t !== n &&
						((this.prevPage = n),
						(this.prevPageIndex = o),
						this.trigger("change", t, n)),
					i
				);
			}
			destroy() {
				(this.state = "destroy"),
					this.slides.forEach((t) => {
						this.removeSlideEl(t);
					}),
					(this.slides = []),
					this.Panzoom.destroy(),
					this.detachPlugins();
			}
		}
		(T.version = "4.0.27"), (T.Plugins = t);
		const A = !(
			"undefined" == typeof window ||
			!window.document ||
			!window.document.createElement
		);
		let ae = null;
		const re = [
				"a[href]",
				"area[href]",
				'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',
				"select:not([disabled]):not([aria-hidden])",
				"textarea:not([disabled]):not([aria-hidden])",
				"button:not([disabled]):not([aria-hidden])",
				"iframe",
				"object",
				"embed",
				"video",
				"audio",
				"[contenteditable]",
				'[tabindex]:not([tabindex^="-"]):not([disabled]):not([aria-hidden])',
			],
			M = (t) => {
				if (t && A) {
					null === ae &&
						document.createElement("div").focus({
							get preventScroll() {
								return !(ae = !0);
							},
						});
					try {
						var e, i;
						t.setActive
							? t.setActive()
							: ae
							? t.focus({ preventScroll: !0 })
							: ((e = window.pageXOffset || document.body.scrollTop),
							  (i = window.pageYOffset || document.body.scrollLeft),
							  t.focus(),
							  document.body.scrollTo({ top: e, left: i, behavior: "auto" }));
					} catch (t) {}
				}
			};
		class le {
			constructor(t) {
				(this.fancybox = t), (this.$container = null), (this.state = "init");
				for (const t of ["onPrepare", "onClosing", "onKeydown"])
					this[t] = this[t].bind(this);
				this.events = {
					prepare: this.onPrepare,
					closing: this.onClosing,
					keydown: this.onKeydown,
				};
			}
			onPrepare() {
				this.getSlides().length < this.fancybox.option("Thumbs.minSlideCount")
					? (this.state = "disabled")
					: !0 === this.fancybox.option("Thumbs.autoStart") &&
					  this.fancybox.Carousel.Panzoom.content.height >=
							this.fancybox.option("Thumbs.minScreenHeight") &&
					  this.build();
			}
			onClosing() {
				this.Carousel && this.Carousel.Panzoom.detachEvents();
			}
			onKeydown(t, e) {
				e === t.option("Thumbs.key") && this.toggle();
			}
			build() {
				if (!this.$container) {
					const t = document.createElement("div");
					t.classList.add("fancybox__thumbs"),
						this.fancybox.$carousel.parentNode.insertBefore(
							t,
							this.fancybox.$carousel.nextSibling
						),
						(this.Carousel = new T(
							t,
							p(
								!0,
								{
									Dots: !1,
									Navigation: !1,
									Sync: { friction: 0 },
									infinite: !1,
									center: !0,
									fill: !0,
									dragFree: !0,
									slidesPerPage: 1,
									preload: 1,
								},
								this.fancybox.option("Thumbs.Carousel"),
								{
									Sync: { target: this.fancybox.Carousel },
									slides: this.getSlides(),
								}
							)
						)),
						this.Carousel.Panzoom.on("wheel", (t, e) => {
							e.preventDefault(),
								this.fancybox[e.deltaY < 0 ? "prev" : "next"]();
						}),
						(this.$container = t),
						(this.state = "visible");
				}
			}
			getSlides() {
				const t = [];
				for (const i of this.fancybox.items) {
					var e = i.thumb;
					e &&
						t.push({
							html: `<div class="fancybox__thumb" style="background-image:url('${e}')"></div>`,
							customClass: "has-thumb has-" + (i.type || "image"),
						});
				}
				return t;
			}
			toggle() {
				"visible" === this.state
					? this.hide()
					: "hidden" === this.state
					? this.show()
					: this.build();
			}
			show() {
				"hidden" === this.state &&
					((this.$container.style.display = ""),
					this.Carousel.Panzoom.attachEvents(),
					(this.state = "visible"));
			}
			hide() {
				"visible" === this.state &&
					(this.Carousel.Panzoom.detachEvents(),
					(this.$container.style.display = "none"),
					(this.state = "hidden"));
			}
			cleanup() {
				this.Carousel && (this.Carousel.destroy(), (this.Carousel = null)),
					this.$container &&
						(this.$container.remove(), (this.$container = null)),
					(this.state = "init");
			}
			attach() {
				this.fancybox.on(this.events);
			}
			detach() {
				this.fancybox.off(this.events), this.cleanup();
			}
		}
		le.defaults = {
			minSlideCount: 2,
			minScreenHeight: 500,
			autoStart: !0,
			key: "t",
			Carousel: {},
		};
		const de = (t, e) => {
				const i = new URL(t),
					s = new URLSearchParams(i.search);
				let n = new URLSearchParams();
				for (const [t, i] of [...s, ...Object.entries(e)])
					"t" === t ? n.set("start", parseInt(i)) : n.set(t, i);
				n = n.toString();
				e = t.match(/#t=((.*)?\d+s)/);
				return e && (n += "#t=" + e[1]), n;
			},
			ce = {
				video: { autoplay: !0, ratio: 16 / 9 },
				youtube: {
					autohide: 1,
					fs: 1,
					rel: 0,
					hd: 1,
					wmode: "transparent",
					enablejsapi: 1,
					html5: 1,
				},
				vimeo: {
					hd: 1,
					show_title: 1,
					show_byline: 1,
					show_portrait: 0,
					fullscreen: 1,
				},
				html5video: {
					tpl: '<video class="fancybox__html5video" playsinline controls controlsList="nodownload" poster="{{poster}}">\n  <source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos.</video>',
					format: "",
				},
			};
		class he {
			constructor(t) {
				this.fancybox = t;
				for (const t of [
					"onInit",
					"onReady",
					"onCreateSlide",
					"onRemoveSlide",
					"onSelectSlide",
					"onUnselectSlide",
					"onRefresh",
					"onMessage",
				])
					this[t] = this[t].bind(this);
				this.events = {
					init: this.onInit,
					ready: this.onReady,
					"Carousel.createSlide": this.onCreateSlide,
					"Carousel.removeSlide": this.onRemoveSlide,
					"Carousel.selectSlide": this.onSelectSlide,
					"Carousel.unselectSlide": this.onUnselectSlide,
					"Carousel.refresh": this.onRefresh,
				};
			}
			onInit() {
				for (const t of this.fancybox.items) this.processType(t);
			}
			processType(t) {
				if (t.html)
					return (t.src = t.html), (t.type = "html"), void delete t.html;
				const e = t.src || "";
				let i = t.type || this.fancybox.options.type,
					s = null;
				var n, o;
				(e && "string" != typeof e) ||
					((s = e.match(
						/(?:youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(?:watch\?(?:.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(?:.*)|[\w-]{11}|\?listType=(?:.*)&list=(?:.*))(?:.*)/i
					))
						? ((n = de(e, this.fancybox.option("Html.youtube"))),
						  (o = encodeURIComponent(s[1])),
						  (t.videoId = o),
						  (t.src = `https://www.youtube-nocookie.com/embed/${o}?` + n),
						  (t.thumb =
								t.thumb || `https://i.ytimg.com/vi/${o}/mqdefault.jpg`),
						  (t.vendor = "youtube"),
						  (i = "video"))
						: (s = e.match(/^.+vimeo.com\/(?:\/)?([\d]+)(.*)?/))
						? ((n = de(e, this.fancybox.option("Html.vimeo"))),
						  (o = encodeURIComponent(s[1])),
						  (t.videoId = o),
						  (t.src = `https://player.vimeo.com/video/${o}?` + n),
						  (t.vendor = "vimeo"),
						  (i = "video"))
						: (s = e.match(
								/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:(?:(?:maps\/(?:place\/(?:.*)\/)?\@(.*),(\d+.?\d+?)z))|(?:\?ll=))(.*)?/i
						  ))
						? ((t.src =
								`//maps.google.${s[1]}/?ll=${(s[2]
									? s[2] +
									  "&z=" +
									  Math.floor(s[3]) +
									  (s[4] ? s[4].replace(/^\//, "&") : "")
									: s[4] + ""
								).replace(/\?/, "&")}&output=` +
								(s[4] && 0 < s[4].indexOf("layer=c") ? "svembed" : "embed")),
						  (i = "map"))
						: (s = e.match(
								/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:maps\/search\/)(.*)/i
						  )) &&
						  ((t.src = `//maps.google.${s[1]}/maps?q=${s[2]
								.replace("query=", "q=")
								.replace("api=1", "")}&output=embed`),
						  (i = "map")),
					i ||
						("#" === e.charAt(0)
							? (i = "inline")
							: (s = e.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))
							? ((i = "html5video"),
							  (t.format =
									t.format || "video/" + ("ogv" === s[1] ? "ogg" : s[1])))
							: e.match(
									/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i
							  )
							? (i = "image")
							: e.match(/\.(pdf)((\?|#).*)?$/i) && (i = "pdf")),
					(t.type = i || this.fancybox.option("defaultType", "image")),
					("html5video" !== i && "video" !== i) ||
						((t.video = p({}, this.fancybox.option("Html.video"), t.video)),
						t._width && t._height
							? (t.ratio = parseFloat(t._width) / parseFloat(t._height))
							: (t.ratio = t.ratio || t.video.ratio || ce.video.ratio)));
			}
			onReady() {
				this.fancybox.Carousel.slides.forEach((t) => {
					t.$el &&
						(this.setContent(t),
						t.index === this.fancybox.getSlide().index && this.playVideo(t));
				});
			}
			onCreateSlide(t, e, i) {
				"ready" === this.fancybox.state && this.setContent(i);
			}
			loadInlineContent(e) {
				let i;
				var t;
				if (
					(e.src instanceof HTMLElement
						? (i = e.src)
						: "string" == typeof e.src &&
						  ((t =
								2 === (t = e.src.split("#", 2)).length && "" === t[0]
									? t[1]
									: t[0]),
						  (i = document.getElementById(t))),
					i)
				) {
					if ("clone" === e.type || i.$placeHolder) {
						let t = (i = i.cloneNode(!0)).getAttribute("id");
						(t = t ? t + "--clone" : `clone-${this.fancybox.id}-` + e.index),
							i.setAttribute("id", t);
					} else {
						const e = document.createElement("div");
						e.classList.add("fancybox-placeholder"),
							i.parentNode.insertBefore(e, i),
							(i.$placeHolder = e);
					}
					this.fancybox.setContent(e, i);
				} else this.fancybox.setError(e, "{{ELEMENT_NOT_FOUND}}");
			}
			loadAjaxContent(t) {
				const e = this.fancybox,
					i = new XMLHttpRequest();
				e.showLoading(t),
					(i.onreadystatechange = function () {
						i.readyState === XMLHttpRequest.DONE &&
							"ready" === e.state &&
							(e.hideLoading(t),
							200 === i.status
								? e.setContent(t, i.responseText)
								: e.setError(
										t,
										404 === i.status
											? "{{AJAX_NOT_FOUND}}"
											: "{{AJAX_FORBIDDEN}}"
								  ));
					});
				var s = t.ajax || null;
				i.open(s ? "POST" : "GET", t.src),
					i.setRequestHeader(
						"Content-Type",
						"application/x-www-form-urlencoded"
					),
					i.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
					i.send(s),
					(t.xhr = i);
			}
			loadIframeContent(e) {
				const i = this.fancybox,
					s = document.createElement("iframe");
				if (
					((s.className = "fancybox__iframe"),
					s.setAttribute("id", `fancybox__iframe_${i.id}_` + e.index),
					s.setAttribute("allow", "autoplay; fullscreen"),
					s.setAttribute("scrolling", "auto"),
					(e.$iframe = s),
					"iframe" !== e.type || !1 === e.preload)
				)
					return (
						s.setAttribute("src", e.src),
						this.fancybox.setContent(e, s),
						void this.resizeIframe(e)
					);
				i.showLoading(e);
				const t = document.createElement("div");
				(t.style.visibility = "hidden"),
					this.fancybox.setContent(e, t),
					t.appendChild(s),
					(s.onerror = () => {
						i.setError(e, "{{IFRAME_ERROR}}");
					}),
					(s.onload = () => {
						i.hideLoading(e);
						let t = !1;
						s.isReady || ((s.isReady = !0), (t = !0)),
							s.src.length &&
								((s.parentNode.style.visibility = ""),
								this.resizeIframe(e),
								t && i.revealContent(e));
					}),
					s.setAttribute("src", e.src);
			}
			setAspectRatio(i) {
				var s,
					n = i.$content,
					o = i.ratio;
				if (n) {
					let t = i._width,
						e = i._height;
					(o || (t && e)) &&
						(Object.assign(n.style, {
							width: t && e ? "100%" : "",
							height: t && e ? "100%" : "",
							maxWidth: "",
							maxHeight: "",
						}),
						(i = n.offsetWidth),
						(s = n.offsetHeight),
						(t = t || i),
						(e = e || s),
						(t > i || e > s) &&
							((i = Math.min(i / t, s / e)), (t *= i), (e *= i)),
						0.01 < Math.abs(t / e - o) &&
							(o < t / e ? (t = e * o) : (e = t / o)),
						Object.assign(n.style, { width: t + "px", height: e + "px" }));
				}
			}
			resizeIframe(i) {
				var s = i.$iframe;
				if (s) {
					let t = i._width || 0,
						e = i._height || 0;
					t && e && (i.autoSize = !1);
					const n = s.parentNode,
						o = n && n.style;
					if (!1 !== i.preload && !1 !== i.autoSize && o)
						try {
							const i = window.getComputedStyle(n),
								a = parseFloat(i.paddingLeft) + parseFloat(i.paddingRight),
								r = parseFloat(i.paddingTop) + parseFloat(i.paddingBottom),
								l = s.contentWindow.document,
								d = l.getElementsByTagName("html")[0],
								c = l.body;
							(o.width = ""),
								(c.style.overflow = "hidden"),
								(t = t || d.scrollWidth + a),
								(o.width = t + "px"),
								(c.style.overflow = ""),
								(o.flex = "0 0 auto"),
								(o.height = c.scrollHeight + "px"),
								(e = d.scrollHeight + r);
						} catch (i) {}
					if (t || e) {
						const i = { flex: "0 1 auto" };
						t && (i.width = t + "px"),
							e && (i.height = e + "px"),
							Object.assign(o, i);
					}
				}
			}
			onRefresh(t, e) {
				e.slides.forEach((t) => {
					t.$el &&
						(t.$iframe && this.resizeIframe(t),
						t.ratio && this.setAspectRatio(t));
				});
			}
			setContent(t) {
				if (t && !t.isDom) {
					switch (t.type) {
						case "html":
							this.fancybox.setContent(t, t.src);
							break;
						case "html5video":
							this.fancybox.setContent(
								t,
								this.fancybox
									.option("Html.html5video.tpl")
									.replace(/\{\{src\}\}/gi, t.src)
									.replace(
										"{{format}}",
										t.format || (t.html5video && t.html5video.format) || ""
									)
									.replace("{{poster}}", t.poster || t.thumb || "")
							);
							break;
						case "inline":
						case "clone":
							this.loadInlineContent(t);
							break;
						case "ajax":
							this.loadAjaxContent(t);
							break;
						case "pdf":
						case "video":
						case "map":
							t.preload = !1;
						case "iframe":
							this.loadIframeContent(t);
					}
					t.ratio && this.setAspectRatio(t);
				}
			}
			onSelectSlide(t, e, i) {
				"ready" === t.state && this.playVideo(i);
			}
			playVideo(e) {
				if ("html5video" === e.type && e.video.autoplay)
					try {
						const i = e.$el.querySelector("video");
						if (i) {
							const e = i.play();
							void 0 !== e &&
								e
									.then(() => {})
									.catch((t) => {
										(i.muted = !0), i.play();
									});
						}
					} catch (e) {}
				if ("video" === e.type && e.$iframe && e.$iframe.contentWindow) {
					const i = () => {
						if ("done" === e.state && e.$iframe && e.$iframe.contentWindow) {
							let t;
							if (e.$iframe.isReady)
								return void (
									(t =
										e.video && e.video.autoplay
											? "youtube" == e.vendor
												? { event: "command", func: "playVideo" }
												: { method: "play", value: "true" }
											: t) &&
									e.$iframe.contentWindow.postMessage(JSON.stringify(t), "*")
								);
							"youtube" === e.vendor &&
								((t = { event: "listening", id: e.$iframe.getAttribute("id") }),
								e.$iframe.contentWindow.postMessage(JSON.stringify(t), "*"));
						}
						e.poller = setTimeout(i, 250);
					};
					i();
				}
			}
			onUnselectSlide(t, e, i) {
				if ("html5video" === i.type)
					try {
						i.$el.querySelector("video").pause();
					} catch (t) {}
				else {
					let t = !1;
					"vimeo" == i.vendor
						? (t = { method: "pause", value: "true" })
						: "youtube" === i.vendor &&
						  (t = { event: "command", func: "pauseVideo" }),
						t &&
							i.$iframe &&
							i.$iframe.contentWindow &&
							i.$iframe.contentWindow.postMessage(JSON.stringify(t), "*"),
						clearTimeout(i.poller);
				}
			}
			onRemoveSlide(t, e, i) {
				i.xhr && (i.xhr.abort(), (i.xhr = null)),
					i.$iframe &&
						((i.$iframe.onload = i.$iframe.onerror = null),
						(i.$iframe.src = "//about:blank"),
						(i.$iframe = null));
				const s = i.$content,
					n =
						("inline" === i.type &&
							s &&
							(s.classList.remove("fancybox__content"),
							"none" !== s.style.display && (s.style.display = "none")),
						i.$closeButton &&
							(i.$closeButton.remove(), (i.$closeButton = null)),
						s && s.$placeHolder);
				n &&
					(n.parentNode.insertBefore(s, n),
					n.remove(),
					(s.$placeHolder = null));
			}
			onMessage(t) {
				try {
					var e = JSON.parse(t.data);
					if ("https://player.vimeo.com" === t.origin) {
						if ("ready" === e.event)
							for (var i of document.getElementsByClassName("fancybox__iframe"))
								i.contentWindow === t.source && (i.isReady = 1);
					} else
						"https://www.youtube-nocookie.com" === t.origin &&
							"onReady" === e.event &&
							(document.getElementById(e.id).isReady = 1);
				} catch (t) {}
			}
			attach() {
				this.fancybox.on(this.events),
					window.addEventListener("message", this.onMessage, !1);
			}
			detach() {
				this.fancybox.off(this.events),
					window.removeEventListener("message", this.onMessage, !1);
			}
		}
		he.defaults = ce;
		class ue {
			constructor(t) {
				this.fancybox = t;
				for (const t of [
					"onReady",
					"onClosing",
					"onDone",
					"onPageChange",
					"onCreateSlide",
					"onRemoveSlide",
					"onImageStatusChange",
				])
					this[t] = this[t].bind(this);
				this.events = {
					ready: this.onReady,
					closing: this.onClosing,
					done: this.onDone,
					"Carousel.change": this.onPageChange,
					"Carousel.createSlide": this.onCreateSlide,
					"Carousel.removeSlide": this.onRemoveSlide,
				};
			}
			onReady() {
				this.fancybox.Carousel.slides.forEach((t) => {
					t.$el && this.setContent(t);
				});
			}
			onDone(t, e) {
				this.handleCursor(e);
			}
			onClosing(t) {
				clearTimeout(this.clickTimer),
					(this.clickTimer = null),
					t.Carousel.slides.forEach((t) => {
						t.$image && (t.state = "destroy"),
							t.Panzoom && t.Panzoom.detachEvents();
					}),
					"closing" === this.fancybox.state &&
						this.canZoom(t.getSlide()) &&
						this.zoomOut();
			}
			onCreateSlide(t, e, i) {
				"ready" === this.fancybox.state && this.setContent(i);
			}
			onRemoveSlide(t, e, i) {
				i.$image &&
					(i.$el.classList.remove(t.option("Image.canZoomInClass")),
					i.$image.remove(),
					(i.$image = null)),
					i.Panzoom && (i.Panzoom.destroy(), (i.Panzoom = null)),
					i.$el && i.$el.dataset && delete i.$el.dataset.imageFit;
			}
			setContent(e) {
				if (
					!(e.isDom || e.html || (e.type && "image" !== e.type) || e.$image)
				) {
					(e.type = "image"), (e.state = "loading");
					const i = document.createElement("div"),
						s =
							((i.style.visibility = "hidden"), document.createElement("img"));
					s.addEventListener("load", (t) => {
						t.stopImmediatePropagation(), this.onImageStatusChange(e);
					}),
						s.addEventListener("error", () => {
							this.onImageStatusChange(e);
						}),
						(s.src = e.src),
						(s.alt = ""),
						(s.draggable = !1),
						s.classList.add("fancybox__image"),
						e.srcset && s.setAttribute("srcset", e.srcset),
						e.sizes && s.setAttribute("sizes", e.sizes),
						(e.$image = s);
					var t = this.fancybox.option("Image.wrap");
					if (t) {
						const n = document.createElement("div");
						n.classList.add("string" == typeof t ? t : "fancybox__image-wrap"),
							n.appendChild(s),
							i.appendChild(n),
							(e.$wrap = n);
					} else i.appendChild(s);
					(e.$el.dataset.imageFit = this.fancybox.option("Image.fit")),
						this.fancybox.setContent(e, i),
						s.complete || s.error
							? this.onImageStatusChange(e)
							: this.fancybox.showLoading(e);
				}
			}
			onImageStatusChange(e) {
				var t = e.$image;
				t &&
					"loading" === e.state &&
					(t.complete && t.naturalWidth && t.naturalHeight
						? (this.fancybox.hideLoading(e),
						  "contain" === this.fancybox.option("Image.fit") &&
								this.initSlidePanzoom(e),
						  e.$el.addEventListener("wheel", (t) => this.onWheel(e, t), {
								passive: !1,
						  }),
						  e.$content.addEventListener("click", (t) => this.onClick(e, t), {
								passive: !1,
						  }),
						  this.revealContent(e))
						: this.fancybox.setError(e, "{{IMAGE_ERROR}}"));
			}
			initSlidePanzoom(t) {
				t.Panzoom ||
					((t.Panzoom = new k(
						t.$el,
						p(!0, this.fancybox.option("Image.Panzoom", {}), {
							viewport: t.$wrap,
							content: t.$image,
							width: t._width,
							height: t._height,
							wrapInner: !1,
							textSelection: !0,
							touch: this.fancybox.option("Image.touch"),
							panOnlyZoomed: !0,
							click: !1,
							wheel: !1,
						})
					)),
					t.Panzoom.on("startAnimation", () => {
						this.fancybox.trigger("Image.startAnimation", t);
					}),
					t.Panzoom.on("endAnimation", () => {
						"zoomIn" === t.state && this.fancybox.done(t),
							this.handleCursor(t),
							this.fancybox.trigger("Image.endAnimation", t);
					}),
					t.Panzoom.on("afterUpdate", () => {
						this.handleCursor(t), this.fancybox.trigger("Image.afterUpdate", t);
					}));
			}
			revealContent(t) {
				null === this.fancybox.Carousel.prevPage &&
				t.index === this.fancybox.options.startIndex &&
				this.canZoom(t)
					? this.zoomIn()
					: this.fancybox.revealContent(t);
			}
			getZoomInfo(t) {
				var e = t.$thumb.getBoundingClientRect(),
					i = e.width,
					s = e.height,
					t = t.$content.getBoundingClientRect(),
					n = t.width,
					o = t.height,
					a = t.top - e.top,
					t = t.left - e.left;
				let r = this.fancybox.option("Image.zoomOpacity");
				return {
					top: a,
					left: t,
					scale: n && i ? i / n : 1,
					opacity: (r = "auto" === r ? 0.1 < Math.abs(i / s - n / o) : r),
				};
			}
			canZoom(t) {
				const e = this.fancybox,
					i = e.$container;
				if (window.visualViewport && 1 !== window.visualViewport.scale)
					return !1;
				if (t.Panzoom && !t.Panzoom.content.width) return !1;
				if (!e.option("Image.zoom") || "contain" !== e.option("Image.fit"))
					return !1;
				const s = t.$thumb;
				if (!s || "loading" === t.state) return !1;
				i.classList.add("fancybox__no-click");
				var n = s.getBoundingClientRect();
				let o;
				if (this.fancybox.option("Image.ignoreCoveredThumbnail")) {
					const t = document.elementFromPoint(n.left + 1, n.top + 1) === s,
						e = document.elementFromPoint(n.right - 1, n.bottom - 1) === s;
					o = t && e;
				} else
					o =
						document.elementFromPoint(
							n.left + 0.5 * n.width,
							n.top + 0.5 * n.height
						) === s;
				return i.classList.remove("fancybox__no-click"), o;
			}
			zoomIn() {
				const t = this.fancybox,
					e = t.getSlide(),
					i = e.Panzoom,
					{ top: s, left: n, scale: o, opacity: a } = this.getZoomInfo(e);
				t.trigger("reveal", e),
					i.panTo({
						x: -1 * n,
						y: -1 * s,
						scale: o,
						friction: 0,
						ignoreBounds: !0,
					}),
					(e.$content.style.visibility = ""),
					(e.state = "zoomIn"),
					!0 === a &&
						i.on("afterTransform", (t) => {
							("zoomIn" !== e.state && "zoomOut" !== e.state) ||
								(t.$content.style.opacity = Math.min(
									1,
									1 - (1 - t.content.scale) / (1 - o)
								));
						}),
					i.panTo({
						x: 0,
						y: 0,
						scale: 1,
						friction: this.fancybox.option("Image.zoomFriction"),
					});
			}
			zoomOut() {
				const t = this.fancybox,
					a = t.getSlide(),
					r = a.Panzoom;
				if (r) {
					(a.state = "zoomOut"),
						(t.state = "customClosing"),
						a.$caption && (a.$caption.style.visibility = "hidden");
					let o = this.fancybox.option("Image.zoomFriction");
					const e = (t) => {
						var { top: e, left: i, scale: s, opacity: n } = this.getZoomInfo(a);
						t || n || (o *= 0.82),
							r.panTo({
								x: -1 * i,
								y: -1 * e,
								scale: s,
								friction: o,
								ignoreBounds: !0,
							}),
							(o *= 0.98);
					};
					window.addEventListener("scroll", e),
						r.once("endAnimation", () => {
							window.removeEventListener("scroll", e), t.destroy();
						}),
						e();
				}
			}
			handleCursor(t) {
				if ("image" === t.type && t.$el) {
					const e = t.Panzoom,
						i = this.fancybox.option("Image.click", !1, t),
						s = this.fancybox.option("Image.touch"),
						n = t.$el.classList,
						o = this.fancybox.option("Image.canZoomInClass"),
						a = this.fancybox.option("Image.canZoomOutClass");
					n.remove(a),
						n.remove(o),
						e && "toggleZoom" === i
							? e &&
							  1 === e.content.scale &&
							  0.01 < e.option("maxScale") - e.content.scale
								? n.add(o)
								: 1 < e.content.scale && !s && n.add(a)
							: "close" === i && n.add(a);
				}
			}
			onWheel(t, e) {
				if (
					"ready" === this.fancybox.state &&
					!1 !== this.fancybox.trigger("Image.wheel", e)
				)
					switch (this.fancybox.option("Image.wheel")) {
						case "zoom":
							"done" === t.state && t.Panzoom && t.Panzoom.zoomWithWheel(e);
							break;
						case "close":
							this.fancybox.close();
							break;
						case "slide":
							this.fancybox[e.deltaY < 0 ? "prev" : "next"]();
					}
			}
			onClick(e, i) {
				if ("ready" === this.fancybox.state) {
					var t = e.Panzoom;
					if (
						!t ||
						(!t.dragPosition.midPoint &&
							0 === t.dragOffset.x &&
							0 === t.dragOffset.y &&
							1 === t.dragOffset.scale)
					) {
						if (this.fancybox.Carousel.Panzoom.lockAxis) return !1;
						const s = (t) => {
								switch (t) {
									case "toggleZoom":
										i.stopPropagation(),
											e.Panzoom && e.Panzoom.zoomWithClick(i);
										break;
									case "close":
										this.fancybox.close();
										break;
									case "next":
										i.stopPropagation(), this.fancybox.next();
								}
							},
							n = this.fancybox.option("Image.click"),
							o = this.fancybox.option("Image.doubleClick");
						o
							? this.clickTimer
								? (clearTimeout(this.clickTimer),
								  (this.clickTimer = null),
								  s(o))
								: (this.clickTimer = setTimeout(() => {
										(this.clickTimer = null), s(n);
								  }, 300))
							: s(n);
					}
				}
			}
			onPageChange(t, e) {
				const i = t.getSlide();
				e.slides.forEach((t) => {
					t.Panzoom &&
						"done" === t.state &&
						t.index !== i.index &&
						t.Panzoom.panTo({ x: 0, y: 0, scale: 1, friction: 0.8 });
				});
			}
			attach() {
				this.fancybox.on(this.events);
			}
			detach() {
				this.fancybox.off(this.events);
			}
		}
		ue.defaults = {
			canZoomInClass: "can-zoom_in",
			canZoomOutClass: "can-zoom_out",
			zoom: !0,
			zoomOpacity: "auto",
			zoomFriction: 0.82,
			ignoreCoveredThumbnail: !1,
			touch: !0,
			click: "toggleZoom",
			doubleClick: null,
			wheel: "zoom",
			fit: "contain",
			wrap: !1,
			Panzoom: { ratio: 1 },
		};
		class D {
			constructor(t) {
				this.fancybox = t;
				for (const t of ["onChange", "onClosing"]) this[t] = this[t].bind(this);
				(this.events = {
					initCarousel: this.onChange,
					"Carousel.change": this.onChange,
					closing: this.onClosing,
				}),
					(this.hasCreatedHistory = !1),
					(this.origHash = ""),
					(this.timer = null);
			}
			onChange(t) {
				var e = t.Carousel;
				this.timer && clearTimeout(this.timer);
				const i = null === e.prevPage,
					s = t.getSlide(),
					n = new URL(document.URL).hash;
				let o = !1;
				if (s.slug) o = "#" + s.slug;
				else {
					const i = s.$trigger && s.$trigger.dataset,
						n = t.option("slug") || (i && i.fancybox);
					n &&
						n.length &&
						"true" !== n &&
						(o = "#" + n + (1 < e.slides.length ? "-" + (s.index + 1) : ""));
				}
				i && (this.origHash = n !== o ? n : ""),
					o &&
						n !== o &&
						(this.timer = setTimeout(() => {
							try {
								window.history[i ? "pushState" : "replaceState"](
									{},
									document.title,
									window.location.pathname + window.location.search + o
								),
									i && (this.hasCreatedHistory = !0);
							} catch (t) {}
						}, 300));
			}
			onClosing() {
				if (
					(this.timer && clearTimeout(this.timer), !0 !== this.hasSilentClose)
				)
					try {
						window.history.replaceState(
							{},
							document.title,
							window.location.pathname +
								window.location.search +
								(this.origHash || "")
						);
					} catch (t) {}
			}
			attach(t) {
				t.on(this.events);
			}
			detach(t) {
				t.off(this.events);
			}
			static startFromUrl() {
				const e = D.Fancybox;
				if (e && !e.getInstance() && !1 !== e.defaults.Hash) {
					var { hash: i, slug: s, index: n } = D.getParsedURL();
					if (s) {
						let t = document.querySelector(`[data-slug="${i}"]`);
						t &&
							t.dispatchEvent(
								new CustomEvent("click", { bubbles: !0, cancelable: !0 })
							),
							e.getInstance() ||
								((i = document.querySelectorAll(`[data-fancybox="${s}"]`))
									.length &&
									(null === n && 1 === i.length
										? (t = i[0])
										: n && (t = i[n - 1]),
									t &&
										t.dispatchEvent(
											new CustomEvent("click", { bubbles: !0, cancelable: !0 })
										)));
					}
				}
			}
			static onHashChange() {
				const { slug: t, index: e } = D.getParsedURL(),
					i = D.Fancybox,
					s = i && i.getInstance();
				if (s && s.plugins.Hash) {
					if (t) {
						const i = s.Carousel;
						if (t === s.option("slug")) return i.slideTo(e - 1);
						for (var n of i.slides)
							if (n.slug && n.slug === t) return i.slideTo(n.index);
						var o = s.getSlide(),
							o = o.$trigger && o.$trigger.dataset;
						if (o && o.fancybox === t) return i.slideTo(e - 1);
					}
					(s.plugins.Hash.hasSilentClose = !0), s.close();
				}
				D.startFromUrl();
			}
			static create(t) {
				function e() {
					window.addEventListener("hashchange", D.onHashChange, !1),
						D.startFromUrl();
				}
				(D.Fancybox = t),
					A &&
						window.requestAnimationFrame(() => {
							/complete|interactive|loaded/.test(document.readyState)
								? e()
								: document.addEventListener("DOMContentLoaded", e);
						});
			}
			static destroy() {
				window.removeEventListener("hashchange", D.onHashChange, !1);
			}
			static getParsedURL() {
				const t = window.location.hash.substr(1),
					e = t.split("-"),
					i =
						(1 < e.length &&
							/^\+?\d+$/.test(e[e.length - 1]) &&
							parseInt(e.pop(-1), 10)) ||
						null;
				return { hash: t, slug: e.join("-"), index: i };
			}
		}
		const P = {
			pageXOffset: 0,
			pageYOffset: 0,
			element: () =>
				document.fullscreenElement ||
				document.mozFullScreenElement ||
				document.webkitFullscreenElement,
			activate(t) {
				(P.pageXOffset = window.pageXOffset),
					(P.pageYOffset = window.pageYOffset),
					t.requestFullscreen
						? t.requestFullscreen()
						: t.mozRequestFullScreen
						? t.mozRequestFullScreen()
						: t.webkitRequestFullscreen
						? t.webkitRequestFullscreen()
						: t.msRequestFullscreen && t.msRequestFullscreen();
			},
			deactivate() {
				document.exitFullscreen
					? document.exitFullscreen()
					: document.mozCancelFullScreen
					? document.mozCancelFullScreen()
					: document.webkitExitFullscreen && document.webkitExitFullscreen();
			},
		};
		class me {
			constructor(t) {
				(this.fancybox = t),
					(this.active = !1),
					(this.handleVisibilityChange =
						this.handleVisibilityChange.bind(this));
			}
			isActive() {
				return this.active;
			}
			setTimer() {
				if (this.active && !this.timer) {
					var e = this.fancybox.option("slideshow.delay", 3e3);
					this.timer = setTimeout(() => {
						(this.timer = null),
							this.fancybox.option("infinite") ||
							this.fancybox.getSlide().index !==
								this.fancybox.Carousel.slides.length - 1
								? this.fancybox.next()
								: this.fancybox.jumpTo(0, { friction: 0 });
					}, e);
					let t = this.$progress;
					t ||
						((t = document.createElement("div")).classList.add(
							"fancybox__progress"
						),
						this.fancybox.$carousel.parentNode.insertBefore(
							t,
							this.fancybox.$carousel
						),
						(this.$progress = t).offsetHeight),
						(t.style.transitionDuration = e + "ms"),
						(t.style.transform = "scaleX(1)");
				}
			}
			clearTimer() {
				clearTimeout(this.timer),
					(this.timer = null),
					this.$progress &&
						((this.$progress.style.transitionDuration = ""),
						(this.$progress.style.transform = ""),
						this.$progress.offsetHeight);
			}
			activate() {
				this.active ||
					((this.active = !0),
					this.fancybox.$container.classList.add("has-slideshow"),
					"done" === this.fancybox.getSlide().state && this.setTimer(),
					document.addEventListener(
						"visibilitychange",
						this.handleVisibilityChange,
						!1
					));
			}
			handleVisibilityChange() {
				this.deactivate();
			}
			deactivate() {
				(this.active = !1),
					this.clearTimer(),
					this.fancybox.$container.classList.remove("has-slideshow"),
					document.removeEventListener(
						"visibilitychange",
						this.handleVisibilityChange,
						!1
					);
			}
			toggle() {
				this.active
					? this.deactivate()
					: 1 < this.fancybox.Carousel.slides.length && this.activate();
			}
		}
		class ge {
			constructor(t) {
				(this.fancybox = t), (this.$container = null), (this.state = "init");
				for (const t of [
					"onInit",
					"onPrepare",
					"onDone",
					"onKeydown",
					"onClosing",
					"onChange",
					"onSettle",
					"onRefresh",
				])
					this[t] = this[t].bind(this);
				this.events = {
					init: this.onInit,
					prepare: this.onPrepare,
					done: this.onDone,
					keydown: this.onKeydown,
					closing: this.onClosing,
					"Carousel.change": this.onChange,
					"Carousel.settle": this.onSettle,
					"Carousel.Panzoom.touchStart": () => this.onRefresh(),
					"Image.startAnimation": (t, e) => this.onRefresh(e),
					"Image.afterUpdate": (t, e) => this.onRefresh(e),
				};
			}
			onInit() {
				if (this.fancybox.option("Toolbar.autoEnable")) {
					let t = !1;
					for (const e of this.fancybox.items)
						if ("image" === e.type) {
							t = !0;
							break;
						}
					if (!t) return void (this.state = "disabled");
				}
				for (const t of this.fancybox.option("Toolbar.display"))
					if ("close" === (g(t) ? t.id : t)) {
						this.fancybox.options.closeButton = !1;
						break;
					}
			}
			onPrepare() {
				const t = this.fancybox;
				if (
					"init" === this.state &&
					(this.build(),
					this.update(),
					(this.Slideshow = new me(t)),
					!t.Carousel.prevPage &&
						(t.option("slideshow.autoStart") && this.Slideshow.activate(),
						t.option("fullscreen.autoStart") && !P.element()))
				)
					try {
						P.activate(t.$container);
					} catch (t) {}
			}
			onFsChange() {
				window.scrollTo(P.pageXOffset, P.pageYOffset);
			}
			onSettle() {
				const t = this.fancybox,
					e = this.Slideshow;
				e &&
					e.isActive() &&
					(t.getSlide().index !== t.Carousel.slides.length - 1 ||
					t.option("infinite")
						? "done" === t.getSlide().state && e.setTimer()
						: e.deactivate());
			}
			onChange() {
				this.update(),
					this.Slideshow &&
						this.Slideshow.isActive() &&
						this.Slideshow.clearTimer();
			}
			onDone(t, e) {
				const i = this.Slideshow;
				e.index === t.getSlide().index &&
					(this.update(),
					i &&
						i.isActive() &&
						(t.option("infinite") || e.index !== t.Carousel.slides.length - 1
							? i.setTimer()
							: i.deactivate()));
			}
			onRefresh(t) {
				(t && t.index !== this.fancybox.getSlide().index) ||
					(this.update(),
					!this.Slideshow ||
						!this.Slideshow.isActive() ||
						(t && "done" !== t.state) ||
						this.Slideshow.deactivate());
			}
			onKeydown(t, e, i) {
				" " === e &&
					this.Slideshow &&
					(this.Slideshow.toggle(), i.preventDefault());
			}
			onClosing() {
				this.Slideshow && this.Slideshow.deactivate(),
					document.removeEventListener("fullscreenchange", this.onFsChange);
			}
			createElement(t) {
				let e;
				"div" === t.type
					? (e = document.createElement("div"))
					: (e = document.createElement(
							"link" === t.type ? "a" : "button"
					  )).classList.add("carousel__button"),
					(e.innerHTML = t.html),
					e.setAttribute("tabindex", t.tabindex || 0),
					t.class && e.classList.add(...t.class.split(" "));
				for (const i in t.attr) e.setAttribute(i, t.attr[i]);
				t.label &&
					e.setAttribute("title", this.fancybox.localize(`{{${t.label}}}`)),
					t.click && e.addEventListener("click", t.click.bind(this)),
					"prev" === t.id && e.setAttribute("data-fancybox-prev", ""),
					"next" === t.id && e.setAttribute("data-fancybox-next", "");
				const i = e.querySelector("svg");
				return (
					i &&
						(i.setAttribute("role", "img"),
						i.setAttribute("tabindex", "-1"),
						i.setAttribute("xmlns", "http://www.w3.org/2000/svg")),
					e
				);
			}
			build() {
				this.cleanup();
				const e = this.fancybox.option("Toolbar.items"),
					s = [
						{ position: "left", items: [] },
						{ position: "center", items: [] },
						{ position: "right", items: [] },
					],
					n = this.fancybox.plugins.Thumbs;
				for (const o of this.fancybox.option("Toolbar.display")) {
					let t, i;
					if (
						((i = g(o) ? ((t = o.id), p({}, e[t], o)) : ((t = o), e[t])),
						!(
							["counter", "next", "prev", "slideshow"].includes(t) &&
							this.fancybox.items.length < 2
						))
					) {
						if ("fullscreen" === t) {
							if (!document.fullscreenEnabled || window.fullScreen) continue;
							document.addEventListener("fullscreenchange", this.onFsChange);
						}
						if (("thumbs" !== t || (n && "disabled" !== n.state)) && i) {
							let e = i.position || "right",
								t = s.find((t) => t.position === e);
							t && t.items.push(i);
						}
					}
				}
				const o = document.createElement("div");
				o.classList.add("fancybox__toolbar");
				for (const g of s)
					if (g.items.length) {
						const t = document.createElement("div");
						t.classList.add("fancybox__toolbar__items"),
							t.classList.add("fancybox__toolbar__items--" + g.position);
						for (const e of g.items) t.appendChild(this.createElement(e));
						o.appendChild(t);
					}
				this.fancybox.$carousel.parentNode.insertBefore(
					o,
					this.fancybox.$carousel
				),
					(this.$container = o);
			}
			update() {
				const t = this.fancybox.getSlide(),
					e = t.index,
					i = this.fancybox.items.length,
					s = t.downloadSrc || ("image" !== t.type || t.error ? null : t.src);
				for (const t of this.fancybox.$container.querySelectorAll(
					"a.fancybox__button--download"
				))
					s
						? (t.removeAttribute("disabled"),
						  t.removeAttribute("tabindex"),
						  t.setAttribute("href", s),
						  t.setAttribute("download", s),
						  t.setAttribute("target", "_blank"))
						: (t.setAttribute("disabled", ""),
						  t.setAttribute("tabindex", -1),
						  t.removeAttribute("href"),
						  t.removeAttribute("download"));
				const n = t.Panzoom,
					o = n && n.option("maxScale") > n.option("baseScale");
				for (const t of this.fancybox.$container.querySelectorAll(
					".fancybox__button--zoom"
				))
					o ? t.removeAttribute("disabled") : t.setAttribute("disabled", "");
				for (const e of this.fancybox.$container.querySelectorAll(
					"[data-fancybox-index]"
				))
					e.innerHTML = t.index + 1;
				for (const t of this.fancybox.$container.querySelectorAll(
					"[data-fancybox-count]"
				))
					t.innerHTML = i;
				if (!this.fancybox.option("infinite")) {
					for (const t of this.fancybox.$container.querySelectorAll(
						"[data-fancybox-prev]"
					))
						0 === e
							? t.setAttribute("disabled", "")
							: t.removeAttribute("disabled");
					for (const t of this.fancybox.$container.querySelectorAll(
						"[data-fancybox-next]"
					))
						e === i - 1
							? t.setAttribute("disabled", "")
							: t.removeAttribute("disabled");
				}
			}
			cleanup() {
				this.Slideshow &&
					this.Slideshow.isActive() &&
					this.Slideshow.clearTimer(),
					this.$container && this.$container.remove(),
					(this.$container = null);
			}
			attach() {
				this.fancybox.on(this.events);
			}
			detach() {
				this.fancybox.off(this.events), this.cleanup();
			}
		}
		ge.defaults = {
			display: [
				"counter",
				"zoom",
				"slideshow",
				"fullscreen",
				"thumbs",
				"close",
			],
			autoEnable: !0,
			items: {
				counter: {
					position: "left",
					type: "div",
					class: "fancybox__counter",
					html: '<span data-fancybox-index=""></span>&nbsp;/&nbsp;<span data-fancybox-count=""></span>',
					attr: { tabindex: -1 },
				},
				prev: {
					type: "button",
					class: "fancybox__button--prev",
					label: "PREV",
					html: '<svg viewBox="0 0 24 24"><path d="M15 4l-8 8 8 8"/></svg>',
					attr: { "data-fancybox-prev": "" },
				},
				next: {
					type: "button",
					class: "fancybox__button--next",
					label: "NEXT",
					html: '<svg viewBox="0 0 24 24"><path d="M8 4l8 8-8 8"/></svg>',
					attr: { "data-fancybox-next": "" },
				},
				fullscreen: {
					type: "button",
					class: "fancybox__button--fullscreen",
					label: "TOGGLE_FULLSCREEN",
					html: '<svg viewBox="0 0 24 24">\n                <g><path d="M3 8 V3h5"></path><path d="M21 8V3h-5"></path><path d="M8 21H3v-5"></path><path d="M16 21h5v-5"></path></g>\n                <g><path d="M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5"/></g>\n            </svg>',
					click: function (t) {
						t.preventDefault(),
							P.element()
								? P.deactivate()
								: P.activate(this.fancybox.$container);
					},
				},
				slideshow: {
					type: "button",
					class: "fancybox__button--slideshow",
					label: "TOGGLE_SLIDESHOW",
					html: '<svg viewBox="0 0 24 24">\n                <g><path d="M6 4v16"/><path d="M20 12L6 20"/><path d="M20 12L6 4"/></g>\n                <g><path d="M7 4v15M17 4v15"/></g>\n            </svg>',
					click: function (t) {
						t.preventDefault(), this.Slideshow.toggle();
					},
				},
				zoom: {
					type: "button",
					class: "fancybox__button--zoom",
					label: "TOGGLE_ZOOM",
					html: '<svg viewBox="0 0 24 24"><circle cx="10" cy="10" r="7"></circle><path d="M16 16 L21 21"></svg>',
					click: function (t) {
						t.preventDefault();
						const e = this.fancybox.getSlide().Panzoom;
						e && e.toggleZoom();
					},
				},
				download: {
					type: "link",
					label: "DOWNLOAD",
					class: "fancybox__button--download",
					html: '<svg viewBox="0 0 24 24"><path d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17"/></svg>',
					click: function (t) {
						t.stopPropagation();
					},
				},
				thumbs: {
					type: "button",
					label: "TOGGLE_THUMBS",
					class: "fancybox__button--thumbs",
					html: '<svg viewBox="0 0 24 24"><circle cx="4" cy="4" r="1" /><circle cx="12" cy="4" r="1" transform="rotate(90 12 4)"/><circle cx="20" cy="4" r="1" transform="rotate(90 20 4)"/><circle cx="4" cy="12" r="1" transform="rotate(90 4 12)"/><circle cx="12" cy="12" r="1" transform="rotate(90 12 12)"/><circle cx="20" cy="12" r="1" transform="rotate(90 20 12)"/><circle cx="4" cy="20" r="1" transform="rotate(90 4 20)"/><circle cx="12" cy="20" r="1" transform="rotate(90 12 20)"/><circle cx="20" cy="20" r="1" transform="rotate(90 20 20)"/></svg>',
					click: function (t) {
						t.stopPropagation();
						const e = this.fancybox.plugins.Thumbs;
						e && e.toggle();
					},
				},
				close: {
					type: "button",
					label: "CLOSE",
					class: "fancybox__button--close",
					html: '<svg viewBox="0 0 24 24"><path d="M20 20L4 4m16 0L4 20"></path></svg>',
					attr: { "data-fancybox-close": "", tabindex: 0 },
				},
			},
		};
		e = {
			ScrollLock: class {
				constructor(t) {
					(this.fancybox = t),
						(this.viewport = null),
						(this.pendingUpdate = null);
					for (const t of [
						"onReady",
						"onResize",
						"onTouchstart",
						"onTouchmove",
					])
						this[t] = this[t].bind(this);
				}
				onReady() {
					const t = window.visualViewport;
					t &&
						((this.viewport = t),
						(this.startY = 0),
						t.addEventListener("resize", this.onResize),
						this.updateViewport()),
						window.addEventListener("touchstart", this.onTouchstart, {
							passive: !1,
						}),
						window.addEventListener("touchmove", this.onTouchmove, {
							passive: !1,
						}),
						window.addEventListener("wheel", this.onWheel, { passive: !1 });
				}
				onResize() {
					this.updateViewport();
				}
				updateViewport() {
					const t = this.fancybox,
						s = this.viewport,
						n = s.scale || 1,
						o = t.$container;
					if (o) {
						let t = "",
							e = "",
							i = "";
						0.1 < n - 1 &&
							((t = s.width * n + "px"),
							(e = s.height * n + "px"),
							(i = `translate3d(${s.offsetLeft}px, ${s.offsetTop}px, 0) scale(${
								1 / n
							})`)),
							(o.style.width = t),
							(o.style.height = e),
							(o.style.transform = i);
					}
				}
				onTouchstart(t) {
					this.startY = (t.touches ? t.touches[0] : t).screenY;
				}
				onTouchmove(t) {
					var e = this.startY,
						i = window.innerWidth / window.document.documentElement.clientWidth;
					if (t.cancelable && !(1 < t.touches.length || 1 != i)) {
						i = m(t.composedPath()[0]);
						if (i) {
							const s = window.getComputedStyle(i),
								n = parseInt(s.getPropertyValue("height"), 10),
								o = (t.touches ? t.touches[0] : t).screenY,
								a = e <= o && 0 === i.scrollTop,
								r = o <= e && i.scrollHeight - i.scrollTop === n;
							(a || r) && t.preventDefault();
						} else t.preventDefault();
					}
				}
				onWheel(t) {
					m(t.composedPath()[0]) || t.preventDefault();
				}
				cleanup() {
					this.pendingUpdate &&
						(cancelAnimationFrame(this.pendingUpdate),
						(this.pendingUpdate = null));
					const t = this.viewport;
					t &&
						(t.removeEventListener("resize", this.onResize),
						(this.viewport = null)),
						window.removeEventListener("touchstart", this.onTouchstart, !1),
						window.removeEventListener("touchmove", this.onTouchmove, !1),
						window.removeEventListener("wheel", this.onWheel, { passive: !1 });
				}
				attach() {
					this.fancybox.on("initLayout", this.onReady);
				}
				detach() {
					this.fancybox.off("initLayout", this.onReady), this.cleanup();
				}
			},
			Thumbs: le,
			Html: he,
			Toolbar: ge,
			Image: ue,
			Hash: D,
		};
		const pe = {
				startIndex: 0,
				preload: 1,
				infinite: !0,
				showClass: "fancybox-zoomInUp",
				hideClass: "fancybox-fadeOut",
				animated: !0,
				hideScrollbar: !0,
				parentEl: null,
				mainClass: null,
				autoFocus: !0,
				trapFocus: !0,
				placeFocusBack: !0,
				click: "close",
				closeButton: "inside",
				dragToClose: !0,
				keyboard: {
					Escape: "close",
					Delete: "close",
					Backspace: "close",
					PageUp: "next",
					PageDown: "prev",
					ArrowUp: "next",
					ArrowDown: "prev",
					ArrowRight: "next",
					ArrowLeft: "prev",
				},
				template: {
					closeButton:
						'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M20 20L4 4m16 0L4 20"/></svg>',
					spinner:
						'<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="25 25 50 50" tabindex="-1"><circle cx="50" cy="50" r="20"/></svg>',
					main: null,
				},
				l10n: {
					CLOSE: "Close",
					NEXT: "Next",
					PREV: "Previous",
					MODAL: "You can close this modal content with the ESC key",
					ERROR: "Something Went Wrong, Please Try Again Later",
					IMAGE_ERROR: "Image Not Found",
					ELEMENT_NOT_FOUND: "HTML Element Not Found",
					AJAX_NOT_FOUND: "Error Loading AJAX : Not Found",
					AJAX_FORBIDDEN: "Error Loading AJAX : Forbidden",
					IFRAME_ERROR: "Error Loading Page",
					TOGGLE_ZOOM: "Toggle zoom level",
					TOGGLE_THUMBS: "Toggle thumbnails",
					TOGGLE_SLIDESHOW: "Toggle slideshow",
					TOGGLE_FULLSCREEN: "Toggle full-screen mode",
					DOWNLOAD: "Download",
				},
			},
			$ = new Map();
		let fe = 0;
		class O extends te {
			constructor(t, e = {}) {
				(t = t.map(
					(t) => (
						t.width && (t._width = t.width),
						t.height && (t._height = t.height),
						t
					)
				)),
					super(p(!0, {}, pe, e)),
					this.bindHandlers(),
					(this.state = "init"),
					this.setItems(t),
					this.attachPlugins(O.Plugins),
					this.trigger("init"),
					!0 === this.option("hideScrollbar") && this.hideScrollbar(),
					this.initLayout(),
					this.initCarousel(),
					this.attachEvents(),
					$.set(this.id, this),
					this.trigger("prepare"),
					(this.state = "ready"),
					this.trigger("ready"),
					this.$container.setAttribute("aria-hidden", "false"),
					this.option("trapFocus") && this.focus();
			}
			option(t, ...e) {
				var i = this.getSlide();
				let s = i ? i[t] : void 0;
				return void 0 !== s
					? (s = "function" == typeof s ? s.call(this, this, ...e) : s)
					: super.option(t, ...e);
			}
			bindHandlers() {
				for (const t of [
					"onMousedown",
					"onKeydown",
					"onClick",
					"onFocus",
					"onCreateSlide",
					"onSettle",
					"onTouchMove",
					"onTouchEnd",
					"onTransform",
				])
					this[t] = this[t].bind(this);
			}
			attachEvents() {
				document.addEventListener("mousedown", this.onMousedown),
					document.addEventListener("keydown", this.onKeydown, !0),
					this.option("trapFocus") &&
						document.addEventListener("focus", this.onFocus, !0),
					this.$container.addEventListener("click", this.onClick);
			}
			detachEvents() {
				document.removeEventListener("mousedown", this.onMousedown),
					document.removeEventListener("keydown", this.onKeydown, !0),
					document.removeEventListener("focus", this.onFocus, !0),
					this.$container.removeEventListener("click", this.onClick);
			}
			initLayout() {
				this.$root = this.option("parentEl") || document.body;
				var t = this.option("template.main");
				t &&
					(this.$root.insertAdjacentHTML("beforeend", this.localize(t)),
					(this.$container = this.$root.querySelector(".fancybox__container"))),
					this.$container ||
						((this.$container = document.createElement("div")),
						this.$root.appendChild(this.$container)),
					(this.$container.onscroll = () => (
						(this.$container.scrollLeft = 0), !1
					)),
					Object.entries({
						class: "fancybox__container",
						role: "dialog",
						tabIndex: "-1",
						"aria-modal": "true",
						"aria-hidden": "true",
						"aria-label": this.localize("{{MODAL}}"),
					}).forEach((t) => this.$container.setAttribute(...t)),
					this.option("animated") &&
						this.$container.classList.add("is-animated"),
					(this.$backdrop = this.$container.querySelector(
						".fancybox__backdrop"
					)),
					this.$backdrop ||
						((this.$backdrop = document.createElement("div")),
						this.$backdrop.classList.add("fancybox__backdrop"),
						this.$container.appendChild(this.$backdrop)),
					(this.$carousel = this.$container.querySelector(
						".fancybox__carousel"
					)),
					this.$carousel ||
						((this.$carousel = document.createElement("div")),
						this.$carousel.classList.add("fancybox__carousel"),
						this.$container.appendChild(this.$carousel)),
					((this.$container.Fancybox = this).id =
						this.$container.getAttribute("id")),
					this.id ||
						((this.id = this.options.id || ++fe),
						this.$container.setAttribute("id", "fancybox-" + this.id));
				const e = this.option("mainClass");
				return (
					e && this.$container.classList.add(...e.split(" ")),
					document.documentElement.classList.add("with-fancybox"),
					this.trigger("initLayout"),
					this
				);
			}
			setItems(i) {
				const s = [];
				for (const n of i) {
					const i = n.$trigger;
					if (i) {
						const s = i.dataset || {};
						(n.src = s.src || i.getAttribute("href") || n.src),
							(n.type = s.type || n.type),
							!n.src &&
								i instanceof HTMLImageElement &&
								(n.src = i.currentSrc || n.$trigger.src);
					}
					let e = n.$thumb;
					if (!e) {
						let t = n.$trigger && n.$trigger.origTarget;
						!(e = t
							? t instanceof HTMLImageElement
								? t
								: t.querySelector("img:not([aria-hidden])")
							: e) &&
							n.$trigger &&
							(e =
								n.$trigger instanceof HTMLImageElement
									? n.$trigger
									: n.$trigger.querySelector("img:not([aria-hidden])"));
					}
					n.$thumb = e || null;
					let t = n.thumb;
					!t &&
						e &&
						!(t = e.currentSrc || e.src) &&
						e.dataset &&
						(t = e.dataset.lazySrc || e.dataset.src),
						t || "image" !== n.type || (t = n.src),
						(n.thumb = t || null),
						(n.caption = n.caption || ""),
						s.push(n);
				}
				this.items = s;
			}
			initCarousel() {
				return (
					(this.Carousel = new T(
						this.$carousel,
						p(
							!0,
							{},
							{
								prefix: "",
								classNames: {
									viewport: "fancybox__viewport",
									track: "fancybox__track",
									slide: "fancybox__slide",
								},
								textSelection: !0,
								preload: this.option("preload"),
								friction: 0.88,
								slides: this.items,
								initialPage: this.options.startIndex,
								slidesPerPage: 1,
								infiniteX: this.option("infinite"),
								infiniteY: !0,
								l10n: this.option("l10n"),
								Dots: !1,
								Navigation: {
									classNames: {
										main: "fancybox__nav",
										button: "carousel__button",
										next: "is-next",
										prev: "is-prev",
									},
								},
								Panzoom: {
									textSelection: !0,
									panOnlyZoomed: () =>
										this.Carousel &&
										this.Carousel.pages &&
										this.Carousel.pages.length < 2 &&
										!this.option("dragToClose"),
									lockAxis: () => {
										if (this.Carousel) {
											let t = "x";
											return this.option("dragToClose") && (t += "y"), t;
										}
									},
								},
								on: {
									"*": (t, ...e) => this.trigger("Carousel." + t, ...e),
									init: (t) => (this.Carousel = t),
									createSlide: this.onCreateSlide,
									settle: this.onSettle,
								},
							},
							this.option("Carousel")
						)
					)),
					this.option("dragToClose") &&
						this.Carousel.Panzoom.on({
							touchMove: this.onTouchMove,
							afterTransform: this.onTransform,
							touchEnd: this.onTouchEnd,
						}),
					this.trigger("initCarousel"),
					this
				);
			}
			onCreateSlide(t, e) {
				let i = e.caption || "";
				if (
					"string" ==
						typeof (i =
							"function" == typeof this.options.caption
								? this.options.caption.call(this, this, this.Carousel, e)
								: i) &&
					i.length
				) {
					const t = document.createElement("div"),
						s = `fancybox__caption_${this.id}_` + e.index;
					(t.className = "fancybox__caption"),
						(t.innerHTML = i),
						t.setAttribute("id", s),
						(e.$caption = e.$el.appendChild(t)),
						e.$el.classList.add("has-caption"),
						e.$el.setAttribute("aria-labelledby", s);
				}
			}
			onSettle() {
				this.option("autoFocus") && this.focus();
			}
			onFocus(t) {
				this.focus(t);
			}
			onClick(e) {
				if (!e.defaultPrevented) {
					let t = e.composedPath()[0];
					if (t.matches("[data-fancybox-close]"))
						return e.preventDefault(), void O.close(!1, e);
					if (t.matches("[data-fancybox-next]"))
						return e.preventDefault(), void O.next();
					if (t.matches("[data-fancybox-prev]"))
						return e.preventDefault(), void O.prev();
					if (
						(t.matches(re) || document.activeElement.blur(),
						!t.closest(".fancybox__content") &&
							!getSelection().toString().length &&
							!1 !== this.trigger("click", e))
					)
						switch (this.option("click")) {
							case "close":
								this.close();
								break;
							case "next":
								this.next();
						}
				}
			}
			onTouchMove() {
				var t = this.getSlide().Panzoom;
				return !t || 1 === t.content.scale;
			}
			onTouchEnd(t) {
				var e = t.dragOffset.y;
				150 <= Math.abs(e) || (35 <= Math.abs(e) && t.dragOffset.time < 350)
					? (this.option("hideClass") &&
							(this.getSlide().hideClass =
								"fancybox-throwOut" + (t.content.y < 0 ? "Up" : "Down")),
					  this.close())
					: "y" === t.lockAxis && t.panTo({ y: 0 });
			}
			onTransform(t) {
				var e;
				this.$backdrop &&
					((e =
						(e = Math.abs(t.content.y)) < 1
							? ""
							: Math.max(
									0.33,
									Math.min(1, 1 - (e / t.content.fitHeight) * 1.5)
							  )),
					this.$container.style.setProperty("--fancybox-ts", e ? "0s" : ""),
					this.$container.style.setProperty("--fancybox-opacity", e));
			}
			onMousedown() {
				"ready" === this.state && document.body.classList.add("is-using-mouse");
			}
			onKeydown(t) {
				if (O.getInstance().id === this.id) {
					document.body.classList.remove("is-using-mouse");
					var e = t.key,
						i = this.option("keyboard");
					if (i && !t.ctrlKey && !t.altKey && !t.shiftKey) {
						const s = t.composedPath()[0],
							n = document.activeElement && document.activeElement.classList,
							o = n && n.contains("carousel__button");
						("Escape" === e ||
							o ||
							(!t.target.isContentEditable &&
								-1 ===
									[
										"BUTTON",
										"TEXTAREA",
										"OPTION",
										"INPUT",
										"SELECT",
										"VIDEO",
									].indexOf(s.nodeName))) &&
							!1 !== this.trigger("keydown", e, t) &&
							"function" == typeof this[(t = i[e])] &&
							this[t]();
					}
				}
			}
			getSlide() {
				const t = this.Carousel;
				if (!t) return null;
				var e = null === t.page ? t.option("initialPage") : t.page,
					i = t.pages || [];
				return i.length && i[e] ? i[e].slides[0] : null;
			}
			focus(i) {
				if (
					!(
						O.ignoreFocusChange ||
						-1 <
							["init", "closing", "customClosing", "destroy"].indexOf(
								this.state
							)
					)
				) {
					const n = this.$container,
						o = this.getSlide(),
						a = "done" === o.state ? o.$el : null;
					if (!a || !a.contains(document.activeElement)) {
						i && i.preventDefault(), (O.ignoreFocusChange = !0);
						const r = Array.from(n.querySelectorAll(re));
						let t,
							e = [];
						for (var s of r) {
							const n = s.offsetParent,
								o = a && a.contains(s),
								r = !this.Carousel.$viewport.contains(s);
							n && (o || r)
								? (e.push(s),
								  void 0 !== s.dataset.origTabindex &&
										((s.tabIndex = s.dataset.origTabindex),
										s.removeAttribute("data-orig-tabindex")),
								  (s.hasAttribute("autoFocus") ||
										(!t && o && !s.classList.contains("carousel__button"))) &&
										(t = s))
								: ((s.dataset.origTabindex =
										void 0 === s.dataset.origTabindex
											? s.getAttribute("tabindex")
											: s.dataset.origTabindex),
								  (s.tabIndex = -1));
						}
						i
							? -1 < e.indexOf(i.target)
								? (this.lastFocus = i.target)
								: this.lastFocus === n
								? M(e[e.length - 1])
								: M(n)
							: this.option("autoFocus") && t
							? M(t)
							: e.indexOf(document.activeElement) < 0 && M(n),
							(this.lastFocus = document.activeElement),
							(O.ignoreFocusChange = !1);
					}
				}
			}
			hideScrollbar() {
				if (A) {
					var e =
							window.innerWidth -
							document.documentElement.getBoundingClientRect().width,
						i = "fancybox-style-noscroll";
					let t = document.getElementById(i);
					t ||
						(0 < e &&
							(((t = document.createElement("style")).id = i),
							(t.type = "text/css"),
							(t.innerHTML = `.compensate-for-scrollbar {padding-right: ${e}px;}`),
							document.getElementsByTagName("head")[0].appendChild(t),
							document.body.classList.add("compensate-for-scrollbar")));
				}
			}
			revealScrollbar() {
				document.body.classList.remove("compensate-for-scrollbar");
				const t = document.getElementById("fancybox-style-noscroll");
				t && t.remove();
			}
			clearContent(t) {
				this.Carousel.trigger("removeSlide", t),
					t.$content && (t.$content.remove(), (t.$content = null)),
					t.$closeButton && (t.$closeButton.remove(), (t.$closeButton = null)),
					t._className && t.$el.classList.remove(t._className);
			}
			setContent(t, e, i = {}) {
				let s;
				const n = t.$el;
				if (e instanceof HTMLElement)
					-1 <
					["img", "iframe", "video", "audio"].indexOf(e.nodeName.toLowerCase())
						? (s = document.createElement("div")).appendChild(e)
						: (s = e);
				else {
					const t = document.createRange().createContextualFragment(e);
					(s = document.createElement("div")).appendChild(t);
				}
				if (
					(s = t.filter && !t.error ? s.querySelector(t.filter) : s) instanceof
					Element
				)
					return (
						(t._className = "has-" + (i.suffix || t.type || "unknown")),
						n.classList.add(t._className),
						s.classList.add("fancybox__content"),
						("none" !== s.style.display &&
							"none" !== getComputedStyle(s).getPropertyValue("display")) ||
							(s.style.display =
								t.display || this.option("defaultDisplay") || "flex"),
						t.id && s.setAttribute("id", t.id),
						(t.$content = s),
						n.prepend(s),
						this.manageCloseButton(t),
						"loading" !== t.state && this.revealContent(t),
						s
					);
				this.setError(t, "{{ELEMENT_NOT_FOUND}}");
			}
			manageCloseButton(t) {
				var e =
					void 0 === t.closeButton ? this.option("closeButton") : t.closeButton;
				if (e && ("top" !== e || !this.$closeButton)) {
					const i = document.createElement("button");
					i.classList.add("carousel__button", "is-close"),
						i.setAttribute("title", this.options.l10n.CLOSE),
						(i.innerHTML = this.option("template.closeButton")),
						i.addEventListener("click", (t) => this.close(t)),
						"inside" === e
							? (t.$closeButton && t.$closeButton.remove(),
							  (t.$closeButton = t.$content.appendChild(i)))
							: (this.$closeButton = this.$container.insertBefore(
									i,
									this.$container.firstChild
							  ));
				}
			}
			revealContent(t) {
				this.trigger("reveal", t), (t.$content.style.visibility = "");
				let e = !1;
				(e =
					t.error ||
					"loading" === t.state ||
					null !== this.Carousel.prevPage ||
					t.index !== this.options.startIndex
						? e
						: void 0 === t.showClass
						? this.option("showClass")
						: t.showClass)
					? ((t.state = "animating"),
					  this.animateCSS(t.$content, e, () => {
							this.done(t);
					  }))
					: this.done(t);
			}
			animateCSS(e, i, s) {
				if (
					(e &&
						e.dispatchEvent(
							new CustomEvent("animationend", { bubbles: !0, cancelable: !0 })
						),
					e && i)
				) {
					const n = function (t) {
						t.currentTarget === this &&
							(e.removeEventListener("animationend", n),
							s && s(),
							e.classList.remove(i));
					};
					e.addEventListener("animationend", n), e.classList.add(i);
				} else "function" == typeof s && s();
			}
			done(t) {
				(t.state = "done"), this.trigger("done", t);
				var e = this.getSlide();
				e && t.index === e.index && this.option("autoFocus") && this.focus();
			}
			setError(t, e) {
				(t.error = e), this.hideLoading(t), this.clearContent(t);
				const i = document.createElement("div");
				i.classList.add("fancybox-error"),
					(i.innerHTML = this.localize(e || "<p>{{ERROR}}</p>")),
					this.setContent(t, i, { suffix: "error" });
			}
			showLoading(t) {
				(t.state = "loading"), t.$el.classList.add("is-loading");
				let e = t.$el.querySelector(".fancybox__spinner");
				e ||
					((e = document.createElement("div")).classList.add(
						"fancybox__spinner"
					),
					(e.innerHTML = this.option("template.spinner")),
					e.addEventListener("click", () => {
						this.Carousel.Panzoom.velocity || this.close();
					}),
					t.$el.prepend(e));
			}
			hideLoading(t) {
				const e = t.$el && t.$el.querySelector(".fancybox__spinner");
				e && (e.remove(), t.$el.classList.remove("is-loading")),
					"loading" === t.state &&
						(this.trigger("load", t), (t.state = "ready"));
			}
			next() {
				const t = this.Carousel;
				t && 1 < t.pages.length && t.slideNext();
			}
			prev() {
				const t = this.Carousel;
				t && 1 < t.pages.length && t.slidePrev();
			}
			jumpTo(...t) {
				this.Carousel && this.Carousel.slideTo(...t);
			}
			close(t) {
				if (
					(t && t.preventDefault(),
					!["closing", "customClosing", "destroy"].includes(this.state) &&
						!1 !== this.trigger("shouldClose", t) &&
						((this.state = "closing"),
						this.Carousel.Panzoom.destroy(),
						this.detachEvents(),
						this.trigger("closing", t),
						"destroy" !== this.state))
				) {
					this.$container.setAttribute("aria-hidden", "true"),
						this.$container.classList.add("is-closing");
					const e = this.getSlide();
					if (
						(this.Carousel.slides.forEach((t) => {
							t.$content &&
								t.index !== e.index &&
								this.Carousel.trigger("removeSlide", t);
						}),
						"closing" === this.state)
					) {
						const t =
							void 0 === e.hideClass ? this.option("hideClass") : e.hideClass;
						this.animateCSS(
							e.$content,
							t,
							() => {
								this.destroy();
							},
							!0
						);
					}
				}
			}
			destroy() {
				if ("destroy" !== this.state) {
					(this.state = "destroy"), this.trigger("destroy");
					var t = this.option("placeFocusBack")
						? this.getSlide().$trigger
						: null;
					this.Carousel.destroy(),
						this.detachPlugins(),
						(this.Carousel = null),
						(this.options = {}),
						(this.events = {}),
						this.$container.remove(),
						(this.$container = this.$backdrop = this.$carousel = null),
						t && M(t),
						$.delete(this.id);
					const e = O.getInstance();
					e
						? e.focus()
						: (document.documentElement.classList.remove("with-fancybox"),
						  document.body.classList.remove("is-using-mouse"),
						  this.revealScrollbar());
				}
			}
			static show(t, e = {}) {
				return new O(t, e);
			}
			static fromEvent(o, a = {}) {
				if (
					!o.defaultPrevented &&
					!(
						(o.button && 0 !== o.button) ||
						o.ctrlKey ||
						o.metaKey ||
						o.shiftKey
					)
				) {
					var r = o.composedPath()[0];
					let t,
						i,
						s,
						n = r;
					if (
						(t =
							n.matches("[data-fancybox-trigger]") ||
							(n = n.closest("[data-fancybox-trigger]"))
								? n && n.dataset && n.dataset.fancyboxTrigger
								: t)
					) {
						const o = document.querySelectorAll(`[data-fancybox="${t}"]`),
							a = parseInt(n.dataset.fancyboxIndex, 10) || 0;
						n = o.length ? o[a] : n;
					}
					(n = n || r),
						Array.from(O.openers.keys())
							.reverse()
							.some((t) => {
								s = n;
								let e = !1;
								try {
									s instanceof Element &&
										("string" == typeof t || t instanceof String) &&
										(e = s.matches(t) || (s = s.closest(t)));
								} catch (t) {}
								return !!e && (o.preventDefault(), (i = t), !0);
							});
					let e = !1;
					if (i) {
						(a.event = o),
							((a.target = s).origTarget = r),
							(e = O.fromOpener(i, a));
						const t = O.getInstance();
						t &&
							"ready" === t.state &&
							o.detail &&
							document.body.classList.add("is-using-mouse");
					}
					return e;
				}
			}
			static fromOpener(t, e = {}) {
				let i = [],
					s = e.startIndex || 0,
					n = e.target || null;
				const o =
						void 0 !== (e = p({}, e, O.openers.get(t))).groupAll && e.groupAll,
					a = void 0 === e.groupAttr ? "data-fancybox" : e.groupAttr,
					r = a && n ? n.getAttribute("" + a) : "";
				if (!n || r || o) {
					const l = e.root || (n ? n.getRootNode() : document.body);
					i = [].slice.call(l.querySelectorAll(t));
				}
				if (
					!(i =
						n && !o
							? r
								? i.filter((t) => t.getAttribute("" + a) === r)
								: [n]
							: i).length
				)
					return !1;
				t = O.getInstance();
				return (
					!(t && -1 < i.indexOf(t.options.$trigger)) &&
					((s = n ? i.indexOf(n) : s),
					(i = i.map(function (t) {
						const e = ["false", "0", "no", "null", "undefined"],
							i = ["true", "1", "yes"],
							s = Object.assign({}, t.dataset),
							n = {};
						for (var [o, a] of Object.entries(s))
							if ("fancybox" !== o)
								if ("width" === o || "height" === o) n["_" + o] = a;
								else if ("string" == typeof a || a instanceof String)
									if (-1 < e.indexOf(a)) n[o] = !1;
									else if (-1 < i.indexOf(n[o])) n[o] = !0;
									else
										try {
											n[o] = JSON.parse(a);
										} catch (e) {
											n[o] = a;
										}
								else n[o] = a;
						return t instanceof Element && (n.$trigger = t), n;
					})),
					new O(i, p({}, e, { startIndex: s, $trigger: n })))
				);
			}
			static bind(t, e = {}) {
				function i() {
					document.body.addEventListener("click", O.fromEvent, !1);
				}
				A &&
					(O.openers.size ||
						(/complete|interactive|loaded/.test(document.readyState)
							? i()
							: document.addEventListener("DOMContentLoaded", i)),
					O.openers.set(t, e));
			}
			static unbind(t) {
				O.openers.delete(t), O.openers.size || O.destroy();
			}
			static destroy() {
				let t;
				for (; (t = O.getInstance()); ) t.destroy();
				(O.openers = new Map()),
					document.body.removeEventListener("click", O.fromEvent, !1);
			}
			static getInstance(t) {
				return t
					? $.get(t)
					: Array.from($.values())
							.reverse()
							.find(
								(t) =>
									!["closing", "customClosing", "destroy"].includes(t.state) &&
									t
							) || null;
			}
			static close(t = !0, e) {
				if (t) for (const t of $.values()) t.close(e);
				else {
					const t = O.getInstance();
					t && t.close(e);
				}
			}
			static next() {
				const t = O.getInstance();
				t && t.next();
			}
			static prev() {
				const t = O.getInstance();
				t && t.prev();
			}
		}
		(O.version = "4.0.27"),
			(O.defaults = pe),
			(O.openers = new Map()),
			(O.Plugins = e),
			O.bind("[data-fancybox]");
		for (const [g, ve] of Object.entries(O.Plugins || {}))
			"function" == typeof ve.create && ve.create(O);
		jQuery(document).ready((t) => {
			var [e = null] = [];
			new z(e),
				new h(".c-modal", ".l-modal-container"),
				(window.isLoginError ||
					(window.location.pathname == "/??checkout/" &&
						"0" == themeVars.userID)) &&
					setTimeout(
						() =>
							document
								.querySelectorAll(".site-login.function-toggle")
								.forEach((t) => t.click()),
						500
					),
				new N(e),
				new q(e),
				new Tt(e),
				Yt(),
				Xt(),
				Zt();
		});
	},
]);
